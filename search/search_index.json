{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Projects/8-bit/","title":"8-bit Breadboard Computer","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/8-bit/#8-bit-breadboard-computer-build-log","title":"8-bit Breadboard Computer - Build Log","text":"Teddy Warner| 2021-2022 |  X-X minutes <p>I\u2019ve used microcontrollers in most of my past projects. IC data sheets are super helpful in board design with their pinouts, but I\u2019ve noticed much of the contents have been pretty foreign to me. Every once in a while, the youtube algorithm recommended one of Ben Eater\u2019s computer concept videos to me, which provide a great explanation of the simplistic logic and proofs in computers. I ended up watching his entire 8-bit Breadboard Computer series (embedded below) over the fall of 2021, to try to get a bit of a better idea of the workings of a microcontroller. The computer is an \u201cas simple as possible\u201d<sup>1</sup> take on an 8-bit computer, using only simple logic to create an 8-bit computer on breadboards. The computer is built-in sectioned modules and then interfaced together, making each section a bit easier to swallow.</p> <p>Documentation Style</p> <p>This page is a bit different than my other project pages, as it is a build log for my take on this 8-bit Breadboard Computer. Instead of outlining project development (as Mr. Eaters\u2019 videos do an amazing job with that), this page will be a collection of media behind each of my computer modules, as well as some final programs ran on the computer.</p>"},{"location":"Projects/8-bit/#bill-of-materials","title":"Bill of Materials","text":"Qty. Description Cost URL 14 Breadboard $112 link 10 1k\u03a9 resistor 9 10k\u03a9 resistor 1 100k\u03a9 resistor 24 470\u03a9 resistor 1 1M\u03a9 resistor $16.99 link 1 1M\u03a9 potentiometer $1.39 link 6 0.01\u00b5F capacitor $1.20 link 16 0.1\u00b5F capacitor $3.00 link 1 1\u00b5F capacitor $0.15 link 4 555 timer IC $0.63 link 2 74LS00 (Quad NAND gate) $0.76 link 1 74LS02 (Quad NOR gate) $0.76 link 5 74LS04 (Hex inverter) $0.87 link 3 74LS08 (Quad AND gate) $0.72 link 1 74LS32 (Quad OR gate) $0.89 link 1 74LS107 (Dual JK flip-flop)Note: The videos use the 74LS76 which is extremely difficult to find. The 74LS107 is functionally equivalent but be careful: it has a different pinout. $1.58 link 2 74LS86 (Quad XOR gate) $1.11 link 1 74LS138 (3-to-8 line decoder) $0.80 link 1 74LS139 (Dual 2-line to 4-line decoder) $1.55 link 4 74LS157 (Quad 2-to-1 line data selector) $1.58 link 2 74LS161 (4-bit synchronous binary counter) $1.95 link 8 74LS173 (4-bit D-type register) $1.45 link 2 74189 (64-bit random access memory) $9.90 link 6 74LS245 (Octal bus transceiver) $1.26 link 1 74LS273 (Octal D flip-flop) $1.99 link 2 74LS283 (4-bit binary full adder) $1.38 link 3 28C16 EEPROM $11.85 link 3 Double-throw toggle switch $2.97 link 3 Momentary 6mm tact switch $1.05 link 1 8-position DIP switch $0.79 link 1 4-position DIP switch $0.79 link 44 Red LED 8 Yellow LED 12 Green LED 21 Blue LED $12.99 link 4 Common cathode 7-segment display $4.36 link 1 22 AWG Solid Tinned-Copper Hook-Up Wire $29.95 link <p>\u2014 Total Cost - $228.66 \u2014</p>"},{"location":"Projects/8-bit/#clock-module","title":"Clock Module","text":"Clock vs Capacitor"},{"location":"Projects/8-bit/#registers","title":"Registers","text":""},{"location":"Projects/8-bit/#arithmetic-logic-unit-alu","title":"Arithmetic Logic Unit (ALU)","text":""},{"location":"Projects/8-bit/#random-access-memory-module-ram","title":"Random Access Memory Module (RAM)","text":""},{"location":"Projects/8-bit/#program-counter","title":"Program Counter","text":""},{"location":"Projects/8-bit/#output-register","title":"Output Register","text":""},{"location":"Projects/8-bit/#module-meshing","title":"Module Meshing","text":""},{"location":"Projects/8-bit/#cpu-control-logic","title":"CPU Control Logic","text":""},{"location":"Projects/8-bit/#fibonacci-sequence","title":"Fibonacci Sequence","text":"<p>First 12 Numberes in the Fibonacci Sequence</p> n Fibonacci Number 0 0 1 1 2 1 3 2 4 3 5 5 6 8 7 13 8 21 9 34 10 55 11 89 <ol> <li> <p>https://eater.net/8bit\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/AdaptableAquaponics/","title":"Adaptable Aquaponics","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/AdaptableAquaponics/#adaptable-aquaponics","title":"Adaptable Aquaponics","text":"Teddy Warner| Summer, 2022 |  18-23 minutes <p>A Theoretical Confrontation to Contemporary Farming Challenges.</p> <p>Paralleling the growth of the global human population, the increased strain is placed on ever-expanding food production. Following current population growth trends, the United Nation\u2019s Food and Agricultural Organization (FAO) predicts a required 70% growth in food production by 2050 to adequately match global needs.<sup>1</sup> As of 2020, 9.9% of the present human population faced undernourishment with an estimated 720 and 811 million humans going hungry. Continued reliance on current insufficient North American Agriculture practices will bolster inadequate access to nutrition. Seedstock.com divides problems with contemporary agricultural practices into categories including \u2026</p> <ul> <li>Resource Depletion - The Costs of Industrial Agriculture</li> <li>Land Management - Degrading and Undervaluing Farmland</li> <li>Food Waste - Compromising Food Security</li> <li>Demographic Changes - A Disconnected Public</li> </ul> <p>Addressing the developing demand for food requires a direct confrontation with each of these four challenges and opens the door for sustainable alternatives to classic agricultural practices - massive potential for entrepreneurial pursuit. Aquaponics offers the potential to address the problems of contemporary agricultural practices whilst demonstrating scientific principles and modeling biological cycles for the education of a local community. \u201cAquaponics is a form of agriculture that combines raising fish in tanks (recirculating aquaculture) with soilless plant culture (hydroponics). In aquaponics, the nutrient-rich water from raising fish provides a natural fertilizer for the plants and the plants help to purify the water for the fish\u201d, and this is a sustainable method to both raise fish and grow crops.<sup>2</sup></p> <p> </p> <p>Adaptable Aquaponics serves as a theoretical successor to my Assistive Aquaponics Fish Tank, a small-scale, self-sustaining ecosystem, with the hopes ofexpanding the accessibility of successful &amp; thriving aquaponics ecosystems to individuals. While the Assistive Aquaponics Fish Tank is equipped to enable access to aquaponics at an individual level, economic optimization of the project came second to maintaining a sleek design hoping to catalyze in-house acceptance of the product. Adaptable Aquaponics offers some contrasting design choices with the goal of addressing all four categories of contemporary agricultural challenges and addressing the current bottlenecks of global nutrition.</p> <p>Both the Fusion 360 model and the prototyping mesh &amp; SVG files for this project can be accessed via the button below. These files can be used and altered with attribution, as stated and enforced by my project license. In addition to the files included in this downloads folder, please note that Fusion 360 source files can be accessed with the Open in Fusion 360 button in the bottom right-hand corner of each of the embedded designs on this page. The renders of my Adaptable Aquaponics model utilize the Ulmer Muenster HDRI from polyhaven.com in their environment. Additionally, this model\u2019s Solar Panels, Water Pump &amp; Casters are altered files from CAD libraries.</p> <p>Adaptable Aquaponics Files </p> <p>Make it Modular</p> <p></p> <p>Adaptive Aquaponics is the scaled successor to my Assistive Aquaponics Fish Tank &amp; my winning entry into Autodesk Instructable\u2019s Make It Modular student design challenge receiving the Autodesk Construction Solutions Scholarship Award. Be sure to check Adaptable Aquaponics out on instructables!</p>"},{"location":"Projects/AdaptableAquaponics/#cad-fusion-360","title":"CAD - Fusion 360","text":"<p>Being the theoretical successor to my Assistive Aquaponics Fish Tank, the CAD for Adaptable Aquaponics utilizes the same \u201cskeleton\u201d of a closed-loop water circulation system, incorporating a remixed version of my Assistive Aquaponics Fish Tank\u2019s plant box. Each \u201cAquaponics Cell\u201d in Adaptable Aquaponics (I\u2019ll touch on the distinction of these mentioned modules later in this section) contains eight individual plant boxes, each with a volume over two times as great as the smaller plant box of my Assistive Aquaponics Fish Tank. These up-scaled cells have been altered to ensure proper water flow at a larger scale, and are linked in series via several pipes to a Biofilter housed on the \u201cAquaponics Rack\u201d. Unlike in a small-scale ecosystem such as my Assistive Aquaponics Fish Tank, a biofilter is an essential component of a large-scale aquaponics setup. The filter expands the surface area of your system, providing ample space for the nitrogen cycle to occur.</p> <p>Following the Assistive Aquaponics Fish Tank once more, Adaptable Aquaponics is a cross between a Nutrient Film &amp; Media Bed aquaponics system. As water is pumped into each plant box from the biofilter, it continuously flows along the sloping profile of the plant box\u2019s bed, passing through the plant roots, before exiting the plant box through a waterfall-esk exit slit &amp; draining into the fish tank below. Plant beds &amp; fish tanks are placed in an eight-to-one ratio in each \u201cAquaponics Cell\u201d, a stack in contrast to the small tank and one-to-one ratio of the Assistive Aquaponics Fish Tank. Opting for a larger fish tank increases the output efficiency of an aquaponics farm. Instead of being restrained to small-scale aquaculture (such as goldfish in my Assistive Aquaponics Fish Tank), hardier fish such as Tilapia &amp; Catfish can be farmed - making the food output of the farms even more efficient. Water is pumped out through a drain pipe at the bottom of each tank, flowing through a sediment tank located on the \u201cAquaponics Rack\u201d before into the water pump &amp; then back into the biofilter. Parraling the system\u2019s inclusion of a larger tank for larger fish, a sediment tank is a must to free the system of excessive fish waste, allowing for maintained water clarity. Heavy waste carried in by the stream of water in the system will sink to the bottom of the sediment tank under conditions of low flow.</p> <p>The principle behind my design work on Adaptable Aquaponics parallels the \u201ccircles of progress\u201d model, where you begin by achieving the core minimum viable product, and expanding the diameter of your \u201ccircle\u201d, inflating your project with more layers of progress. Though this isn\u2019t my suggested approach to CAD, I found using the \u201ccircles of progress\u201d mindset useful while thinking of the modularity scales in my file.</p> Aquaponics Cell Adaptable Aquaponics System <p>Adaptable Aquaponics is constructed with layered modularity, a distinction highlighted by the component layering in my Fusion browser. </p> <p></p> <p>Eight Individual plant boxes make up a single aquaponics cell, two aquaponics cells make up a single aquaponics rack, and two aquaponics racks are housed inside of a single shipping container. The scaling of modularity allows for application scaling to be applied to Adaptable Aquaponics. A single plant box could be used in the form factor of my Assistive Aquaponics Fish Tank, or multiple Adaptable Aquaponic Shipping Containers could be housed in parallel to allow for large-scale farming. Modularity in the case of Adaptable Aquaponics not only enables future iteration &amp; reconfiguration but also the scaling of the ecosystem itself - meeting the needs of any potential consumers - ranging from individual to community.</p>"},{"location":"Projects/AdaptableAquaponics/#computational-design","title":"Computational Design","text":"<p>Shifting to an analysis of the CAD work behind Adaptable Aquaponics, I was super stoked to get to experiment with Fusion 360\u2019s new Automated Modeling tool! I used automated modeling to generate an optimized vertical support structure for my systems aquaponics rack, as well as for the angled mounts for adaptable aquaponics solar panels. The tool can be found under the Automate menu in the toolbar. </p> <p></p> <p>Automated modeling is about as intuitive as you can get, requiring only three inputs to generate a body - Faces to Connect, Bodies to Avoid &amp; Operation type. I began the computational design work of my aquaponics rack outside of the automated modeling tool itself, but instead by creating both the top and bottom plates of my Aquaponics rack &amp; attaching 6 mounting points to each sheet. Then, working around the prepositioned Aquaponics Cells, biofilter &amp; sediment tank, I created shelves to hold the content of the racks, unattached to support. I then opened the automated modeling tool and selected the previously created mounting points on both the top and bottom plates as well as each shelf with the Faces to Connect selection tool. Note, that there are three individual vertical supports on each Aquaponics rack, so I selected a corresponding set of 1/3 of the total created faces for each automated operation. I moved on to the Bodies to Avoid selection tool, highlighting the components of each Aquaponics Cell, the biofilter &amp; the sediment tank closest to the selected points of connection. I was careful here to only select crucial bodies to avoid, not all in the model - the fewer input selections, the faster computation time. With these selected inputs, I generated a design with a New Body operation.</p> <p> </p> Bodies to Avoid are highlighted red, while Faces to Connect are highlighted in blue <p>After ~10 Mins, the Automated Modeling menu presented me with 6 generated bodies under the Alternatives menu. You can click through these generated bodies to see them in the workspace, before finalizing your selection with the Ok button. I repeated this generation for the two other vertical supports on the Aquaponics Rack, choosing a visually similar generation between all three to keep consistency to the rack. Computationally designed bodies can also be seen in the solar panel mounts located on the roof of Adaptable Aquaponics. These bodies followed a similar workflow, where I connected the back face of each solar panel to pre-created mounting points.</p>"},{"location":"Projects/AdaptableAquaponics/#3d-plumbing","title":"3D Plumbing","text":"<p>The complex spatial routing of Adaptable Aquaponics plumbing required the use of Fusion 360\u2019s ability to sketch non-planar line sand splines. To enable this feature, click on your user icon in the top right of the window &amp; navigate to \u2026</p> <pre><code>Preferences &lt; Design &lt; Allow 3D sketching of lines and splines\n</code></pre> <p>\u2026 and toggle this option on. Be sure to click Apply in the bottom right-hand corner of the Preferences menu before exiting.</p> <p></p> <p>Fusion 360\u2019s non-planar sketching allows spline points to be removed from their initial sketch plane and routed to other planes. Once a point is placed on a 3D spline, Fusion allows for the alteration of direction in three dimensions before you place the next point. </p> <p></p> <p>Beginning from the intake valve of each plant box, I routed a spline to a t-connector before using the Pipe tool with each routed spline as a reference - leaving me with all of the plant boxes in a given Aquaponics Cell routed in series. Additionally, 3D splines were used to route the plumbing from each fish tank to the sediment tank, from the sediment tank to the water pump, from the water pump to the biofilter, and from the biofilter back to the plant boxes.</p>"},{"location":"Projects/AdaptableAquaponics/#rendering-fusion-360","title":"Rendering - Fusion 360","text":"<p>Once Adaptable Aquaponics was finalized - the 95th iteration \u2026 phew - I continued to Fusion 360\u2019s rendering workspace.</p> <p></p> <p>I began by setting up the renders scene by navigating to \u2026</p> <pre><code>Setup &lt; Scene Settings &lt; Environment Library\n</code></pre> <p>\u2026 where I chose to upload a custom HDRI backdrop. </p> <p> </p> <p>As mentioned earlier on this page, I chose the Ulmer Muenster HDRI from polyhaven.com as my backdrop, as the scene offers a compromise of beauty and urban (not that those are mutually exclusive) - preserving the largest of my envisioned use cases for Adaptable Aquaponics, urban farming (stay tuned for the next section!). Once my HDRI backdrop was uploaded, I navigated back to \u2026</p> <pre><code>Setup &lt; Scene Settings\n</code></pre> <p>\u2026 where I took a trial and error approach to tune the renders Environment, Ground &amp; Camera settings until I was left with some nice looking renders! Check them out below!</p> <p> </p>"},{"location":"Projects/AdaptableAquaponics/#addressing-the-current-bottlenecks-of-global-nutrition","title":"Addressing the Current Bottlenecks of Global Nutrition","text":""},{"location":"Projects/AdaptableAquaponics/#resource-depletion-the-costs-of-industrial-agriculture","title":"Resource Depletion - The Costs of Industrial Agriculture","text":"<p>Contemporary agriculture is completely dependent on non-renewable materials. Dependence on fossil fuels is not only not a sustainable practice that is damaging our planet but jeopardizes the future of our agricultural stability. With rigid dependence, how do we expect to handle the extinction of a non-renewable? Adaptable Aquaponics offers a solar-powered solution, completely independent of any non-renewables &amp; costly electric bills that hinder access in communities facing a scarcity of access. Though the elimination of dependencies is crucial to making Adaptable Aquaponics a sustainable solution to contemporary farming challenges, the vertical integration of the system offers a Carnegie-esk entrepreneurial venture, ensuring freedom from the potentially binding agreement for resources.</p> <p>Data from the US Geological Society shows rainfall patterns \u201cmay become less predictable and dependable\u201d, while the amount of groundwater \u201cdrawn for use in irrigation has tripled since the 1950s\u201d.<sup>3</sup> Though, unlike fossil fuels, water is a renewable resource, freshwater has its limits. Considering nearly 70% of all freshwater used by humans is used in agriculture, addressing water usage is a warranted concern. When compared to standard agricultural practices, Aquaponics requires 90 to 99% less water.<sup>4</sup> Similar to the potential lack of electricity access, Adaptive Aquaponics offers communities with a shortage or imposition in access to water a sustainable agricultural alternative, while also offering entrepreneurs another opportunity to continue to vertically integrate.</p>"},{"location":"Projects/AdaptableAquaponics/#land-management-degrading-and-undervaluing-farmland","title":"Land Management - Degrading and Undervaluing Farmland","text":"<p>Faulty land management techniques have stripped soil from its nutrients, requiring fertilizers to aid plant growth. The nature of aquaponics replaces any dependency on soil with nutrients from the nitrogen cycle - a naturally occurring ecosystem that can run independently from fertilizers. Adaptive Aquaponics\u2019 cross between a Nutrient Film &amp; Media Bed aquaponics system preserves the dirt-free nature of hydroponics, whilst maintaining a small, modular structure of its plant boxes. The modular nature of adaptive aquaponics allows the system to potentially thrive regardless of scale and location, opening the door for urban farming!</p>"},{"location":"Projects/AdaptableAquaponics/#food-waste-demographic-changes","title":"Food Waste &amp; Demographic Changes","text":"<p>The UN estimates that 1/3 \u201cof the world\u2019s food goes to waste, either during agricultural production, post-harvest handling, and storage, processing, distribution, or consumption\u201d.<sup>3</sup> The modular nature of Adaptive Aquaponics ensures adequate scaling of agriculture in a given population. The compacted form factor and potential for urban or harsh environment farming enable the growth of food locally to a population. Instead of depending on agricultural preservation, processing, storage, and distribution, providing a community with Adaptable Aquaponics enables full control over food production, ensuring neither over nor under production. Interaction with agriculture at a community scale may remove the barrier between farming communities and consumers and hopefully, will catalyze a shift from to favor \u201cconservation over convenience\u201d thus regulating agriculture to ensure adequate food is provided.<sup>3</sup></p>"},{"location":"Projects/AdaptableAquaponics/#scale-prototyping","title":"Scale Prototyping","text":"<p>As has seemingly become a trend across my work, I attempted to use a plethora of digital fabrication in the creation of my scale model. My model is a 2.3% scale prototype of Adaptable Aquaponics, fabricated with both additive and subtractive processes. Shout out to @taimakestuff who was my lab buddy @makerspaceCharlotte while I ground out this project\u2019s post-processing :)</p> <p>Computationally designed elements utilize organic surveys to ensure optimal geometry for both strength and efficiency, thus the perfect partner for additive manufacturing. I opted to 3D print all elements of my scale model that utilized Fusion 360\u2019s Automated Modeling, including the shipping container with its solar panel mounts &amp; Aquaponics Rack with its vertical supports. I also printed the contents of each aquaponics rack to achieve the highest accuracy to the draft angles and plumbing locations on the bodies. All parts for this project were printed on my Prusa I3 MK3S+ with a 0.4mm nozzle at a 0.3mm layer height. I chose a white PETG, along with a pretty aggressive layer height to allow for ease of post-processing &amp; painting of the model.</p> <p> </p> <p>PETG is my go-to generic 3D printing material, however, it really shines when faced with post-processing. PETG takes well to sanding and is overall rather easy to clean up. One of my favorite tricks is taking hot air from a hair-dryer to a PETG printed part. The hot air shrivels any stringing or surface defects into masses that fall off after rubbing your finger over the surface.</p> <p></p> <p>I was lucky enough to stumble across some gloss black acrylic in the scrap bin @makerspaceCharlotte, which I used to create Adaptable Aquaponic\u2019s solar panels. This was my first time using the lasers @makerspaceCharlotte, and the machine that I was on ran a different wattage than the lasers at the Charlotte Latin Fab Lab (my school\u2019s lab &amp; my workplace) so I began with a bit of research into optimal cut settings. After altering the laser focus to achieve the desired (slightly thickened beam) effect, I began batch cutting the model solar panels.</p> <p>Note the other test cuts on the stock material above. Though for the sake of focusing on Adaptable Aquaponics and not the prototyping process I\u2019ve chosen to not mention much of the prototyping behind this physical model. I usually include ample prototyping content in my articles, so it felt necessary to call attention to the test cuts here :)</p> <p>I cleaned up the final cut parts with some soap and water, before continuing to attach each solar panel to its 3D printed mount &amp; then to the roof of the Adaptable Aquaponics shipping container.</p> <p> </p> <p></p> <p>I followed up my acrylic cutting with the wooden base and top to each Aquaponics Rack. Unfortunately, I didn\u2019t have access to any 1/8\u201d ply, so I had to do some prep work with a piece of 1/4\u201d plywood stock. I planned the surface of my stock material on a drum-sander until down to just below 1/8\u201d. I then focused the laser to this stock &amp; cut all four planks.</p> <p>The glue up of these shelves was a bit finicky, as my fingers just seem to be a super glue magnet - but eventually, I got both Aquaponics Racks complete with their plants, vertical support, shelves, Aquaponics Cells, biofilter &amp; sediment tank, and then installed them inside the shipping container.</p> <p> </p> <p>As a finishing touch, I used a Cricut Explore Air 2 to cut the sign attached to the side of Adaptable Aquaponics from vinyl. Though I\u2019ve made dozens upon dozens of stickers with the same workflow, the scale of this logo proved to be a bit of a challenge. I not only had difficulties weeding the cut vinyl at such a small scale, but the machine itself was ripping up parts of the design upon retraction. I ended up altering the cut settings to a custom array as suggested by sofontsy.com, using the Washi Sheet default with a pressure set to More. With these settings, I was able to get a clean enough cut that I could weed the sticker, layer the two colors, and then apply to the side of the Adaptable Aquaponics model.</p> <p></p>"},{"location":"Projects/AdaptableAquaponics/#glory-shots","title":"Glory Shots","text":"<p>With the design and prototyping completed, I headed out to my local strip mall for a photo op, only getting a couple of strange looks from shoppers wondering what the boy in the old-navy pajama pants was doing taking pictures of a miniature in the middle of the parking lot. But it was worth it! As opposed to settling for a diorama background, or just pictures of my model on my workbench, I highlighted a legitimate potential environment for such a product, and I promise you, when Adaptable Aquaponics hits full scale in a parking lot, the shoppers won\u2019t be blown away by my magnificent fashion choices, but instead by the wonders of Aquaponics!</p> <ol> <li> <p>https://www.un.org/en/global-issues/food\u00a0\u21a9</p> </li> <li> <p>https://aquaponics.com/\u00a0\u21a9</p> </li> <li> <p>http://seedstock.com/2012/04/18/five-major-challenges-facing-north-american-agriculture/\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>https://earth.org/data_visualization/aquaponics-a-solution-to-food-insecurity/\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/AssistiveAquaponics/","title":"Assistive Aquaponics Fish Tank","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/AssistiveAquaponics/#assistive-aquaponics-fish-tank","title":"Assistive Aquaponics Fish Tank","text":"Teddy Warner|  Winter-Spring, 2021 |  83\u2013105 minutes"},{"location":"Projects/AssistiveAquaponics/#final-project-concept","title":"Final Project Concept","text":"<p>I\u2019ve always had an interest in having my own home garden capable of growing plants and herbs, as I enjoy the access to fresh foods, however, my past attempts at gardening always seemed to be relatively fruitless. Due to my structured high school student schedule, I am usually not around to look after and take care of a garden, and thus, this want for fresh foods hasn\u2019t become a reality. My interest in my Fab Academy final project came from this interest in having a home garden that could morph to my tight high school schedule. I started brainstorming this concept and found many projects and articles that were helpful or influential to my idea, some of them being Gardening + Arduino, Garduino, DIY Home Assistant Garden Automation System, Raspberry Pi Powered IOT Garden, and the Advanced Irrigation System. Although looking at projects like these gave me some inspiration, I have many personal design factors that have also helped me form my idea. I started the Fab Academy course with the idea of an Automated Windowsill Garden for my final project, talked about on my Orginal Project Concept page, however as I began work through the class, I expanded on the idea. After talking with Professor Neil Gershenfeld about my Final Project concept in the Computer-Aided Design week lecture, I began to alter my idea from this windowsill box garden, into a garden in a different form factor. While discussing my windowsill box concept, Neil suggested some research into the world of \u2018ponics\u2019, the techniques of growing plantlife without soil, where plant roots are placed in a water-mineral solution and fed with liquid fertilizers. After some research, I found the practice of Aquaponics especially appealing to me. \u201cAquaponics is a system of producing food that combines aquaculture (raising fish, snails, or prawns) and hydroponics (growing plants in water). It can be an elegant closed system whereby the fish produce waste which, in turn, circulates to feed the plants which, in turn, purify the water for the next school of aquatic generations\u201d (The Evolution of \u201cPonics\u201d in Organic). The second thought that also leads me to this change was the form factor of the projects themselves. I attend Fab Academy classes on my Highschool campus after I finished my school day, and carrying in a windowsill box like a coffin to and from our lab every day would be impractical. With this form factor issue comes my third motivation for this change, my family may be moving houses in the upcoming months, and I would not want to build a windowsill box to fit a windowsill on a house that I may not even live in by the end of this course. With all of these thoughts in mind, I was still committed to the idea of a Garden in general, and settled on an aquaponic garden in a fish tank-like form factor, with the plants growing on top of the tank itself. This not only solves my transportation problem, but a fish tank-style aquaponic garden could be placed inside, and then be moved from house to house. </p>"},{"location":"Projects/AssistiveAquaponics/#reasearch-planning-sketches","title":"Reasearch, Planning &amp; Sketches","text":"<p>Before starting work on designing, manufacturing, and running an aquaponics system, I set off to learn about the practice of aquaponics more in-depth. As stated previously, \u201cAquaponics is a system of producing food that combines aquaculture (raising fish, snails, or prawns) and hydroponics (growing plants in water). It can be an elegant closed system whereby the fish produce waste which, in turn, circulates to feed the plants which, in turn, purify the water for the next school of aquatic generations\u201d (The Evolution of \u201cPonics\u201d in Organic). An Aquaponics system is thus an ecosystem shaped like a closed circle, where each step leads to the next until returned to where the system started. I jotted down this \u201cCircle\u201d concept in the diagram shown below, listing out each step taken in the system to return to the starting place.</p> <p> Aquaponics Circle Diagram - System of Recirulation </p> <p> Aquaponics System Diagram - A more Colorful System Depiction </p> <p>When in balance, six steps create a successful aquaponics ecosystem, where all parts of the system rely on the others, a process known as recirculation. The aquatic life of the tank contributes poop and waste food into the ecosystem, creating ammonia, a toxin for the fish, in the water in the process. This generated ammonia is then converted into helpful Nitrites, and eventually, Nitrates by bacteria in the system through a natural process called The Nitrification Cycle, after which, the system\u2019s plants absorb these Nitades as plant food, filtering the water in the process, and therefore the eliminating any harmful ammonia in the system\u2019s water, returning the system to its starting place. The six major players in the system, Fish, Plants, Bacteria, Ammonia, Nitrites, and Nitrates, rotate around this six-step ecosystem repeatedly, and when kept intolerance with each other, create the thriving aquaponics ecosystem I\u2019m looking for in creating my aquaponics fish tank. In The Effectiveness of Aquaponic Compared to Modified Conventional Aquaculture for Improved of Ammonia, Nitrite, and Nitrate, an academy journal article written by Deswati, Amelliza Deviona, Ella Intan Sari, Yulizar Yusuf, and Hilfi Pardi for the Rasayan Journal of Chemistry, elements of the aquaponic system are analyzed, and some ideal thresholds are given for a balanced system between Fish, Plants, Bacteria, Ammonia, Nitrites, and Nitrates, all with included real-life large scale aquaponics systems. I found this journal super helpful with providing application to aquaponics and also expanding my understanding of the ecosystem components through the journal\u2019s experiments.</p> <p>Deswati, et al. \u201cThe Effectiveness of Aquaponic Compared to Modified Conventional Aquaculture for Improved of Ammonia, Nitrite, and Nitrate.\u201d Rasayan Journal of Chemistry, vol. 13, no. 1, Jan. 2020, p. 1. EBSCOhost, search.ebscohost.com/login.aspx?direct=true&amp;db=edb&amp;AN=142699175&amp;site=eds-live.</p> <p>With the workings of this system in mind, I began to sketch out a design for my aquaponics tank, where a garden box is located above a fish tank, to allow for optimal water paths. I planned on making this structure from plywood and then adding additional internal sections for both the fish and plants, connecting these two to the plywood structure, which will also house electronics. Below are some of these concept sketches, showing the brainstorming of the tank\u2019s plywood structure.</p> <p> </p> Some Notes and Sketches of the Aquaponics Fish Tank"},{"location":"Projects/AssistiveAquaponics/#project-license","title":"Project License","text":"<p>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</p>"},{"location":"Projects/AssistiveAquaponics/#bill-of-materials","title":"Bill of Materials","text":"Qty Description Price Link Notes 1 Power Supply $26.95 Link AC to 12v DC - Low Height Profile 1 AC Power Adapter $8.99 Link Rocker Switch for Power Control - Inline Fuse 1 Water Pump $24.99 Link 12v - 9mm outlet - 130GPH 2m / 6.6ft 9mm Silicon Tubing $10.49 Link N/A 5m / 16.4ft Grow Light Strips $13.99 Link 4 Red : 1 Blue 5m / 16.4ft White Light Strips $11.99 Link In Lab 1 pH Sensor $66.99 Link N/A 1 Electrical Isolation Board $16.99 Link N/A 120p Female to Female Jumper Cables $13.99 Link In Lab 1 Spool Speaker Wire $9.95 Link In Lab 1 Pack 18 Gauge Wire $15.99 Link In Lab 1.75mm - 1kg White PETG $23.99 Link N/A 2lb Aquaponics Beads $11.95 Link N/A 5oz Tube WeldOn 16 $17.90 Link N/A 10.1oz Caulk Tube All Purpose Clear Silicone $5.38 Link N/A 6 - 1206 Footprint SMD LED $3.00 Link In Lab 1 - 1206 Footprint 100nf Capacitor $0.18 Link In Lab 2 - 1206 Footprint 22pf Capacitor $0.10 Link In Lab 7 - 1206 Footprint 10uf Capacitor $1.40 Link In Lab 1 - 1206 Footprint 1uf Capacitor $0.13 Link In Lab 1 16Mhz SMD Crystal $0.27 Link In Lab 8 - 1206 Footprint 330 Resistor $3.20 Link In Lab 3 - 1206 Footprint 10k Resistor $0.30 Link In Lab 11 - 1206 Footprint 0 Resistor $0.26 Link In Lab 3 SMD 12v-5v Fixed Voltage Regulator $4.80 Link In Lab 1 10k Potentiometer $0.87 Link In Lab 3 - 1206 Footprint 4.9k Resistor $1.50 Link In Lab 3 SMD Schottky Diode $0.36 Link In Lab 1 SMD MOSFET $0.37 Link In Lab 1 ATTiny 1614 $0.91 Link In Lab 2 ATTiny 412 $1.40 Link In Lab 1 ATMega 328p $2.43 Link In Lab 1 Pack Through Hole Male Headers $7.49 Link In Lab 5 SMD Male Headers $4.75 Link In Lab 3 - Single Sided Copper PCB Blanks $9.35 Link In Lab <p>Total Cost: $323.60</p>"},{"location":"Projects/AssistiveAquaponics/#downloads","title":"Downloads","text":"<ul> <li>Click Here to access and download all files, including CAD, Code, and Schematics, for this project. These files can be used and altered with attribution, as stated and enforced by my project license. In addition to the files included in this downloads folder, please note that Fusion 360 source files can be accessed with the Open in Fusion 360 button in the bottom right-hand corner of each of the embedded designs on this page.</li> </ul>"},{"location":"Projects/AssistiveAquaponics/#assignments-devoted-towards-my-final-project","title":"Assignments Devoted Towards my Final Project","text":"Week Tool/Practice Product Link to Compleation 6 Electronics Design Tank Main Board \u2714\ufe0f First Board Iteration 7 CNC Milling Aquaponics Tank Plywood Structure \u2714\ufe0f Plywood Tank Structure 11 Inputs Temp/Humidity Sensor \u2714\ufe0f Temp/Humidity Board 13 Outputs LCD \u2714\ufe0f LCD Breakout Board 14 Networking &amp; Communication LCD Interface &amp; Tank System Communication \u2714\ufe0f LCD Interface &amp; Communications"},{"location":"Projects/AssistiveAquaponics/#tank-render-fusion-360","title":"Tank Render - Fusion 360","text":""},{"location":"Projects/AssistiveAquaponics/#electronics-system","title":"Electronics System","text":""},{"location":"Projects/AssistiveAquaponics/#main-board-eagle-prototyping-and-design","title":"Main Board Eagle Prototyping and Design","text":"<p>I started this final project board design process following the same steps I used while making any other board in the previous weeks of this class, beginning the process by creating a schematic of my board. Throughout the schematic creating process, I referenced a prior Fab Academy final project, the Sashakit \u201can Arduino compatible, fabbable board, and also an improved version of Fabkit.\u201d (Quote from the Sashakit, as well as one of my professors, Dr. Adam Harris, In-Circuit programmer board I made in my week 4 class. I found that looking at the labeled schematics and board designs for these boards give me the information I needed to dive deeper into the workings of a microcontroller. Before starting any work in Autodesk EAGLE, I took some time to write out my needs on a final project board and was able to use all of this pre-work to start creating my final project board schematic. I worked through this schematic system by system, adding components as I went until I had a finished schematic. I found this approach to be more assistive in my understandings of how the components interact with each other and also allowed me to do some additional research on the different needed sections while working on them. I finished all major sections of my schematic following this approach, and the only editing that I had to go in to add later were 0-ohm jumper resistors, a component I used to connect traces at intersections while designing my final project board.</p> <p></p> <p>With this schematic done, I moved onto generating my final board file, however, I wasn\u2019t entirely happy with the default generation for my final project board, as I wanted it to have a little more flair, so I set off to add a custom board shape, and some icons to my board design before routing any traces on the board. After doing some research on this process, I found this good article on Importing Custom Images into Eagle, a process easier said than done. Although this process of importing images and shapes into EAGLE is entirely possible, the software cannot handle the importing of any closed polygons or shapes with complex curves of any kind, and therefore any images/icons you want to be imported require a good bit of prep work. I completed this prep work in Inkscape on my desired board shape, a fishbowl, as well as on a little fish icon, and a TW logo for some more personalization. The prep work process for all these images was the same in Inkscape, starting with tracing the bitmaps into SVGs of these images after opening them in Inkscape. This step was to dive by right-clicking on the imported bitmap and selecting the Trace from Bitmap tool. This process generated a scalable vector graphic of the imported bitmap, that I could then start to alter so it could be imported into EAGLE. My workflow of altering this graphic started by resizing the Inkscape page by going to </p> <pre><code>File &gt; Document Properties\n</code></pre> <p>and selecting the Resize page to drawing or selection button under the Custom Size window. After this, I converted the graphic into a path by selecting Object to Path under the Path tab and the top of the Inkscape GUI, and ungrouped all parts of this path by selecting everything in the design, right-clicking, and then selecting Ungroup. Nextly, I navigated to </p> <pre><code>Extensions &gt; Modify Path\n</code></pre> <p>Where I used the Add Nodes tool to add excess nodes to my design. Under this same menu, I removed any complex curves that EAGLE would not be able to handle by using the Flatten Beziers tool with a flatness value of 8. Finally, to address EAGLE\u2019s inability to import closed polygons, I used the Division tool under the Path menu to cut any closed polygons in half, and then separated all of these nodes by using the Break Apart tool under the same menu. This process adds some unwanted dividing lines, that can be removed once imported into EAGLE, but these lines allow for the successful importing of these shapes in the first place, so are required. </p> <p> </p> <p>Once all this pre-work in Inkscape was complete, I saved each of these altered files as a .dxf file to my computer from Inkscape. To import these .dxf files into EAGLE, I found making use of the import-dxf plugin for EAGLE worked the best. After installing this ULP into EAGLE following the instructions provided by the import-dxf Github, I opened my final project generated board file in EAGLE and ran the command</p> <pre><code>run import-dxf\n</code></pre> <p>This line opens the import-dxf interface, where the desired .dxf file can be selected, and then imported into a specific layer of a board design. I imported my fishbowl .dxf into layer 20 of my design, the Dimensions layer, to replace the generic rectangle board profile, and then ran the same command to import both the fish icon, and the TW logo, but to the Top layer over the Dimensions. Because these shapes are on the Top layer of my board design, they will both be milled as traces instead of being included with the outline shape of the board. With all of this importing work done, I had a template to start routing the traces of my board around. I opted for the hand routing process for my final project board, as after attempting to autoroute a couple of times, I just wasn\u2019t happy with the results. This also gave me the ability to utilize parts like 0-ohm resistors as jumpers over weird interceptions of the board, a technique I took advantage of while routing the traces on this board. This hand routing process was relatively tedious and pretty time-consuming, but I think the results look great and work much better than the autorouter generated traces with the weird constraints put in place by the odd board shape. </p> <p> Final Project Board With All Trace Routed, and Icons Imported </p> <p>Unfortunately, this first iteration of my final project board didn\u2019t work on the first attempt, and I seemed to have an excess of noize across it, probably due to the large quantity of 0-ohm resistors in line with the traces. </p> <p>I kept iterating on this board, working towards the removal of the excess 0 ohms with better trace routing, an aspect of my board design that only improved over the iterations. On the sixth iteration of this board, shown in the schematic and board file images below, I had reduced the number of 0 ohms\u2019s on my board by a good bit, but also worked on the smoothing capacitors routing.</p> <p> </p> Sixth Itteration Fish Bowl Board Schematic <p> </p> Sixth Itteration Fish Bowl Board File <p>Just like its prior iterations though, this sixth iteration was still unsuccessful, and so far I had been unable to get a version working. I began to make some larger strides on this board during my week 13 class and started another iteration of this board by working back through all systems in the board\u2019s schematic, familiarizing myself with the purpose of each system/component. From here, I started work on adding in a 12v to 5v voltage regulator on the fishbowl board, as my fish tank will be run on a 12v DC supply, and this regulator will allow for this 12v system. I took advantage of a 12v to 5v voltage regulator in this regulator system, opposed to a variable voltage regulator, as the components on my fishbowl board will always be 5v, and thus the voltage can be set by the regulator itself. Along with this regulator, I included two 10uf capacitors between GND and VCC on the voltage regulators\u2019 input and output, reducing portion noise on my board.</p> <p> Seventh Itteration of the Fish Bowl Main Board Schematic </p> <p>With the addition of these new voltage regulator systems, a rewiring of the fishbowl board was needed, and during this time around, I took some extra time to reduce the needed components on the board, and allow for easier soldering. After messing around in the board file for a bit, I found I could use one of my \u201cFish Bowl\u201d shape decorative traces as a GND line that surrounded the entirety of my board. This line implemented a universal ground way more accessible from everywhere on the board and offered another solution to a problem I had previously addressed by using 0-ohm jumpers resistors to solve, routing GND lines over other traces with these \u201cjumpers\u201d. This surrounding ground line reduced the crazy amount of 0-ohm resistors on my board and made the board\u2019s soldering/stuffing process simpler and less time-consuming.</p> <p> Seventh First Itteration of the Fish Bowl Main Board  </p> <p>I milled this board following the same steps I used while milling boards previously in week 4, and other electronics production assignments in my previous weeks, starting with the board traces operation with a PCB engraving bit. While iterating on this board since week 6, I\u2019ve milled a handful of tests, some yielding successes in some systems, but always including another issue/broken system to flatten out. I next moved on to milling the board\u2019s holes and outline, using a 1/32\u201d bit for these two operations, before moving onto board soldering. </p> <p>The part reduction steps I had taken earlier while encluding the wrap-around GND trace on my board paid off here, and the boards soldering and stuffing time had been greatly reduced. One thing that I\u2019ve picked up on while soldering prior test fishbowl boards is a \u201cdrag\u201d technique while soldering the ATMega to the board. I used this technique on these boards as well, first aligning the chip to its corresponding pins (ensuring correct orientation), before tacking down one of the pins of the chip to the board, and then dragging the tinned iron across one of the rows of pads, allowing solder to flow and connect between each of the chips pins and the board\u2019s pads, and leaving me with a clean set of joints. With the chip soldered, I wrapped up the board by soldering all of the other components, finishing with the three largest components, the crystal, voltage regulator, and reset button, leaving me with the boards show below.</p> <p> Seventh Itteration of the Fish Bowl Main Board Stuffed &amp; Soldered </p> <p>As the first test for this new fishbowl board, after soldering, I hooked up the board to a 12v DC power supply, and then probed the new voltage regulator output to test the output voltage. To my luck, the regulator yielded a 5v output and remained at a constant voltage throughout my probing. I next moved onto attempting to burn a bootloader to the fishbowl board. This process is similar to the one taken while burning the bootloader on my Sashakit made in our Student Bootcamp class. The bootloader is burned to my board through an Arduino acting as an ISP programmer, so the first step while attempting to burn the bootloader was to set up the Arduino. I uploaded the Arduino example skets, Arduino as ISP, to an Arduino board, and referencing the Arduino as ISP sketch, and my fishbowl board eagle file, I attached the two with some jumpers using the pins called on by the Arduino as ISP sketch. From here, I opened the Arduino IDE, selected the port my Arduino acting as a programmer was connected to, and then used the IDE\u2019s Burn Bootloader tool, and \u2026 it failed. Unfortunately, even after triple-checking my wiring, switching my Arduino board, reuploading the Arduino as an ISP sketch, and ensuring my fishbowl board was receiving enough power from my power supply, I still received an error message upon any attempt to burn a bootloader. I tried this process a couple of times and received two different error codes, one of which is shown below.</p> <p> One Error Message Recieved Upon a Bootloader Burning Attempt </p> <p>A bit of research into the codes I was receiving helped me break down the problem a little bit, but not a ton. I found that there were three major potential flaws, however, a board short / VCC error, a \u201cbricked\u201d chip, or a non-oscillating clock, and decided to look into these three more. Being the easiest resolved I began looking into the VCC error a little more, starting by probing each of my board\u2019s traces for continuity between places that should not be connected, and also probed the voltages of the GND and VCC line of the board when supplied power, however, all of these results looked normal. After a little more research of the matter online, as well as into the ATMega 328p, I noticed that it recommended to included a smoothing 100nf capacitor in between the chips AREF line and its nearest GND pin, so back in the board\u2019s eagle file, I added this smoothing capacitor along with the previously existing 100nf smoothing capacitor running between two GND and VCC pins on my chip.</p> <p> Eight Itteration of the Fish Bowl Main Board With Smoothing Cap </p> <p>From here, I also explored the other two potential causes of my bootloader burning issue, however, I found no easy fix to a \u201cbricked\u201d chip, and therefore moved on researching a non-oscillating clock a little more. I found that similar to the \u201cbricked\u201d chip, a non-oscillating clock is not easily fixed, but can be avoided, as the clock will not turn to its non-oscillating state unless the fuses of the ISP programmer are incorrectly set. Confirming in my ISP programmer, I had the correct fuses set, and eliminated this as being one of my potential issues.</p> <p>As a workaround to my inability to \u201cUn-Brick\u201d a chip, I followed the advice of one of my instructors, Dr. Adam Harris, to test the working of my chip before using it aboard. To do this, I soldered up a Sashakit board, just like I had in my Student Bootcamp class, however, I left the chip unsoldered to this board. I was then able to connect this Sashakit board to an ArduinoISP programmer, and then use it to try out the bootloader on multiple chips. I aligned a chip with its corresponding pads of the sashakit, heald it down in the center with a pair of tweezers, and used the Arduino IDE to burn a bootloader to my board. All this worked! and the Arduino let me burn a bootloader to a couple of different chips, however, I did find some other faulty \u201cBricked\u201d chips along the way. Despite that, I was left with a couple of chips with bootloaders burned, that I could be sure were working, and was able to eliminate another potential issue on my board.</p> <p> Sashakit ATMega 328p Bootloader Burning Setup </p> <p>With all this troubleshooting into my issues at a stopping point, I was ready to manufacture another board iteration, going first milling the PCB, </p> <p></p> <p>then soldering and stuffing, leaving me with the board shown below.</p> <p></p> <p>Due to my previous failures with this board, I was pretty nervous to test this iteration and started my first just powering up the board through a power supply. Unfortunately, this simple startup produced a cloud of smoke from the top of my board, and the board\u2019s voltage regulator exploded. This error sucked, and ended up stemming from the misplacement of a strip of 5v to 3.3v regulators in a bin meant for 12v to 5v (the ones needed by my board), and the false component use ended up frying one of my boot loaded chips. I unsoldered the remains of the busted voltage regulator, as well as the fired chip, and replaced them with working correct components. I tested the board with power again, this time fortunately without explosion, and was ready to attempt to program the board again. I wired the board to an Arduino with the Arduino as ISP sketch flashed to it, and tried to upload a blink code \u2026 no luck. Upon this uploading attempt, the uploading process began, and then returned error 0x0000000, a GND or Reset error.</p> <p>Here I went back to my schematic, and went through the system by system, and referencing the datasheets for major components. I wanted to make sure to include all recommended/required components for components on each of their pins. In addition to what I already had, this included adding a larger smoothing capacitor between GND and VCC, another capacitor between AREF and its closest GND pin, as well as an additional RST pin, without the 100nf inline capacitor. After a board works though with Dr. Adam Harris, I also moved these additional smoothing capacitors closer to my board\u2019s ATMega 328 to reduce any resistance build upon the traces. All of these changes left me with yet another board iteration, shown below.</p> <p></p> <p>Again, I worked through the manufacturing process for this board, first milling, and the soldering and stuffing of the board. All of these board iterations have sped up their production time, as I know have the component layout of the board memorized, and have increased my soldering speed with each iteration. </p> <p> Working Iterration of the ATMega 328 Fish Bowl Board </p> <p>Just like the prior iterations, I wired up this board to an Arduino with the Arduino as ISP example sketch flashed to it, and attempted a bootloader burn, this time, yielding successful results!! </p>"},{"location":"Projects/AssistiveAquaponics/#main-board-testing","title":"Main Board Testing","text":"<p>After all of the troubleshooting that went into my fishbowl board, it was super nice to finally have to worry about code. I began this fishbowl board programming process with a simple blink sketch, and uploaded the Arduino IDE Blink example sketch to my fishbowl board via an Arduino as ISP programmer, yielding a successful upload shown below.</p> <p></p> <p>This simple sketch proved the working of my board and flashed my onboard pin 13 LED on my fishbowl board.</p> <p> Blinky Example Sketch Running on my Fish Bowl Board </p> <p> All Fish Bowl Board Attempts Up to First Working Itteration </p>"},{"location":"Projects/AssistiveAquaponics/#inputs-outputs","title":"Inputs &amp; Outputs","text":"<p>To interface with my Fish Bowl mainboard, I\u2019m planning on reading a temp/humidity sensor as well as a pH probe placed in my tank. The readings of both temperature and humidity are crucial measurements when calculating the toxicity of ammonia in an aquaponics system. Keeping the nitrogen cycle in check is needed for the success of any aquaponics system, and this is why I\u2019ve chosen these inputs to read. </p>"},{"location":"Projects/AssistiveAquaponics/#ph-sensor","title":"PH Sensor","text":"<p>A quick beginning note - here\u2019s the pH scale I referenced during the pH work of my tank. Goldfish, the fish that will be using in my ecosystem, thrive at a neutral pH, something between 7 &amp; 8.</p> <p></p> <p>I settled on using an Atlas Scientific Gravity pH Probe in my tank. This sensor, in addition to coming from a reputable company, allows the probe to be underwater up to its connector indefinitely, an important aspect of any tank probe, as well as for a connection between the probe and its interfacing board constantly, without a need for the probe to be detached when not in use. Before beginning the work on my board to interface with this pH probe and board, I did a bit of research into the operating principle of the sensor, a subject well covered in the Probe\u2019s Datasheet, with some highlights covered below.</p> <p>\u201cA pH (potential of Hydrogen) probe measures the hydrogen ion activity in a liquid. At the tip of a pH probe is a glass membrane. This glass membrane permits hydrogen ions from the liquid being measured to defuse into the outer layer of the glass, while larger ions remain in the solution. The difference in the concentration of hydrogen ions (outside the probe vs. inside the probe) creates a VERY small current. This current is proportional to the concentration of hydrogen ions in the liquid being measured.\u201d (Probe Datasheet)</p> <p></p> <p>\u201cA pH electrode is a passive device that detects a current generated from hydrogen ion activity. This current (which can be positive or negative) is very weak and cannot be detected with a multimeter, or an analog to digital converter. This weak electrical signal can easily be disrupted and care should be taken to only use proper connectors and cables \u2026 The current that is generated from the hydrogen ion activity is the reciprocal of that activity and can be predicted using [the equation pictured below]\u201d (Probe Datasheet)</p> \\[E = E^0 + \\frac{RT}{F}\\ln(\\alpha_{H+}) = E^0 - \\frac{2.303RT}{F}pH\\] <ul> <li>Where R is the ideal gas constant</li> <li>T is the temperature in Kelvin</li> <li>F is the Faraday constant</li> </ul> <p></p> <p>To calibrate the pH probe to work against these voltage reading thresholds, a calibration is required. Included along with the Atlas Scientific pH probe I ordered were three packs of pH calibration liquids, a 4, 7, and 10 level liquid. The concept of the calibration reflects measurements of the probe at each of these points, and the probe can be calibrated by being placed in each one of these liquids and then set to the liquid\u2019s corresponding pH value, leaving a scale like that shown below.</p> <p></p> <p>To achieve probe calibration and eventual readings from the probe, I created a simple analog sensor interfacing board with an ATTiny 1614 microcontroller. This board includes data pins to connect to the pH probe board array, along with transmitting and receiving pins that will be used for the eventual calibration of the probe.</p> <p> ATTiny 1614 pH Probe Interfacing Board Eagle Files </p> <p>This board is designed to reflect the exact board footprint of the pH sensing board, as well as its electrical isolation board used between the connection. Speaking of which, this electrical isolation board is a pH probe board accessory from Atlas Scientific that connects between the Atlas Scientific pH board and my analog interfacing board, allowing for complete isolation of analog signal from the pH sensor board, and its conversion into a PWM signal. This isolation board removes the issue of false readings that could occur from excess current in the water released by my tank\u2019s pump and leaves me with accurate pH readings. After the completion of my analog interfacing board, I milled and stuffed the board with its four components, leaving me with the board shown below.</p> <p></p> <p>With this board manufactured and ready to program, I again referenced the pH Probe\u2019s Datasheet, to find the Atlas Scientific Gravity pH Library &amp; Sample Code. This library adds a ton of helpful calibration and probe reading functions to Arduino. I ended up modifying the pH calibration example sketch included in this library for my final pH reading sketch, due to the inclusion of the entire calibration via serial feature as well as integration with my electrical isolation board. After this calibration function, the pH itself is read, and then written to a string and printed to serial. In front of this pH value, the line 3pH = is printed, to interface with my tanks LCD parsing statements, a function of code discussed later on this page, leaving me with the pH reading and printing loop function below \u2026</p> <pre><code>void loop() {\n  if (Serial.available() &gt; 0) {                                                      \n    user_bytes_received = Serial.readBytesUntil(13, user_data, sizeof(user_data));   \n  }\n\n  if (user_bytes_received) {                                                      \n    parse_cmd(user_data);                                                          \n    user_bytes_received = 0;                                                        \n    memset(user_data, 0, sizeof(user_data));                                         \n  }\n\n  Serial.println(\"3pH = \" + String(pH.read_ph(), 2));                                                      \n  delay(20000);\n}\n</code></pre> <p>This loop with my pH reading string was then incorporated back into the other functions of my pH code, and I was left with the final code below.</p> <pre><code>#define USE_GRAV_ISOLATOR\n#ifdef USE_GRAV_ISOLATOR\n  #include \"ph_iso_grav.h\"       \n  Gravity_pH_Isolated pH = Gravity_pH_Isolated(10);         \n#else\n  #include \"ph_grav.h\"             \n  Gravity_pH pH = Gravity_pH(10);   \n#endif\n\nuint8_t user_bytes_received = 0;                \nconst uint8_t bufferlen = 32;                   \nchar user_data[bufferlen];                     \n\nvoid parse_cmd(char* string) {                   \n  strupr(string);                                \n  if (strcmp(string, \"CAL,7\") == 0) {       \n    pH.cal_mid();                                \n    Serial.println(\"MID CALIBRATED\");\n  }\n  else if (strcmp(string, \"CAL,4\") == 0) {            \n    pH.cal_low();                                \n    Serial.println(\"LOW CALIBRATED\");\n  }\n  else if (strcmp(string, \"CAL,10\") == 0) {      \n    pH.cal_high();                               \n    Serial.println(\"HIGH CALIBRATED\");\n  }\n  else if (strcmp(string, \"CAL,CLEAR\") == 0) { \n    pH.cal_clear();                              \n    Serial.println(\"CALIBRATION CLEARED\");\n  }\n}\n\nvoid setup() {\n  Serial.begin(9600);                            \n  delay(200);\n  Serial.println(F(\"Use commands \\\"CAL,7\\\", \\\"CAL,4\\\", and \\\"CAL,10\\\" to calibrate the circuit to those respective values\"));\n  Serial.println(F(\"Use command \\\"CAL,CLEAR\\\" to clear the calibration\"));\n  if (pH.begin()) {                                     \n    Serial.println(\"Loaded EEPROM\");\n  }\n}\n\nvoid loop() {\n  if (Serial.available() &gt; 0) {                                                      \n    user_bytes_received = Serial.readBytesUntil(13, user_data, sizeof(user_data));   \n  }\n\n  if (user_bytes_received) {                                                      \n    parse_cmd(user_data);                                                          \n    user_bytes_received = 0;                                                        \n    memset(user_data, 0, sizeof(user_data));                                         \n  }\n\n  Serial.println(\"3pH = \" + String(pH.read_ph(), 2));                                                      \n  delay(20000);\n}\n</code></pre> <p>I uploaded this code to my analog pH interfacing board, and connected the board\u2019s communication and power headers to their corresponding pins on an FTDI chip, and then via USB to my laptop. </p> <p> pH probe wired to all three pH interfacing boards </p> <p>Following the calibration steps discussed a bit above, I completed the pH probe\u2019s first calibration starting with the 7 mid calibration liquid. I placed the end of the probe in the liquid, and set the command CAL,7 via serial to my analog pH interfacing board. After this, I repeated this step with the 4 low calibration liquid with the line CAL,4, and for a final time with the 10 high calibration liquid, and the line CAL,10.</p>"},{"location":"Projects/AssistiveAquaponics/#temphumidity-sensor","title":"Temp/Humidity Sensor","text":"<p>Following my system\u2019s PH sensor, the next sensor in my system is a DHT11 Temperature and Humidity sensor I manufactured in my week 11 inputs class. For space reasons, this page just covers the highlights of the working temperature/humidity monitoring board, and the troubleshooting behind it can be read about on my week 11 inputs class page.</p> <p>I began this temperature monitoring board manufacturing process by reading up on the DHT11 temp and humidity sensor, finding this link on its set up with an Arduino helpful, giving me some useful wiring diagrams. I planned on using this DHT11 Temperature and Humidity sensor on my temp and humidity monitoring board, reading the sensor through an onboard ATtiny 412, and writing the read values to another microcontroller through RX and TX pins. I started in EAGLE, creating a small ATtiny 412 circuit, incorporating a DHT11 Temperature and Humidity sensor, as well as some headers for programming and communication. First, I started a new schematic for the board, keeping in mind the required components while adding them to the schematic. The DHT11 sensor is a four-pin sensor with a VCC, GND, and two data pins. In my case, I communicated with the sensor via one data pin, keeping in mind this pin not only needed to be connected to my ATtiny 412 but also ran to VCC with a 10k ohms resistor. Along with its connection to this sensor, my board\u2019s ATtiny 412 also runs to two separate headers, one for programming via the board\u2019s UPDI pin, and another supplying the board\u2019s power, and RX and TX pins, for future communication between boards. A final little touch to this schematic was a power indicating LED, and this left me with the schematic shown below.</p> <p></p> <p>The next step in this board design process was the conversion of my schematic into my temperature and humidity reading board. Keeping with the aquarium theme, I decided to shape this board like a fish, following the same steps I used creating a custom board shape in eagle during week 6. For this board outline, I used the same fish icon I had created in that week\u2019s assignment, importing the shape into the dimensions layer of my sensor board file to create the shape. From here I began the process of laying out the board\u2019s components, in eagle, starting with the mounting position of the DHT11 sensor and ATtiny 412, and positioning around those two components. One thing I had to keep in mind during this layout is the size of the DHT11, as its connection to my board using a 4 pin header, but the body of the sensor itself was much larger than this. I began by positioning the header where I thought the rest of the sensor would fit, and checked this positioning by drawing a square from the corner of the header, so its dimensions were the size of the DHT11. From here I laid out all other components on my board and routed the board\u2019s traces. Due to the small size of this board, the trace routing was a relatively simple task and left me with a nice-looking temperature and humidity monitoring fish board.</p> <p> Final Tempeture and Humitidy Monetering Fish Board </p> <p> Fish Tempature and Humidity Sensor Board </p> <p>Similarly to before starting my board\u2019s schematic, before programming the board, I read up on the DHT11 sensor, referencing the same site as before, found here. </p> <p>\u201cThe DHT11 detects water vapor by measuring the electrical resistance between two electrodes. The humidity sensing component is a moisture-holding substrate with electrodes applied to the surface. When water vapor is absorbed by the substrate, ions are released by the substrate which increases the conductivity between the electrodes. The change in resistance between the two electrodes is proportional to the relative humidity. Higher relative humidity decreases the resistance between the electrodes, while lower relative humidity increases the resistance between the electrodes. The DHT11 measures temperature with a surface mounted NTC temperature sensor (thermistor) built into the unit.\u201d (Circuit Basics)</p> <p>The sensor relies on the DHTLib Arduino library and can read the sensors data pin into a readable humidity and temperature output. The libraries follow the equation below to derive the relative humidity from the sensor.</p> \\[RH = (\\frac{\\rho_w}{\\rho_s}) \\times 100\\%\\] <p>Where: - \\(RH\\): Relative Humidity - \\(\\rho_w\\): Density of water vapor - \\(\\rho_s\\): Density of water vapor at saturation</p> <p>With knowledge of the DHT11\u2019s workings, I began programming the code to read temp and humidity through the DHT11 and print the found values through TX to a serial monitor. I used the sensors reference code found on the Circuit Basics code as a reference and began the coding process. The code starts by including the needed DHTLib library and setting up the DHT11\u2019s connections to my boards ATtiny 412. Next, the code begins serial and then prints the found values to it, with the prefixes \u201cTemp\u201d &amp; \u201cHumidity\u201d in front of their corresponding values. This left me with the sensor reading code below.</p> <pre><code>#include &lt;Arduino.h&gt;\n#include &lt;dht.h&gt;\n\ndht DHT;\n\n#define DHT11_PIN 4\n\nvoid setup(){\n  Serial.begin(9600);\n}\n\nvoid loop(){\n  int chk = DHT.read11(DHT11_PIN);\n  Serial.print(\"Temp = \");\n  Serial.println(DHT.temperature);\n  Serial.print(\"Humidity = \");\n  Serial.println(DHT.humidity);\n  delay(5000);\n}\n</code></pre> <p>At the end of this sensor reading loop, I included a 5-second delay, as the DHT11 can only be read every 2 seconds, so this gives the sensor plenty of wiggle room.</p> <p>With this code flattened out, I wired my fish sensor board to my in-circuit programmed, made in week 4\u2019s electronic production class, connecting my boards GND and VCC to the programmers corresponding pins, and my sensor boards UPDI to the UPDI pin of my in-circuit programmer. I followed the same programing steps I\u2019ve used for all of my other ATtiny 412 containing boards, like that in week 4, uploading my sensor reading code through my in-circuit programmer using the Arduino IDE\u2019s Upload Using Programmer tool. This code was uploaded successfully to my board, and I was ready to move on to testing and reading my sensor.</p> <p>I attached this fish board to an FDTI chip, RX to TX, TX to RX, and GND to GND, and then attempted to read the sensors values again, and this time, it worked! Every five seconds the serial monitor is updated with reading temperature and humidity values from my DHT11, and output the values in a serial monitor through serial, shown below. </p> <p></p> <p>The final step in this sensor board code was a little bit of alteration to the serial prints I did in my week 14 class. These alterations allow for the communication required to print the transmitted values to a specific line on my system\u2019s LCD, a feature discussed later on this page. Beginning this process, I had to figure out how to print a specific line of incoming serial to a controlled position on an LCD. After a bit of research online, It seemed like the best way about doing this would be to include an indicator between different lines being sent over serial, and then read that indicator to determine the position of the text in the interface. With this idea in mind, I altered my input board\u2019s code to include a 1 before the transmitted temperature line, and a 2 before the transmitted humidity.</p> <pre><code>//(c) Teddy Warner 28 May 2021\n\n//This work may be reproduced, modified, distributed, performed, and displayed \n//for any purpose, but must acknowledge the Assistive Aquaponics Fish Tank. \n//Copyright is retained and must be preserved. The work is provided as is; \n//no warranty is provided, and users accept all liability.\n\n#include &lt;Arduino.h&gt;\n#include &lt;dht.h&gt;\n\ndht DHT;\n\n#define DHT11_PIN 4\n\nvoid setup(){\n  Serial.begin(9600);\n}\n\nvoid loop(){\n  int chk = DHT.read11(DHT11_PIN);\n  Serial.print(\"1Temp = \");\n  Serial.println(DHT.temperature);\n  delay(5000);\n  Serial.print(\"2Humidity = \");\n  Serial.println(DHT.humidity);\n  delay(5000);\n }\n}\n</code></pre>"},{"location":"Projects/AssistiveAquaponics/#lcd","title":"LCD","text":"<p>I spent the better half of an afternoon during my week 13 output class searching for the perfect LCD for my tank, as the space requirements of the mounting area, along with the need for a 20 x 4 LCD minimum to display all necessary info in a readable format made this search more difficult. Eventually, I stumbled on the C204C-FTW-LW65 from Focus LCDs, a vertical compact 20 x 4 LCD, that works great for my use case. I originally began work on my systems LCD during my week 13 output class, as mentioned above, and just like the previous temperature and humidity monitoring board, this page will just touch on the working highlights of this feature, and my week 13 page goes into more depth on the troubleshooting behind it.</p> <p>This LCD met all of my space and screen size requirements, and I began in Eagle creating a breakout board to the screen. This board will mount to the LCD, and break out the screen pins to the headers that will need to connect to a microcontroller. The premise of the breakout board was pretty simple, and I referenced the C204C-FTW-LW65\u2019s datasheet and attached the needed data lines from the LCD, DB4-DB7, to a set of breakout pins on the board. I next hooked up the LCD\u2019s VCC and GND, as well as its backlight VCC and GND, to their corresponding power headers on the board. A 330 ohms resistor is included on the LCD backlight\u2019s VCC line, to dim the light so the screen\u2019s content is readable. I found the 330 resistance value worked better than the standard 220 for my C204C-FTW-LW65 greyscale style screen and allowed for better readability. The final portion of this board was a contrast adjusting 10k ohms potentiometer. This potentiometer provides a voltage to the LCD\u2019s contrast adjusting pin, allowing the LCD character brightness to be altered, leaving me with the final schematic shown below.</p> <p></p> <p>With this schematic flatted out, I moved onto converting this schematic into my LCD breakout board. Here I began again by referencing the datasheet, positioning the LCD mounting headers to the correct dimensions on my board to line up with the C204C-FTW-LW65 LCD. From here, I positioned the contrast adjusting potentiometer to mount on the backside of the board, allowing the LCD to mount directly over the breakout board, in the most space-efficient manner. From here, I also positioned the board\u2019s resistor and jumper resistors, and then positioned the breakout headers towards the bottom of the board, before running all of the board\u2019s traces. Due to the mounting position of this breaker board, the shape had to fit in as compact of a space behind the LCD as possible, so I dragged the boards outline down to fit around the boards content, and used Eagles miter tool to round over the board\u2019s corners, leaving me with the boards shown below.</p> <p></p> <p>Due to its single 330 ohms resistor component and three-pin potentiometer, the milling and stuffing of this LCD breakout board weren\u2019t super time-consuming, and I worked through it with relative ease. I first attached the breakout board to the backside of the LCD board, soldering the pins of the LCD to their propper pads on the breakout board. From here I tracked down the 330 ohms resistor, and also soldered the potentiometer in place. Finally, I attached the breakout board headers, that would allow for connections between the LCD and the board, leaving me with the LCD and breakout system below.</p> <p> Compleated LCD and Breakout Board Assembly </p> <p>After the completion of my LCD breakout, I began the interface coding process in the second half of my week 13, and then later expanded on the interface in my week 14 networking and communication assignment. The LCD interface code utilizes the Liquid Crystal Library included by default in the Arduino library for LCD control. Breaking down the code, there are two sections of my LCD interface, a boot screen, and a status display screen that will in the future, provide information read from my Aquaponics fish tank\u2019s sensors. I started the interface work on my tank\u2019s boot screen. The boot screen code is a simple display of characters spanning the width of the LCD, with the top and bottom lines being filled with -, and the middle lines displaying the text Aquaponics Fish Tank and \u2026 In Development. The inclusion of this boot screen in the Void Setup function of my code shows this boot screen upon bootup of the system, and the function includes a short delay while displaying the screen, allowing all of the input sensors to get started up and begin future communications with the mainboard.</p> <p> Aquaponics Fish Tank LCD Bootscreen Code  </p> <p> Aquaponics Fish Tank LCD Bootscreen Implemented in Void Setup </p> <p>From this boot screen, the interface next moves into its status screen display. It was here where I planned on taking full advantage of the 20 x 4 display size of my LCD, and decided to create some custom characters to include a fish icon on my status screen, as well as include an Aquaponics Fish Tank title. I began this status screen creation with some research on the creation of custom characters, where I found this Hackster.io article to give a good description of the topic. The article is linked to an online LCD Character Creator, where a GUI is provided that converts a drawn character into the hex codes that can be written to an LCD in code. I used this generator online to create a 2 x 3 character fish and was able to copy the generated characters generated into my LCD code. </p> <p></p> <p>I began the status screen code in the Void Loop function of my code, where I started by including an Aquaponics Fish Tank title printed at the top of the display. Following this, I called upon each of my 6 custom characters established earlier in the code, positioning each of them to create a 2 x 3 fish icon on the left side of the screen. The final touch to this first iteration of the status screen would be indicators for Temp, Humidity, and PH, each receiving their line in the interface. In this instance of the status screen, these indicators are just text displayed on a set line of the interface, to the right of the fish icon. All of this left me with the first iteration of the status screen, shown below.</p> <p> First Itteration of the Aquaponics Fish Tank LCD Statusscreen </p> <p>I began working from this interface in my week 14 class to include the sensor readings on my interface\u2019s status screen, altering the loop to read transmitting nodes via the software serial library, and print them to their proper interface positions, removing the setup Temp =, Humidity =, and PH = place holders in the process. </p> <p>The bulk of this communication setup work is discussed on my week 14 page, but I\u2019ll touch on the highlights on this function here. As mentioned above, this LCD networking feature in my system uses the software serial library. This library allows serial communications on any of a microcontroller\u2019s digital pins, and allows me to configure two receiving and transmitting pins on my mainboard node, and communicate with bus addresses to my two input nodes. My first step while implementing this library was to set up two communication ports in my mainboard code, one for communication with my systems temperature and humidity input node, and another for the PH input node. Through this setup, I\u2019m able to communicate across all three nodes, passing through these two set communication ports, and will be able to call on specific nodes with their defined addresses, portDHT and portPH.</p> <p>I call upon each of these different nodes throughout my mainboard interface code. Each port is started with the line \u2026</p> <pre><code> portDHT.listen();\n</code></pre> <p>as in the software serial library can only listen to one transmitting node through one port at a time, and then this data is saved to an incoming string. From here, the data is run through two of my code\u2019s parsing If statements, to determine whether the board is receiving temperature or humidity data, and the base of this, just as before, will print the read values to my LCD.</p> <p></p> <p>This same process is repeated in the Void Loop function, after the listing of portDHT, with portPH. This, just like the previous port, saves read data to a string, and then prints the read data to the proper line of the LCD interface, this time without any If statement due to the singular reading that will be coming in over this address.</p> <p></p> <p>All of these interface features and functions together left me with an LCD interface code capable of reading from transmitting sensor nodes and printing to the LCD, also including a startup routine with an included interface boot screen, as well as the main status screen with a custom fish icon. This final interface code, with all of these features implemented, is included below.</p> <pre><code>//(c) Teddy Warner 28 May 2021\n\n//This work may be reproduced, modified, distributed, performed, and displayed \n//for any purpose, but must acknowledge the Assistive Aquaponics Fish Tank. \n//Copyright is retained and must be preserved. The work is provided as is; \n//no warranty is provided, and users accept all liability.\n\n#include &lt;LiquidCrystal.h&gt;\n#include &lt;SoftwareSerial.h&gt;    \n\nSoftwareSerial portDHT(2, 3);\nSoftwareSerial portPH(4, 5);\n\nconst int rs = 12, en = 11, d4 = 10, d5 = 9, d6 = 8, d7 = 7;\nLiquidCrystal lcd(rs, en, d4, d5, d6, d7);\n\nString Temp;\nString Humidity;\nString pH;\n\nbyte fishbl[] = {\n  B00011,\n  B00111,\n  B01111,\n  B01111,\n  B00110,\n  B00000,\n  B00000,\n  B00000\n};\n\nbyte fishbr[] = {\n  B11000,\n  B11100,\n  B11110,\n  B11110,\n  B01100,\n  B00000,\n  B00000,\n  B00000\n};\n\nbyte fishml[] = {\n  B11111,\n  B11111,\n  B11111,\n  B01111,\n  B01111,\n  B00111,\n  B00111,\n  B00011\n};\n\nbyte fishmr[] = {\n  B11111,\n  B11111,\n  B11111,\n  B11110,\n  B11110,\n  B11100,\n  B11100,\n  B11000\n\n};\n\nbyte fishtl[] = {\n  B00000,\n  B00000,\n  B00000,\n  B00011,\n  B00111,\n  B01111,\n  B01111,\n  B11111\n};\n\nbyte fishtr[] = {\n  B00000,\n  B00000,\n  B00000,\n  B11000,\n  B11100,\n  B11110,\n  B11110,\n  B11111\n};\n\nvoid setup() {\n\n  Serial.begin(9600);\n  portDHT.begin(9600);\n  portPH.begin(9600);\n\n  lcd.begin(20, 4);\n\n  lcd.setCursor(0,0);\n    lcd.print(\"--------------------\");\n  lcd.setCursor(0,1);\n    lcd.print(\"Aquaponics Fish Tank\");\n  lcd.setCursor(0,2);\n    lcd.print(\"... In Development\");\n  lcd.setCursor(0,3);\n    lcd.print(\"--------------------\");\n\n  delay(5000);\n  lcd.clear();\n\n}\n\nvoid loop() {\n\n lcd.createChar(1,fishtl);\n lcd.createChar(2,fishtr);\n lcd.createChar(3,fishml);\n lcd.createChar(4,fishmr);\n lcd.createChar(5,fishbl);\n lcd.createChar(6,fishbr);\n\n lcd.setCursor(0,0); \n lcd.print(\"Aquaponics Fish Tank\");\n\n  lcd.setCursor(0,1);  \n  lcd.write(1);\n  lcd.setCursor(1,1);\n  lcd.write(2);\n  lcd.setCursor(0,2);\n  lcd.write(3);\n  lcd.setCursor(1,2);\n  lcd.write(4);\n  lcd.setCursor(0,3);\n  lcd.write(5);\n  lcd.setCursor(1,3);\n  lcd.write(6);\n\n String IN;\n String readString;\n\n portDHT.listen();\n portDHT.print(F(\"AT\\r\\n\"));     \n\n delay(100);\n\nwhile(portDHT.available()) {\n  delay(100);\n  if (portDHT.available() &gt; 0) { \n    char c = portDHT.read();\n    readString += c;\n  }\n }\n\n IN = readString;\n\n if(IN.substring(0,1)==\"1\"){\n  Temp = IN.substring(1);\n  lcd.setCursor(3,1);\n  lcd.print(Temp);\n }\n\n  lcd.setCursor(15,1);\n  lcd.print(\" \");\n  lcd.setCursor(16,1);\n  lcd.print(\" \");\n\n if(IN.substring(0,1)==\"2\"){\n  Humidity = IN.substring(1);\n  lcd.setCursor(3,2);\n  lcd.print(Humidity);\n }\n\n  lcd.setCursor(19,2);\n  lcd.print(\" \");\n\n portPH.listen();\n portPH.print(F(\"AT\\r\\n\"));     \n\n delay(100);\n\nwhile(portPH.available()) {\n  delay(100);\n  if (portPH.available() &gt; 0) { \n    char b = portPH.read();\n  readString += b;\n  }\n }\n\n IN = readString;\n\n if(IN.substring(0,1)==\"3\"){\n  pH = IN.substring(1);\n  lcd.setCursor(3,3);\n  lcd.print(pH);\n }\n\n  lcd.setCursor(13,3);\n  lcd.print(\" \");\n  lcd.setCursor(14,3);\n  lcd.print(\" \");\n\n}\n</code></pre> <p>I updated my Fish Bowl mainboard with this final code, and tested the system with my Temp/Humidity sensor board, (shown in the image below), and \u2026 It Worked!</p> <p> Updated Software Serial Code Running on my System </p>"},{"location":"Projects/AssistiveAquaponics/#power-supply-breakout","title":"Power Supply &amp; Breakout","text":"<p>To power, all of these parts of my electronics system &amp; the tank as a whole, I\u2019ll be using a 12v DC power supply with a connection to an AC mains adapter to take wall power. Before doing any powering from this supply, I dialed the output voltage to exactly 12v DC, shown in the image below.</p> <p></p>"},{"location":"Projects/AssistiveAquaponics/#water-pump-tank-plant-lights","title":"Water Pump, Tank &amp; Plant Lights","text":"<p>All three outputs from this DC power supply run to a power breakout board allowing the four power drawing components to receive power, the Fish Bowl Main Board, Tank Lights, Grow Lights, and Water Pump. This power breakout board directs two of the three 12v DC inputs to its tank lights and mainboard output terminals and steps down the third input to a 5v current to be used in an ATTiny 412 timing circuit. This third line powers the tank\u2019s pump at 5v, as well as the timing circuit, which toggles a MOSFET on and off every 12 hours to allow 12v DC to reach the tank\u2019s plant lights.</p> <p> Power Breakout Board Eagle Schematic </p> <p> Power Breakout Board Eagle Board File </p> <p>I manufactured this board following the same steps as all PCBs previously made for my project and then was ready to begin the programming process.</p> <p>After a bit of research online, indoor plants grown under grow lights thrive under 10 to 14 hours of grow lights, and I took the middle of this for my timer and toggled every 12 hours. The time sketch is super simple, just writing a MOSFET on pin 4 to high for 12 hours, and then low for another 12. The final grow light timer code is included below.</p> <pre><code>//(c) Teddy Warner 28 May 2021\n\n//This work may be reproduced, modified, distributed, performed, and displayed \n//for any purpose, but must acknowledge the Assistive Aquaponics Fish Tank. \n//Copyright is retained and must be preserved. The work is provided as is; \n//no warranty is provided, and users accept all liability.\n\nint Mosfet = 4;\n\nvoid setup(){\npinMode(Mosfet,OUTPUT);\n}\nvoid loop(){\n  digitalWrite(Mosfet,HIGH);\n  delay(43200000);                  // 12hr\n  digitalWrite(Mosfet,LOW);\n  delay(43200000);                  // 12hr\n}\n</code></pre> <p>To test this sketch and board, however, I didn\u2019t want to wait the 12-hour alternating period, so I shortened the time frame of my sketch to only 5 seconds by dropping the delay from 12 hours \u2026</p> <pre><code>  delay(43200000);                  // 12hr\n</code></pre> <p>\u2026 to 5 seconds\u2026</p> <pre><code>  delay(5000);                  // 5sec\n</code></pre> <p>I uploaded this test code to my power breakout board, connected it to a voltage input, and probed the output terminal block ports with a multimeter, yielding the 5 seconds on 5 seconds off results shown below.</p> <p>After this successful test, I uploaded the final 12-hour iteration of the code and was then ready to test the breakout in my system, the step where everything when wrong. Although the timing circuit of my power breakout board worked great, the board itself did not. Unfortunately during the design process, I forgot to consider my usage of an inductive load, my water pump. Upon the first bootup of my system with this power breakout board, the circuit worked great, however, after cutting power to the system, my inductive water pump sent a current back into my breakout, destroying the timing circuit of the board. This board design left me facing the problem of always off grow lights after powering the water pump since when power is cut to a motor, like my water pump, the motion doesn\u2019t stop, and the excess current generated needs to go somewhere, in my case, my timing circuit. The fix for this use of an inductive load revolves around the use of a flyback diode, a feature I\u2019m familiar with from use on 3D Printers. </p> <p>With this solution in mind, I began the process of setting up a diode flyback protection circuit around my water pump terminals, starting with some research yielding these two articles, Simple Over-Voltage Protection Circuit using Zener Diodes &amp; How To Prevent an Inductive Load from Damaging Your Power Supply. Based off of the information in the first Simple Over-Voltage Protection Circuit using Zener Diodes article, I began work on modifying my power breakout schematic to include a Zener diode in parallel with the water pumps two terminals, orientated to direct any returning current into ground, and creating a new part of least resistance for the returning current. Due to the spec of the SMD Zener diode that was accessible to me, however, another component was needed, a current liming resistor. This resistor keeps the Zener diode from exploding on my board and reduces the current down to one the diode could handle, in my case I used a 100 ohms resistor. Unfortunately, this implementation only leads to more troubleshooting, as the current draw of the pump during its startup couldn\u2019t be matched with this Zener diode &amp; limiting resistor setup, so after a couple more iterations, I decided to take another approach, based more off of the information in the second article, How To Prevent an Inductive Load from Damaging Your Power Supply. This lead to the implementation of a second flyback diode setup, one where a Schottky diode is run in parallel with the water pumps terminal headers, along with a second in line with the input VCC to the system. In addition to this diode setup, I also completely isolated the voltage regulation setup for my pump, eliminating any connection to the timing circuit, and allowing for complete isolation of my inductive water pump load. In this instance, like the prior, the two diodes prevent a returning current from the water pump from reaching my voltage regulation circuitry, by creating a new path of least resistance to a GND line. This update left me with the board schematic and board file shown below.</p> <p>  Final Power Breakout Board Eagle Schematic </p> <p> Final Power Breakout Board Eagle Board File </p> <p>Again, I fabricated this power breakout board, and uploaded my timing sketch to it, as done prior.</p> <p> Final Fabricated Power Breakout Board </p> <p>I then implemented the power board in my tank\u2019s electronics system and booted up the PSU, yielding the results in the video below. All aspects of the electronics system are powered from the breakout, and bootup after multiple power cuts.</p>"},{"location":"Projects/AssistiveAquaponics/#tank-structure-cnc-milling-laser-cutting","title":"Tank Structure - CNC Milling &amp; Laser Cutting","text":"<p>The wooden tank structure was my first large physical step towards my final project that I completed in my week 7 computer-controlled machining assignment. The structure is documented in-depth on my week 7 page, and again, for space concerns, this page will just tough on the important bits and highlights. </p> <p>Although I created a model of this wooden structure in Fusion 360 while planning the project, I began the structure creation process by starting to put some thought into the manufacturing processes I would need to take to produce this structure in real life. I settled on milling 6 different pieces to assemble the structure, one back wall, two sides, and 3 stacked pieces to make the base of the structure. I planned on creating these parts based on their corresponding components in my Fusion 360 design. For each of these pieces, I created a new sketch on the face of the profile and used Fusion 360\u2019s Project tool found under the Sketch menu to project all desired lines for each part into one single sketch in the Fusion 360 browser. With all of these lines in one single sketch for each of the 6 different components, I could export each sketch from the Fusion 360 browser onto my computer as a .dxf file by right-clicking on the sketch, and then selecting export as .dxf.</p> <p> Fusion Model with Projected Sketches for Each Component </p>"},{"location":"Projects/AssistiveAquaponics/#aspire-work-structure-milling","title":"Aspire Work &amp; Structure Milling","text":"<p>To generated the toolpaths I would later run on a CNC machine from my altered .svg files, I used Vectric CNC\u2019s Aspire CAM software. I firstly created a new file in Aspire, where I was prompted to set a workplane size. The workplane of the ShopBot PRSalpha, the CNC I would be milling on, was 96\u201d x 48\u201d, and my material height was 0.776\u201d, so I entered these value in the prompt accordingly. I then imported each of my .svg files into Aspire, nesting the files as I imported to reduce waste stock material. I spent a little more time with all of my files imported messing with the part orientation to ensure that there would be little stock material waste between my parts. In the assembly of my design, I planned to use milled tabs to align the back piece to the structure\u2019s two sidewalls and created this feature in my design. I then switched over to Aspires 3D View by clicking on the tab labeled 3D View at the top of the interface\u2019s workspace. Here I could start working on generating the different toolpaths for my parts. Throughout this process, I referenced my original Fusion 360 design to determine which sections of each of my files would require different toolpath operations. The first toolpath operation I generated was a Boreing operation that would boreholes for alignment dowels in the base of my structure. This operation was especially needed in my operation as I was not planning on switching to a drill bit anytime throughout the milling process, and this boreing operation allows me to mill these holes with an endmill instead. Nextly I generated Profile toolpaths for all of my parts, outlining each of my files, and cutting them out. I selected all intended profile cuts for each of my files and set the depth of each of these profile cuts to 0.776\u201d, the thickness of my stock material. This cut depth would ensure all of my profile cuts would go all the way through the material. Nextly I selected a .25 Endmill bit for both my profile and boreing operations, as this was the endmill I was planning on using. To prevent the movement of each of these parts after the profile cut completes, I added tabs to the toolpath under the Edit Tabs section of the toolpaths settings. These \u201cTabs\u201d leave a small bit of stock material connecting the profile to the rest of the stock and holding their position. I found adding 3 to 4 tabs per profile, depending on size and shape, worked best to hold my parts in place. The final tool paths I generated were pocket cuts. These toolpaths remove material to add depth to some of my parts. These pockets were relatively straightforward, as they didn\u2019t require any added tabs because they cont cut through the material, however, I used a different, larger, bit size for these pockets to speed up milling time, so I was required to change that. Finally, before exporting any of these toolpaths, I went back through and turned on \u201cRamping\u201d for each operation. This setting diagonally moves the Endmill bit, as opposed to vertical plunges and then horizontal movement, allowing the side of the endmill to cut material as intended. I saved all of these toolpaths from Aspire through the Save Toolpath menu. Each of these toolpaths was saved under the Shopbot format, .sbp, and grouped based on the bit used. This left me with 3 different .sbp files for each a 1/8\u201d, 1/4\u201d, and 1/2\u201d bit.</p> <p></p> <p></p> <p>I began by prepping my machine with the proper bit and mounted my stock to the machine\u2019s bed. My classmate Graham Smith and I did all of our millings this week together as the operation of a machine on this scale can be unsafe if the right precautions are not taken, or if operated alone. I loaded my first tool path, my 1/2\u201d pocket operation, into the Shopbot Command Console through the Load File menu under the File tab. I selected my .sbp toolpath, and under the pop-up menu, selected 3D Offset as the operations offset, and then proceeded to click enter to start the cut. This \u201c3D Offset\u201d allows for me to complete an \u201cAir Cut\u201d of my file, where the tool doesn\u2019t engage with my stock material but just runs above it. I ran this Air Cut to ensure my part placement fit with the side of the machine\u2019s workspace limits, and also didn\u2019t run into any screws. This test of cutting air was successful, so I was ready to move onto the real milling operation. I loaded the file into Shopbot Command Console following the same steps taken previously, but this time I left the offset dropdown set to the default No Offset as opposed to 3D offset, so the machine would run another air cut. Before running this operation, I ensured the dust collection was turned on, and then clicked the enter key to start the operation.</p> <p>The assembly and post-processing work on this wooden tank structure is well documented on my week 7 computer-controlled machining class page, and that work will not be documented in-depth again on this page for space reasons, however, the final assembled and post-processed beauty shots are included below.</p> <p> </p> Final Shots of Sanded Fish Tank Structure <p>After the completion of my tanks structure in my week 7 class, a couple of additions had to be made to allow for the mounting of a mains AC input, my front panel electronics, as well as a mount for my tanks grow lights. Beginning with the mount for my mains AC adapter, I used a paddle bit on my drill to take out some material in the shape of the adapter on the back of the tank, before finishing up the rectangle with a chisel, using the adapter as a reference until reaching a press-fit install. I also drilled two M4 mounting holes with this adapter as a reference, allowing for a secure attachment of the adapter to the frame.</p> <p> Mains AC Adapter and Switch Box Mounting Hole </p> <p>The cables from this adapter are routed through this pocket on the back of my tank, and into the underside electronics enclosure before the adapter is mounted to the frame with M4 bolts, as shown in the images below. Note these M4 screws were just a place holder and were replaced with some nice matching matte black M4 bolts, allowing for a cleaner adapter look.</p> <p> </p> <p>The next addition to my plywood tank structure is the grow light mounting bard, which ran across between the two highest points of my structure. This bar is made out of some scrap plywood from my tanks CNC job, and I ripped it down to size on a table saw, before tweaking the height to match that of its mounts on a bandsaw. I used the same tactics sued to assemble the tank structure to mount this light bar, with something dowels for alignment, with wood glue to hold. Underneath this bar, on the side that will be facing the eventual plant box, I mounted three rows of Grow Light Strips, a strip of special neo pixels with light frequencies meant to help plant growth. In my particular case, I used 4 red : 1 blue strip, and alternated the mounting of the three rows to offset this pattern.</p> <p></p> <p>The final modification needed on my plywood tank structure was a pocket allowing for the mounting of my front panel\u2019s electronics, a switch, and my tank\u2019s LCD. I spent a while pinpointing the location and sizing of this box, as to not interfere with the lip holding the acrylic panel over my electronics enclosure, a feature discussed later on this page. I used a speed square and a Metric/Imperial ruler to draw out a pocket large enough to fit the two needed components, with some additional space for wiring, considering the restrictions of the area throughout. </p> <p> Front Panle Electronics Clearence Hole Layout </p> <p>I then followed the same approach taken to remove material for my mains AC adapter mount, starting by removing material with paddle bits and my drill, before cleaning up with a chisel. This hole will eventually be completely covered with the front panel of my tank, so I wasn\u2019t too concerned with the appearance of this one. After all the material was removed, I was left with the clearance hole, shown below.</p> <p></p>"},{"location":"Projects/AssistiveAquaponics/#tank-front-plate","title":"Tank Front Plate","text":"<p>To cover up this newly carved electronics clearance hole, and also complete the side symmetry of my plywood structure, my next step was to laser cut my tank structure\u2019s front plate. I began this plate in Fusion 360, as even in 2d design, I find myself most conferrable when using Fusion 360\u2019s constraints and sketch interface. I mocked this plate up to hold my system\u2019s LCD and a light power switch over the physical cut clearance hole and then added in some icons to the plate, including a TW logo, as well as a light on and light off icon.</p> <p>I saved this Fusion 360 sketch as a .dxf and imported the file into CorelDRAW, where I could then, following the same process I took in week 3, could run this file on our lab\u2019s Fusion Pro 48 laser cutter. I ran this plate of a sheet of 1/4\u201d plywood, a sheet with matching veneer to that of my plywood structure, allowing the front plate to blend in with the rest of the structure. I wanted to reduce as much laser residue and char on this piece as possible, so I weighted this piece down to the bed of the laser before focusing on the laser, and starting the job. To get a minimal amount of char took a couple of different attempts, but eventually, I was left with the product below \u2026</p> <p></p> <p>\u2026 and after a bit of touching up, fit perfectly to the front of my tank, aligning with the electronics clearance hole, and when mounted with some brass furniture screws, left me with the tank front below.</p> <p></p>"},{"location":"Projects/AssistiveAquaponics/#electronics-compartment-cover","title":"Electronics Compartment Cover","text":"<p>To finish up the fish tank structure that will be the bones of my final project, I laser cut a press-fit acrylic bottom panel for the base of the tank that will cover the electronic housing cutout located on the bottom of the tank structure. I followed the same steps take earlier this week to export the bottom panel as a .dxf file from Fusion, but instead of worrying about toolpaths for this file, I imported the .dxf into Inkscape, where I added in some air holes over the PSU mounting position, as well as a mount for a 40x40 fan for cooling. As a final touch, I included a QR code that links to this project page your reading currently, along with the project name and copyright. </p> <p></p> <p>Next, following the same process I took in week 3, I laser cut this file from 1/4\u201d acrylic on our lab\u2019s Fusion Pro 48 laser cutter.</p> <p></p>"},{"location":"Projects/AssistiveAquaponics/#acrylic-fish-tank","title":"Acrylic Fish Tank","text":"<p>Being the real centerpiece of my Aquaponics Fish Tank project, the fish tank itself was a special piece to work on, that I spent a good bit of time planning out before its creation. The tank, in its simplest form, is 5 acrylic panels cut on a laser cutter, and bonded together to form the tank itself with WeldOn 16. However just a plain acrylic box like this is a little too basic, and taking inspiration from an assignment completed by 7th-grade engineering classes in our lab, I decided to etch something on the back wall of my tank. This assignment I took inspiration from is a pretty simple project completed by our lab\u2019s seventh graders as an intro to the laser cutter. The gist of the assignment involves laser-cutting and etching an acrylic sign, and then shining a neopixel strip down on the acrylic, lighting up the etched portion of the assignment. My fish tank will include white neopixel light strips on the inside of the tank as accent lighting, and an etched back wall of my fishtank would complement well with these lights, just like the seventh-grade sign project. Although I didn\u2019t know for sure what I would be etched into this back panel yet, I knew I wanted this design to align with the four cutouts on the back wall of my wooden tank structure, so I began this tank design work referencing my physical wooden tank structure. I used Inkscape to create the tank\u2019s basic 5 rectangles, so four outer walls would all sit on a larger tank baseplate. From here, referencing the wooden structure again, I projected the cutouts of my structure\u2019s back wall to the back panel, giving me a workspace to include my future design. During all this Inkscape work, I remembered a conversation between one of my instructors, Mr. Tom Ducick and our Fab group, where Mr. Dubick brought up the inclusion of our Eagle designs outside of circuit boards. For the back panel of my fish tank, I decided on embedding an SVG exported from my first mainboard attempt made all the back in week 6. I used Inkscape\u2019s Intercect tool to crop this SVG down into the back walls four design slots. My final bit of work on this tank design fell on this back panel design again, as after meeting with another one of my instructors Dr. Terence Fagan, the point was brought up that as sweet as the etched original circuit board would look on the back panel of the tank, my final project is a fish tank, something that is more organic and doesn\u2019t make you think of something as modern looking as the sharpe traces of a circuit board. To combat this, I increased the nodes of this back panel design in Inkscape, and then also increased the designs beziers, until left with something still legible as my original circuit board, but less sharp and with more organic curves, leaving me with the finished fish tank design in Inkscape, shown below.</p> <p></p> <p>I exported this Inkscape design as an SVG file, and then opened the file into CorelDRAW, and following the workflow for laser cutting I used in my week 3 class, I ran this tank file on a sheet of 1/4\u201d clear acrylic on our lab\u2019s Fusion Pro 48 laser cutter.</p> <p>This job left me with the 5 panels of my tank, ready to assemble</p> <p></p> <p>As mentioned earlier, for the panel assembly of my tank, I\u2019m using WeldOn 16 to bond all of my acrylic panels together. This bonding process was super time-consuming, as each run with Weldon 16 required a 24 hour set time to completely bond. Despite this long total set time, the work time of WeldOn 16 is only a little over a minute, so all of my application had to be clean and quick. I used a set of two 90 degrees angle clamps to hold my tank\u2019s panels in place while using WeldOn 16 and left the clamps on through the 24 hours set time for each individual corner to allow for a square tank. Below is an image of the last bonding run for the tank\u2019s sidewalls.</p> <p></p> <p>The longes part of the tank assembly was all 4 of the sidewalls of the tank, and after this 4-day process was complete, I followed the same application process for the bottom of the tank, this time holding the pieces in place with some painters tape along all edges, as well as across both pieces, shown below.</p> <p></p> <p>After this final bit of bonding was entirely set, I went to test out by tank, setting the tank up on a sheet of cardboard to see if any water leaked out, and unfortunately, it did \u2026 a lot. </p> <p></p> <p>I found that although WeldOn 16 worked great for the structure of my tank, and allowed for a secure bond between all of the tanks panels, it didn\u2019t leave a watertight seal. This problem was simply fixed, however, with the application of silicon to the interior edges of my tank. During this step finding an Aquarium-Safe Silicone is super important, as to not kill any future fish. I found this article on Aquarium-Safe Silicones to be a super helpful reference while picking one of these, and with the article as a reference, was able to pick a tank safe silicone out from my local hardware store. </p> <p>The application process for this silicone was worlds easier than the previous WeldOn 16 work, due to the large working window with the product, and ability to do all of my tanks edges at once. I worked through starting with the four bottom edges of my tank, before tackling the four vertices, and then taking out any high spots on these lines with a popsicle stick.</p> <p></p> <p>The set time for this silicone was only 15 hours, but 24 was recommended on my brand\u2019s datasheet before exposer to water, so after this time, another watertight test of my tank was in order. I set up my silicone sealed tank of some sheets of dry computer paper, to reveal any leaks right away. I stress tested the sealed tank, filling it up to the brim with water, and then allowing the tank to sit for 3 hours, checking back on it around every 30 minutes. This test yielded successful results, with no water on the computer paper, and dry external semes on the tank, leaving with finally, with a fish ready tank!</p> <p> Water-Tight Test on Sealed Tank - Three Hour Mark </p> <p> BTT Rubber Duckies Enjoying the Water-Tight Tank </p>"},{"location":"Projects/AssistiveAquaponics/#plant-box-3d-printing","title":"Plant Box - 3D Printing","text":"<p>Following the acrylic fish tank, the aqua part of the aquaponics system, it was time to move onto my tank\u2019s plant box, covering the system ponics side. The fabrication of this plant box is one of the additive processes used on my tank, allowing me to incorporate otherwise impossible features, such as embedded water pipes, and nice cable management. Around the time of designing this plant box a nice article from Prusa Research came out on How to Make Prints Waterproof, and its contents gave this additive plant box manufacturing some more light. With the contents of that article, as well as this article on Waterproof Printing from All3D as a reference, I settled on some basic goals for this plant box manufacturing, The box itself will be printed from white PETG. PETG is not only one of my favorite filaments to print in, but also considered a watertight material, and when not colored and left white, is also fish tank safe.</p> <p>With the manufacturing process in mind, I began work on the plant box\u2019s CAD in Fusion 360. The CAD for this part is pretty complex, including not just water routing from a connection port on the bottom of the part, but also a water directing reflow system, and cable management with board mounts incorporated in the design. The part is split into four separate sections, to allow for optimal print orientation on my printer\u2019s bed. These four pieces align with three mounting alignment holes for embedded M3 nuts and bolts, and these same alignment screws are used to secure the four sections together.</p> Final Plant Box Itteration in Fusion 360 <p>After the completion of all design work for my tank\u2019s plant box, the tedious process of manufacturing was ready to begin. In total, all four parts of the plant box took just over 72 hours to print. Each of the printed parts went through a couple of extra steps in the slicing process, where the plant box\u2019s water tightness would be ensured. The basic premise of a watertight component relates very closely to the density of that component. With this in mind, each of the four plant box parts are sliced with four perimeters, and with a 10% gyroid infill, an infill type with super high strength along with a low weight (less filament usage). Each of these parts runs at a 0.20mm layer height, allowing for a relatively high part density while keeping a lower number of layer lines, places where water could seep into the print. After all of this, I used Prusa SLicer\u2019s ( my slicer of choice) Paint on Supports tool, to add supports to the aspects of my print where they were needed. This step, as opposed to auto-generating the supports allowed me to keep the internal water pipes of my part intact and usable without supports clogging them, shown in the inspected slicing image below.</p> <p></p> <p>This slicing setup process was used across all four parts of my tank plant box, and after a ton of print time, I was left with the task of assembly. As mentioned above, my CAD design for this part includes alignment pins for all four of the plant box\u2019s sections. After cleaning up the supports from each of these sections, I inserted the embedded M3 nuts used in this alignment setup and dry-fit the four parts together with the alignment M3 bolts. After this, I repeated the same assembly process, this time using the same silicone used to seal my tank on all of the inside surfaces on my plant box sections, leaving me with the assembled part below\u2026</p> <p></p>"},{"location":"Projects/AssistiveAquaponics/#electronics-mounting-cable-managment-3d-printing","title":"Electronics Mounting &amp; Cable Managment- 3D Printing","text":"<p>Following the plant box system of my assistive aquaponics fish tank, a plethora of other small bits and pieces helping with the system integration of my part were also made with the 3d printing workflow. Due to a large number of these small bits, and their relative simpleness, instead of taking a deep dive into the concept behind each design and the manufacturing of the part, I\u2019ll just hit some design concept highlights in this paragraph, and include the CAD and manufacture a part for each piece below. All of these parts are mounts of one kind or another, either press fit for boards, or bolt down for cables/sensors. A lot of these pieces serve as a visual benefit just as much as their purpose of mounting and cable management. With this in mind, many of the pieces are designed with a framing drafted banding around the edge. Inspiration from this angled framing came from my time in my 8th-grade art class, where I was taught the practice of directing a viewer\u2019s vision. The angled frame of a lot of these mounts serves to direct your vision inward, away from the frame itself. In addition to the angled nature of these mounts, any part I\u2019m wishing to achieve this effect with is printed from a black PETG, assisting in the directing of vision away from them, as they don\u2019t \u2018pop\u2019. A good example of this effect is seen in the Fish Bowl Board Mount part included below. This mount, for my fishbowl mainboard, uses the framing draft angle technique, along with the black filament color to direct one\u2019s eyes towards the center of the board, where the microchip is located, upon first glance.</p>"},{"location":"Projects/AssistiveAquaponics/#fish-bowl-board-mount","title":"Fish Bowl Board Mount","text":"Board Prototype Fitted in Fish Bowl Board Mount"},{"location":"Projects/AssistiveAquaponics/#jumper-cable-mounts","title":"Jumper Cable Mounts","text":"12x Jumper Mount On Jumper Cables"},{"location":"Projects/AssistiveAquaponics/#psu-mounting-brackets","title":"PSU Mounting Brackets","text":"Power Supply Mounting Brackets After Cleanup Power Supply Mounts Attached to PSU"},{"location":"Projects/AssistiveAquaponics/#wire-grommet","title":"Wire Grommet","text":"Back Wire Grommet After Cleanup Back Wire Grommet Fitted to Wire Passthrough Hole"},{"location":"Projects/AssistiveAquaponics/#psu-terminal-cover","title":"PSU Terminal Cover","text":"PSU Terminal Cover Plate After Cleanup PSU Terminal Cover Mounted to PSU Terminals"},{"location":"Projects/AssistiveAquaponics/#power-breakout-board-mount","title":"Power Breakout Board Mount","text":"Power Breakout Board Fitted in Board Mount"},{"location":"Projects/AssistiveAquaponics/#ph-boards-mounts","title":"pH Boards Mounts","text":"pH electrical Isolation Board Mounted on Board Mount"},{"location":"Projects/AssistiveAquaponics/#ph-probe-mount","title":"pH Probe Mount","text":"Assembled pH Probe Mount After Cleanup"},{"location":"Projects/AssistiveAquaponics/#cable-bundle-mounting-clips","title":"Cable Bundle Mounting Clips","text":"Cable Bundle Clip Mounted to Back of Tank Structure"},{"location":"Projects/AssistiveAquaponics/#system-assembly-testing","title":"System Assembly &amp; Testing","text":"<p>Due to the countless design hours spent planning the assembly of my entire tank, this process had plenty of digital references, making the most time-consuming process of the assembly the one, not digitally planned aspect, cable management. I began the assembly process on this task, beginning with the connection of my power supply to mains via the inlaid AC adapter in my tank structure. Due to the dangerously high voltages in these terminals, I followed best practices for the connecting of these wires, using crimp-on connectors for each wire connected to these terminals, as well as grounding the whole system, and including an AC adapter with a 250v fuze.</p> <p> </p> Power Supply Terminal Wireing <p>As included above, these PSU terminals have a 3d printed terminal cover plate, to provide a little extra protection from any accidental bumps into the terminals. After completing the terminal wiring of the PSU, I installed this terminal cover plate, screwing it down to the wooden plate with M3 screws. I then, with the installed PSU as a reference, found the center of the remaining chunk of the electronics compartment and installed my printed fishbowl main board mount.</p> <p> </p> Begining of System Integraiton - PSU and Main Board <p>Taking a break from cable management for a bit, It was time to begin the incorporation of my tank\u2019s subsystems into my plywood tank structure, beginning with my acrylic fish tank. The tank was designed to be an exact fit in this plywood structure, and after real-world fabrication, fit in the structure tight enough to stay put without adhesives of fasteners, even when upsidedown. For the installation of the acrylic tank into the plywood structure, I used four wood clamps long enough to span the width/length of both pieces, and then used the clamps to slowly and evenly press the tank into the structure so it sat flush on all four connecting walls. Following this, I then reattached the structure\u2019s laser-cut front panel with some brass furniture screws.</p> <p> </p> Acrylic Fish Tank Installed in Plywood Structure <p>Next, I began preparing the next subsystem of my tank, the plant box. Due to the predesigned cable management features, the process of including the necessary components here was pretty straightforward. I first routed the tank light strips along their channel, using the zip tie cable mount and cable passthrough to route the cables out the back grommet hole of the plant box. From here I routed a wire that would later be connected to the tank\u2019s water pump and finally moved onto the inlaying of the fishbowl board. Behind this board inlay is a little channel meant for the jumpers to run through while attached to the backside of the board. I connected these jumpers to their pins on my fish board, super glued them in place, and took a picture for reference later, as the wires will next be completely hidden. Then, I pressed the board into its corresponding slot, followed by its press-fit laser cut acrylic cover, and sealed around any gaps with silicon. This left me, as shown below, with a mounted sensor board with only the sensor itself exposed.</p> <p> </p> Bottom of Plant Box After Electronics &amp; Cable Installation <p>I was then ready to press this plant box into place, with all of its mounted electronics. The plant box follows the same tight press fit mounting principle as the previous acrylic tank, however instead of using clamps, I slowly worked the assembled plant box back into position, until aligned with the acrylic fish tank and plywood structure, shown below.</p> <p></p> <p> </p> Plant Box Installed in Tank Structure Above Acrylic Tank <p>While pressing the plant box into position, I was sure to route and keep the structures grow light wires in their cable passthrough on the side of the plant box, yielding some nice clean cable routing across the components of the whole system.</p> <p> </p> Grow Light Cables Routed Through Plant Box Cable Passthrough <p>After the installation of all this, a test of the newly installed lights was in order, and I hooked up both my tank\u2019s grow &amp; tank lights to a power supply set to 12v and turned them on.</p> <p> </p> System Grow &amp; Tank Lights Testing <p>With the bulk of the structure assembly done, I next began the mounting and integration process, starting with the internal tank components like the pH probe. I attached both printed probe clamps to my pH probe and then used some silicone to stick it in the back left corner of my tank, where the probe cable routed up through the plant box, hidden away.</p> <p> </p> pH Probe Mounted in Back Left Tank Corner <p>Following the pH probe, next up in the tank itself was the water pump. I first connected the pump to the plant box via both a bit of silicone tubing cut to length and then hose clamped and siliconed in place, as well as with connection between the pump\u2019s cable and the router pump wires installed previously. I then used the pump\u2019s two included mounts to stick the pump down to the tank floor with silicone.</p> <p> </p> Water Pump Connected &amp; Installed in Tank <p>Once all contents of the tank/plant box systems were embedded, I could move on routing their cables down to my structure\u2019s main electronics compartment. I used the 3D-printed cable clips printed earlier to route these cables down the back of my tank, between the two included wire grommets. I wrapped all of these cables with some cable wrap I had laying around from and Ender 3 mod I had done.</p> <p> </p> Cable Routing From Plant Box to Electronics Compartment <p>These routed cables run through the cable passthrough grommet on the backside of the tank and then slot through their cable route in the PSU terminal cover plate, until out the other side. From here the bulk of cable management began, starting with the power breakout system. I mounted the power breakout board on its 3D printed mount right below the fishbowl mainboard, and then connected the correct incoming and outgoing wires to their connected headers while referencing my eagle power breakout board file. Each of these cables was screwed into their terminal headers before the board was mounted down to the wooden base. From here I began the mounting of the 3 remaining pH boards, two of which sit to the left of my mainboard, and one just off-centered above. These three boards mount via press-fit mounts &amp; their mounting holes, two boards with 3mm holes, and one with 4mm. I then connected the incoming pH probe cable to its terminal, and wired the three pH boards together, before moving onto the main data wiring. Using all of my testing media as a reference, I made the jumper connections for all of the lines in my electronics enclosure, coming from the pH board, temp/humidity sensor, LCD, and light switch, and with that had an integrated system.</p> <p> </p> All Board Mounted Electronics Compartment <p>Although I had wired all of my connections with mounted boards in my electronics enclosure, I finished the system integration process with some additional cable management via jumper cable mounts.</p> <p> </p> Final Cable Managed Electronics Compartment <p>\u2026 and, with all this assembly &amp; integration work done, it was time for final testing. Below is a successful demonstration of my tank\u2019s electronics system. Just a note, in this video, my tank\u2019s pump is disconnected, because it\u2019s never good to run a water pump outside of water. Instead of leaving this pump connected during the testing of the electronics system, I tested the voltage and current from the pump cables run under the plant box.</p> <p>Finally, came the water test. Despite the number of water tests I had done with the subsystems before, and the proof of their watertight features, this test was damn stressful leading up to it, due to the inclusion of all my electronics in my system on this test. I prepared a spot outside where I could test my tank, and then began preparing the tank, first by filling the plant box with my LECA grow medium \u2026</p> <p></p> <p>\u2026 and next, by filling the tank itself. I did this with the help of a couple of my fab groupmates and was able to use a spare water pump and some excess silicone tubing to pump water into my fish tank, without concern of spilling around the base of the tank, where its electronics are located.</p> <p>Unsurprisingly, but to my relief, the filling of the tank went smoothly, and there was absolutely no spillage/leakes anywhere in the whole system, leaving me with the last remaining tank \u2026 turning it on.</p> <p>it worked!, upon bootup, water begins flowing through the system, and draining out through the plant boxes draining feature, at the same time as the electronics system is taking measurements from the system and displaying it all of the tanks embedded front LCD. </p>"},{"location":"Projects/CornerDesk/","title":"Cable Managed Corner Desk","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/CornerDesk/#cable-managed-corner-desk","title":"Cable Managed Corner Desk","text":"Teddy Warner| Spring, 2020 |  6-8 minutes <p>This start of the Pandemic project stemmed from my freshman year engineering capstone project. At the start of 8th grade I had an issue, I was a couple of months into learning Fusion360 and I decided to upgrade my setup from an old janky pc to a brand new laptop and some 20-inch monitors to go along with it, which was great and all but gave me a whole tone of issues to sort out. I had this great desk in the corner of my room, that my great grandfather built and that had been passed down to me, however, there was one huge flaw using that desk with my brand new setup and that was cable management. Below are some plans draw out for the desk.</p> <p> </p>"},{"location":"Projects/CornerDesk/#cad","title":"CAD","text":"<p>So I set off in Fusion to design a desk that fit all of my needs. My goals were to have a desk measured to fit perfectly in the corner of my room, with plenty of legroom so I would never hit my knees on it, and the best cable management imaginable. And after a couple of different iterations, I came up with this Model.</p>"},{"location":"Projects/CornerDesk/#lowes-trip-and-new-tool","title":"Lowes Trip and New Tool","text":"<p>However shortly after finishing up the CAD aspect of this project, Covid-19 caused our school to resort to online learning, cutting me off from our school\u2019s lab equipment, however, I happen to have a lot of the tools we have in our lab in my little workshop at my house, and I was pretty determined to finish the desk, so just before everything closed down I took a trip to lowes to pick up some lumber and supplies. I settled on a frame and cabinet of 2x4s and some plywood that was painted white pretty quickly, but the top took some more thought. Eventually, I decided to make the top out of cedar planks that were stained with Provincial to match the stain of the floor in my room. Also at lowes, I picked up a Kreg-Jig to drill pocket holes for the desk, as I didn\u2019t like the idea of screws being visible. It was my first time using a Kreg-Jig but it went super well as it\u2019s a relatively simple jig to use.</p> <p></p>"},{"location":"Projects/CornerDesk/#building-process","title":"Building Process","text":"<p>A couple of days after getting the wood, I finally started assembling the desk, starting by laying down the frame, making sure the front 2x4 was flat and the back was upright (to give more leg space) and I was pretty excited to get the whole thing together. Maybe a little too excited because even though you can\u2019t tell from the pictures above, I built the whole desk wrong, putting the corner on the wrong side. This was a huge setback to fix as it meant that I would have to take the entire desk apart, use wood filler on all of the newly exposed holes, and build it back up the right way. I was even considering just leave the desk as is, and rearrange my room to match the flaw, however, I wanted my desk to be perfect and that meant fixing it according to my CAD model. So I did the laborious tasks listed above and finished the frame of the desk the right way late that night. The next day I was ready to do some more on of the desk, so I decided to start throwing together the top. I spent that whole day sawing, planning, and sanding the cedar before I put the top together using the Kreg-Jig the next morning. And this time I didn\u2019t make a single mistake, and I\u2019m really happy with the result.</p> <p></p> <p></p> <p></p>"},{"location":"Projects/CornerDesk/#painting-and-staining","title":"Painting and Staining","text":"<p>I spent the next two days painting the frame with three coats of white paint and staining the cedar with Provincial. </p> <p> </p> Stained Desktop"},{"location":"Projects/CornerDesk/#assembling-the-desk","title":"Assembling the Desk","text":"<p>As I said earlier the choice of wood for the surface of the desk took some thought, but I\u2019m super glad I went the cedar route. Originally I was planning on using oak, but the cost scared me away to a much better smelling and looking cedar. My only concern with this type of wood was how much it expands and contracts. I was concerned that screwing a cedar top to my frame would just wiggle itself loose over time and cause issues. So I came up with a workaround. Instead of attaching the Cedar top directly to the frame, it\u2019s held by 3d Printed mounts that allow the top to expand and contract a whole lot more without becoming loose. I\u2019m super happy I took the time to figure this one out as it\u2019s going to save me trouble with using cedar in the long run.</p> <p></p>"},{"location":"Projects/CornerDesk/#cable-management","title":"Cable Management","text":"<p>This is a huge part of the project as it\u2019s one of the reasons I decided to even build a new desk in the first place. After attaching the top of the desk to the frame, I threw on this great air spring laptop mount that routs all of the cables from my laptop through a grommet in the top on the table, down to the corner cabinet. The cabinet is designed with a false top that hides all of the cables (except for two going to the subwoofer on a lower shelf) from inside the cabinet. Then the cables are routed through a hole in the back and ran through 3d printed cable clips on the back of the desk. The cable clips are exactly as long as the trim of our floor is, so they don\u2019t push the desk off the wall any more than it needs to be. All of the cables are then ran to where their needed (i.e monitors, speakers, keyboard, google home, etc.). Finally, all of the power cables are ran back into the top of that corner cabinet and plugged into a built-in power strip, which plugs into a wall socket directly to the left of the cabinet, hiding all the cables from view.</p> <p></p>"},{"location":"Projects/CornerDesk/#final-thoughts","title":"Final Thoughts","text":"<p>I love how my desk came out, It solves all of my annoying cable issues and fits perfectly in the right corner of my room. Eventually, I\u2019m planning on wall mounting my monitors to give me even more desk space, however, the little corner piece gives me a perfect location to use a pen and some paper and write things out. Putting the desk in its place, I realized that there was way too much space above it and after some browsing, I found some shelves on amazon that use the same stain and match perfectly, so I ordered and installed those over the desk. This project we surprisingly smoothly in the face of the current Pandemic, and even with my building setbacks came out well.</p> <p> </p> Final Desk Beauty Shot"},{"location":"Projects/KlipperEnder3/","title":"Klipper Enabled Ender 3","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/KlipperEnder3/#klipper-enabled-ender-3","title":"Klipper Enabled Ender 3","text":"Teddy Warner| Spring &amp; Summer, 2021 |  10-12 minutes <p>Due to uncertainty surrounding lab access during the Covid-19 pandemic, I received an Ender 3 3D-printer at the start of my cycle in Fab Academy. During my second week in the course, I built and began to mod this machine as a little side project to the course work. However as the cycle progressed, I quickly ran out of time to keep working on this machine\u2019s mods and moved the machine to my closet, where it sat up until the Klipper firmware piqued my interest. After modding the printer during Fab Academy<sup>1</sup>, I was running the machine on Marlin linked to Octoprint<sup>2</sup>, a setup I use on my other machines. This setup worked great with my machine mods, allowing me to print over a network through Octoprint as I would on any of my other Octoprint enabled machines. In this configuration, a Raspberry Pi running Octorpint hosts a local server that .gcode flies can be uploaded to and ran from. The Pi sends this uploaded .gcode to the machine\u2019s mainboard, where the code is processed, and movements/operations are determined.</p> <p>Klipper Opperation Principal</p> <p>Klipper on the other hand operates on a different principle. The firmware runs across both the mainboard and the Raspberry Pi, allowing for the same type of hosted server to exist (I used FluiddPi as my servers GUI), but instead of relying on the machines mainboard to compute .gcode, the code parsing is done by the Raspberry Pi - the more powerful computer- leaving the machine mainboard to only worry about stepper movements and operations. This setup uses the given hardware of a setup more optimally, allowing for faster calculations and more precise movements.</p> <p>After learning about the benefits of Klipper I knew I had to try it out and thus, the Ender 3 modding project was revied and pulled from the closet.</p>"},{"location":"Projects/KlipperEnder3/#ender-3-modding","title":"Ender 3 Modding","text":"<p>Before the installation of Klipper, here are all the hardware mods done to the machine. I upgraded the main bored from the original factory board to a SKR Mini E3 V2, and the original factory screen I switched out to a TFT35 Touchscreen. Following that I added a Bltouch for auto bed leveling, and switched the machine from Bowen to direct drive, with this Thingiverse design. I spent some time adding some customization to the machine as well, giving the direct drive system a little nameplate.</p> <p></p> <p>Finally, I moved all of the electronics of the machine to the rear of the machine using this Thingiverse design. This mod gave the space to add a raspberry pi and a means of power for it in addition to the mainboard, a perfect case for a Klipper-enabled machine.</p> <p></p> <p></p> <p>I used this Thingiverse design to mount a raspberry pi camera to my printer\u2019s x-axis as shown in one of the pictures below. All of these modifications were done with parts printed on my Prusa I3 Mk3S+, and electronics I had laying around, making these printer modifications only take around three days to complete, including the time it took to print the parts.</p> <p></p> <p></p>"},{"location":"Projects/KlipperEnder3/#klipper-installation","title":"Klipper Installation","text":"<p>As mentioned in the introduction paragraph of this page, I settled on using FluiddPi as the GUI for this Klipper setup. As opposed to a more broadly know GUI like Octoprint, FluiddPi offers some features that work directly with Klipper that make the entire experience pretty seamless. FluiddPi in addition to containing the servers GUI also packages Klipper &amp; Moonraker into the software image, making the install of Klipper super straightforward. </p> <p>Download the Latest FluiddPi Image </p> <p>Beginning the installation of Klipper, the first step is to download and flash the latest FluiddPi image (linked above). This Pi image can be flashed as you would with any other Raspberry Pi project - I use balenaEtcher for flashing, its simple 3-step interface makes the process super straightforward. After a successful flash of this image on your Pi\u2019s SD card configure your WiFi information in the fluiddpi-wpa-supplicant.txt located on the flashed SD card (If you\u2019re using wired internet, you can skip this setup). Then, you can install your flashed SD in your Pi and boot. </p> <p>Next, some basic Pi config. Make sure you are on the same WiFi network you set up your Pi on, and then SSH into your booted Pi at the IP fluiddpi.local with the Pi\u2019s default credentials (Username - pi / Password - raspberry). I use Putty as my SSH client as again, it\u2019s pretty straightforward to use. Once connected to your Pi, run the command \u2026</p> <pre><code>sudo raspi-config\n</code></pre> <p>to open the configuration GUI. Here you can change your Pi\u2019s credentials (highly recommended), set up your local timezone (to allow for accurate machine ETAs), and change your machine\u2019s hostname (thus changing the URL from the default fluiddpi.local to YOURHOSTNAME.local). After all, changes, reboot your Pi and then confirm all software is up to date with the lines</p> <pre><code>sudo apt-get update\nsudo apt-get upgrade\n</code></pre> <p>Congrats!</p> <p>You have now successfully set up FluiddPi on your Raspberry Pi, and can now connect to its web server with the URL http://fluiddpi.local ( or if you changed your hostname, with the URL http://YOURHOSTNAME.local).</p> <p> </p> The FluiddPi Web Server Interface <p>Upon connection, the webserver will throw an error with a lack of a printer.cfg file. This file is your machine config file. Notably different from Marlin, Klipper does not require a machine to be specified before the flash but instead looks to this printer.cfg file for machine configuration. One of the benefits of using FluiddPi for Klipper is the ability to alter this printer.cfg file and reboot the firmware right from the server\u2019s GUI. The machine configuration for my Klipper Enabled Ender 3 is covered later on this page under the Klipper Configuration section, but for any other machines, preconfigured printer.cfg files can be found online.</p> <p>Next up, building Klipper to for machines mainboard. SSH back into your Raspberry Pi (making sure to change your IP to match your altered hostname if you changed it) and run the commands \u2026</p> <pre><code>cd ~/klipper/\nmake menuconfig\n</code></pre> <p>to open the mainboard configuration GUI. Work through this interface with your mainboards information before running the command \u2026</p> <pre><code>make\n</code></pre> <p>to build your set configurations. Now, connect your Pi and machine mainboard via USB and determine the connected serial port with the line</p> <pre><code>ls /dev/serial/by-id/*\n</code></pre> <p>the report this line will yield provides the serial port that connects your mainboard to your Pi, take note of this.</p> <p>Now, to begin the flashing, run the lines\u2026</p> <pre><code>sudo service klipper stop\nmake flash FLASH_DEVICE=YOUR-SERIAL-PORT-INFORMATION-HERE\nsudo service klipper start\n</code></pre> <p>making sure to paste in the reported serial port where it says YOUR-SERIAL-PORT-INFORMATION-HERE. This will flash the built Klipper instance to your machine\u2019s mainboard, and then begin communication between the two parallel boards. </p> <p>Good Work!</p> <p>Klipper is now installed.</p>"},{"location":"Projects/KlipperEnder3/#klipper-configuration","title":"Klipper Configuration","text":"<p>As mentioned prior, unlike the Marlin firmware, Klipper is not compiled for a specific machine. Instead, the firmware looks to a machine configuration file - printer.cfg. This file can be altered without the reflashing of the firmware, just a simple reboot, thus making machine tinkering and hardware swapping significantly simpler. This printer.cfg file can be altered in the FluiddPi web server interface, simplifying the configuration process even more. </p> <p> </p> FluiddPi's Configuration Menu in Web Server Interface <p>As shown above, your printer.cfg file can be accessed in FluiddPi\u2019s configuration menu. Due to Klipper\u2019s ability to experiment with your machine config, my printer\u2019s configuration is always subject to change, but included below is the latest machine config running on my Klipper Enabled Ender 3.</p> printer.cfg<pre><code># See docs/Config_Reference.md for a description of parameters.\n\n[virtual_sdcard]\npath: ~/gcode_files\n\n[display_status]\n\n[pause_resume]\n\n[stepper_x]\nstep_pin: PB13\ndir_pin: !PB12\nenable_pin: !PB14\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^PC0\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_x]\nuart_pin: PC11\ntx_pin: PC10\nuart_address: 0\nrun_current: 0.580\nhold_current: 0.500\nstealthchop_threshold: 999999\n\n[stepper_y]\nstep_pin: PB10\ndir_pin: !PB2\nenable_pin: !PB11\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^PC1\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_y]\nuart_pin: PC11\ntx_pin: PC10\nuart_address: 2\nrun_current: 0.580\nhold_current: 0.500\nstealthchop_threshold: 999999\n\n[stepper_z]\nstep_pin: PB0\ndir_pin: PC5\nenable_pin: !PB1\nmicrosteps: 16\nrotation_distance: 8\nendstop_pin: probe:z_virtual_endstop\n#position_endstop: 0.0\nposition_min: -5\nposition_max: 250\n\n[tmc2209 stepper_z]\nuart_pin: PC11\ntx_pin: PC10\nuart_address: 1\nrun_current: 0.580\nhold_current: 0.500\nstealthchop_threshold: 999999\n\n[extruder]\nstep_pin: PB3\ndir_pin: !PB4\nenable_pin: !PD2\nmicrosteps: 16\nrotation_distance: 7.61\npressure_advance = 0.235\nnozzle_diameter: 0.400\nfilament_diameter: 1.750\nheater_pin: PC8\nsensor_type: EPCOS 100K B57560G104F\nsensor_pin: PA0\n#control: pid\n#pid_Kp: 21.527\n#pid_Ki: 1.063\n#pid_Kd: 108.982\nmin_temp: 0\nmax_temp: 250\n\n[tmc2209 extruder]\nuart_pin: PC11\ntx_pin: PC10\nuart_address: 3\nrun_current: 0.650\nhold_current: 0.500\nstealthchop_threshold: 999999\n\n[heater_bed]\nheater_pin: PC9\nsensor_type: ATC Semitec 104GT-2\nsensor_pin: PC3\n#control: pid\n#pid_Kp: 54.027\n#pid_Ki: 0.770\n#pid_Kd: 948.182\nmin_temp: 0\nmax_temp: 130\n\n[heater_fan nozzle_cooling_fan]\npin: PC7\n\n[fan]\npin: PC6\n\n[mcu]\nserial: /dev/serial/by-id/usb-Klipper_stm32f103xe_36FFDB05424E313841781457-if00\n\n[printer]\nkinematics: cartesian\nmax_velocity: 300\nmax_accel: 3000\nmax_z_velocity: 5\nmax_z_accel: 100\n\n[static_digital_output usb_pullup_enable]\npins: !PA14\n\n[board_pins]\naliases:\n    # EXP1 header\n    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=&lt;GND&gt;,\n    EXP1_2=PA15, EXP1_4=&lt;RST&gt;, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=&lt;5V&gt;\n\n[display]\nlcd_type: st7920\ncs_pin: EXP1_7\nsclk_pin: EXP1_6\nsid_pin: EXP1_8\nencoder_pins: ^EXP1_5, ^EXP1_3\nclick_pin: ^!EXP1_2\n\n[bltouch]\nsensor_pin: ^PC2\ncontrol_pin: PA1\nx_offset: 32\ny_offset: -2\n#z_offset = 3.050\n\n[safe_z_home]\nhome_xy_position: 85.5,119.5\nspeed: 75\nz_hop: 10                 \nz_hop_speed: 5\n\n[bed_mesh]\nspeed: 120\nhorizontal_move_z: 5\nmesh_min: 32,44\nmesh_max: 202, 220\nprobe_count: 3,3\n\n[screws_tilt_adjust]\nscrew1: 0,45\nscrew1_name: front left screw\nscrew2: 164,45\nscrew2_name: front right screw\nscrew3: 164,220\nscrew3_name: rear right screw\nscrew4: 0,220\nscrew4_name: rear left screw\nhorizontal_move_z: 10.\nspeed: 50.\nscrew_thread: CW-M4\n\n[gcode_macro PAUSE]\ndescription: Pause the actual running print\nrename_existing: PAUSE_BASE\n# change this if you need more or less extrusion\nvariable_extrude: 1.0\ngcode:\n  ##### read E from pause macro #####\n  {% set E = printer[\"gcode_macro PAUSE\"].extrude|float %}\n  ##### set park positon for x and y #####\n  # default is your max posion from your printer.cfg\n  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n  ##### calculate save lift position #####\n  {% set max_z = printer.toolhead.axis_maximum.z|float %}\n  {% set act_z = printer.toolhead.position.z|float %}\n  {% if act_z &lt; (max_z - 2.0) %}\n      {% set z_safe = 2.0 %}\n  {% else %}\n      {% set z_safe = max_z - act_z %}\n  {% endif %}\n  ##### end of definitions #####\n  PAUSE_BASE\n  G91\n  {% if printer.extruder.can_extrude|lower == 'true' %}\n    G1 E-{E} F2100\n  {% else %}\n    {action_respond_info(\"Extruder not hot enough\")}\n  {% endif %}\n  {% if \"xyz\" in printer.toolhead.homed_axes %}\n    G1 Z{z_safe} F900\n    G90\n    G1 X{x_park} Y{y_park} F6000\n  {% else %}\n    {action_respond_info(\"Printer not homed\")}\n  {% endif %} \n\n[gcode_macro RESUME]\ndescription: Resume the actual running print\nrename_existing: RESUME_BASE\ngcode:\n  ##### read E from pause macro #####\n  {% set E = printer[\"gcode_macro PAUSE\"].extrude|float %}\n  #### get VELOCITY parameter if specified ####\n  {% if 'VELOCITY' in params|upper %}\n    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}\n  {%else %}\n    {% set get_params = \"\" %}\n  {% endif %}\n  ##### end of definitions #####\n  {% if printer.extruder.can_extrude|lower == 'true' %}\n    G91\n    G1 E{E} F2100\n  {% else %}\n    {action_respond_info(\"Extruder not hot enough\")}\n  {% endif %}  \n  RESUME_BASE {get_params}\n\n[gcode_macro CANCEL_PRINT]\ndescription: Cancel the actual running print\nrename_existing: CANCEL_PRINT_BASE\ngcode:\n  TURN_OFF_HEATERS\n  CANCEL_PRINT_BASE\n\n[gcode_macro START_PRINT]\ngcode:\n    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n    # Start bed heating\n    M140 S{BED_TEMP}\n    # Use absolute coordinates\n    G90\n    # Reset the G-Code Z offset (adjust Z offset if needed)\n    SET_GCODE_OFFSET Z=0.395\n    # Home the printer\n    G28\n    # Move the nozzle\n    G1 Z10 F3000\n    G0 X10 Y0\n    # Wait for bed to reach temperature\n    M190 S{BED_TEMP}\n    # Set and wait for nozzle to reach temperature\n    M109 S{EXTRUDER_TEMP}\n\n    G92 E0 ; reset extruder G1 Z1.0 F3000 ; move z up little to prevent scratching of surface\n    G1 X0.1 Y20 Z0.395 F5000.0 ; move to start-line position\n    G1 X0.1 Y200.0 Z0.395 F1500.0 E15 ; draw 1st line\n    G1 X0.4 Y200.0 Z0.395 F5000.0 ; move to side a little\n    G1 X0.4 Y20 Z0.395 F1500.0 E30 ; draw 2nd line\n    G92 E0 ; reset extruder\n\n[gcode_macro END_PRINT]\ngcode:\n    # Turn off bed, extruder, and fan\n    M140 S0\n    M104 S0\n    M106 S0\n    # Move nozzle away from print while retracting\n    G91\n    G1 X-2 Y-2 E-3 F300\n    # Raise nozzle by 15mm\n    G1 Z15 F3000\n    # Present Print\n    G90\n    G1 X0 Y190 F6000\n    G90\n    # Disable steppers\n    M84\n\n[gcode_macro M600]\ngcode:\n    {% set X = params.X|default(50)|float %}\n    {% set Y = params.Y|default(0)|float %}\n    {% set Z = params.Z|default(10)|float %}\n    SAVE_GCODE_STATE NAME=M600_state\n    PAUSE\n    G91\n    G1 E-.8 F2700\n    G1 Z{Z}\n    G90\n    G1 X{X} Y{Y} F3000\n    G91\n    G1 E-50 F1000\n    RESTORE_GCODE_STATE NAME=M600_state\n\n#*# &lt;---------------------- SAVE_CONFIG ----------------------&gt;\n#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.\n#*#\n#*# [bed_mesh default]\n#*# version = 1\n#*# points =\n#*#     -0.160000, -0.305000, -0.365000\n#*#     0.107500, -0.015000, -0.337500\n#*#     0.097500, -0.020000, -0.162500\n#*# tension = 0.2\n#*# min_x = 32.0\n#*# algo = lagrange\n#*# y_count = 3\n#*# mesh_y_pps = 2\n#*# min_y = 44.0\n#*# x_count = 3\n#*# max_y = 220.0\n#*# mesh_x_pps = 2\n#*# max_x = 202.0\n#*#\n#*# [heater_bed]\n#*# control = pid\n#*# pid_kp = 63.826\n#*# pid_ki = 1.462\n#*# pid_kd = 696.505\n#*#\n#*# [extruder]\n#*# control = pid\n#*# pid_kp = 25.693\n#*# pid_ki = 1.338\n#*# pid_kd = 123.326\n#*#\n#*# [bltouch]\n#*# z_offset = 2.900\n</code></pre>"},{"location":"Projects/KlipperEnder3/#printercfg","title":"printer.cfg","text":""},{"location":"Projects/KlipperEnder3/#slicer-configuration","title":"Slicer Configuration","text":"<p>Check out my Klipper Enabled Ender 3 machine profile page, linked below, for information regarding the slicer setup &amp; config, as well as my profile download.</p> <p>Klipper Enabled Ender 3 Profile</p> <ol> <li> <p>http://fabacademy.org/2021/labs/charlotte/students/theodore-warner/Assignments/week02/\u00a0\u21a9</p> </li> <li> <p>https://teddywarner.org/Projects/Octoprint/\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/LearnedSpectrum/","title":"Learned Spectrum","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/LearnedSpectrum/#learned-spectrum","title":"Learned Spectrum","text":"Teddy Warner| Fall-Winter 2024 |  18\u201322 minutes <p>Towards temporal understanding in AI through fMRI learning stage classification.</p> <p>Learned Spectrum was the first research step I took when starting my venture, Intempus. The full preprint may be accessed here.</p> <p>Intempus\u2019s Thesis</p> <p>World models cannot truly gain a comprehensive temporal understanding based solely on data collected from robots or purely external observations. </p> <p>Temporal understanding cannot be trained from data that goes from A -&gt; C. World models must be trained on data that goes from A -&gt; B -&gt; C.</p> <p>The collection of physiological state data may provide insight into man\u2019s temporal understanding, and thus how to train a neural network to understand cause and effect.</p> <p>Current efforts in world model development often rely heavily on data collected from robotic systems or external observations that we humans can describe (i.e. see chair thrown -&gt; move backward). These observations forgo the subconscious response integral to a human\u2019s actions (i.e. see chair thrown -&gt; physiological state change -&gt; move backward).</p> <p>If we acknowledge that current AI systems lack a subjective understanding of time, why do we primarily use data from these systems to try to instill temporal understanding?</p> <p>Data collected from human subjects could provide a window into how humans subjectively experience time, potentially leading to more sophisticated and human-like temporal reasoning in AI systems.</p>"},{"location":"Projects/LearnedSpectrum/#abstract","title":"Abstract","text":"<p>This research presents a novel approach to understanding temporal cognition through the application of Vision Transformers to functional Magnetic Resonance Imaging (fMRI) data analysis. While current artificial intelligence approaches to world modeling rely heavily on absolute temporal markers and timestamps, human perception of time operates as a fundamentally subjective experience that adapts with cognitive state and learning progress. We demonstrate that neural activation patterns captured during learning through fMRI contain rich temporal information that can inform more nuanced approaches to temporal processing in AI systems. </p> <p>Our implementation achieves significant accuracy in learning stage classification through three key technical innovations: </p> <ol> <li>A systematic channel reduction network that efficiently processes high-dimensional fMRI data while preserving critical spatial and temporal patterns.</li> <li>Specialized temporal processing networks that incorporate hemodynamic response characteristics and causal attention mechanisms.</li> <li>Progressive dropout strategies that maintain signal fidelity while encouraging robust feature learning. </li> </ol> <p>By analyzing these temporal patterns across multiple learning stages and tasks, we demonstrate the feasibility of developing AI systems capable of processing time as a relative rather than absolute construct. This work represents an important step toward artificial intelligence systems that can reason about time in ways that more closely mirror human cognitive processes.</p>"},{"location":"Projects/LearnedSpectrum/#introduction","title":"Introduction","text":"<p>The development of artificial intelligence world models faces a fundamental constraint in temporal processing. While current systems effectively handle timestamp data and sequential predictions, they lack the ability to process time as a subjective, relative construct - a core component of human cognition and learning.</p> <p>Training world models exclusively on robot-collected data proves insufficient for developing true temporal understanding. We propose that biometric data, specifically neural activation patterns from fMRI, provides essential insights into subjective time perception during learning processes.</p> <p>This work implements a Vision Transformer architecture optimized for learning stage classification from fMRI data. While fMRI presents known limitations in its reliance on blood-oxygen-level-dependent (BOLD) signals, deep learning architectures can extract temporal patterns that traditional analysis methods miss.</p>"},{"location":"Projects/LearnedSpectrum/#theoretical-framework","title":"Theoretical Framework","text":"<p>Our implementation builds on three foundational principles that bridge neuroscience and artificial intelligence:</p> <ul> <li>Time perception functions as an inherently subjective experience that varies with cognitive state and learning progress</li> <li>Effective world models must incorporate mechanisms for understanding and adapting to subjective temporal experiences</li> <li>Biometric data, particularly fMRI, provides a unique window into how biological systems process temporal information</li> </ul> <p>Traditional approaches to AI world models process time as a simple progression of timestamped events. However, human cognition demonstrates that temporal perception is deeply integrated with learning states, emotional conditions, and physiological factors. This integration proves essential for causal reasoning and adaptive learning. Our architecture incorporates these principles through specialized temporal processing networks and attention mechanisms that can adapt their temporal processing based on context.</p>"},{"location":"Projects/LearnedSpectrum/#background","title":"Background","text":"<p>As we\u2019ve discussed, current artificial intelligence approaches to world modeling rely heavily on absolute temporal markers and timestamps, human perception of time operates as a fundamentally subjective experience that adapts with cognitive state and learning progress. We\u2019ve utlized publically avalible fMRI data to demonstrate that neural activation patterns contain rich temporal information that can inform more nuanced approaches to temporal processing in AI systems. </p> <p>This work implements a Vision Transformer architecture <sup>1</sup> <sup>2</sup> optimized for learning stage classification from fMRI data. While fMRI presents known limitations in its reliance on blood-oxygen-level-dependent (BOLD) signals <sup>3</sup>, deep learning architectures may be able to extract temporal patterns that traditional analysis methods miss.</p>"},{"location":"Projects/LearnedSpectrum/#neural-bases-of-learning-stages","title":"Neural Bases of Learning Stages","text":"<p>Human learning progresses through distinct stages characterized by shifting patterns of neural activation <sup>4</sup>. These transitions are particularly evident in the striatum and medial temporal lobe regions <sup>5</sup>. Our architecture\u2019s design mirrors these biological principles through its progressive processing stages and attention mechanisms.</p> <p>fMRI captures these learning stages through blood-oxygen-level-dependent (BOLD) signals, providing an indirect but reliable measure of neural activity <sup>3</sup>. While this indirect measurement presents certain limitations, research has demonstrated correlations between BOLD signal temporal patterns and learning progression <sup>6</sup>. The robust test-retest reliability of fMRI in classification learning tasks <sup>7</sup> provides a stable foundation for extracting temporal patterns relevant to learning stages.</p>"},{"location":"Projects/LearnedSpectrum/#methods","title":"Methods","text":"<p>Our implementation addresses two core challenges: extracting meaningful patterns from complex fMRI data <sup>6</sup> and developing architectures capable of learning from these patterns <sup>7</sup>. This section outlines our approach in three parts: data preprocessing implementation, fMRI-specific augmentation strategies, and temporal-aware transformer architecture design <sup>1</sup> <sup>2</sup>.</p>"},{"location":"Projects/LearnedSpectrum/#data-collection-and-processing","title":"Data Collection and Processing","text":"<p>The implementation utilizes four complementary classification learning datasets from OpenFMRI. Each dataset provides specific insights into temporal learning aspects <sup>4</sup>. The primary dataset (ds000002) contains data from 17 right-handed subjects performing probabilistic and deterministic classification tasks <sup>5</sup>. Task structure includes:</p> <ul> <li>Pure blocks: 10 cycles of 5 classification trials followed by 3 baseline trials</li> <li>Mixed blocks: 100 stimuli split equally between probabilistic and deterministic trials</li> </ul> <p>Data acquisition specifications:</p> <ul> <li>Scanner: 3T Siemens Allegra MRI</li> <li>Parameters: TR = 2s, 180 functional T2*-weighted echoplanar images per session</li> <li>Resolution: 2mm slice thickness, 2x2mm in-plane resolution</li> <li>Enhancement: Multiband acceleration factor of 4</li> </ul> <p>Three additional datasets complement the primary collection:</p> <ul> <li>ds000011: 14 subjects, single/dual-task classification for attention-modulated learning analysis <sup>5</sup></li> <li>ds000017: 8 subjects, classification with stop-signal tasks for inhibitory control examination <sup>7</sup></li> <li>ds000052: Classification with reward contingency reversal for adaptive learning mechanism investigation <sup>4</sup></li> </ul>"},{"location":"Projects/LearnedSpectrum/#preprocessing-pipeline","title":"Preprocessing Pipeline","text":"<p>Our implementation uses a three-stage preprocessing approach based on established neuroimaging practices <sup>6</sup> with optimizations for temporal pattern preservation. The pipeline integrates spatial normalization and temporal alignment to maintain both anatomical accuracy and temporal fidelity. The complete preprocessing pipeline follows:</p> \\[\\begin{equation}     x_{\\text{processed}} = \\mathcal{N}(\\mathcal{R}(\\mathcal{V}(x))) \\end{equation}\\] <p>Where \\(\\mathcal{V}\\) performs dimension validation, \\(\\mathcal{R}\\) applies spatial resizing, and \\(\\mathcal{N}\\) implements intensity normalization.</p>"},{"location":"Projects/LearnedSpectrum/#dimension-validation","title":"Dimension Validation","text":"<p>fMRI acquisitions vary in dimensionality <sup>6</sup>. Our validation ensures consistent dimensionality while preserving temporal information:</p> \\[\\begin{equation}     \\mathcal{V}(x) = \\begin{cases}         x &amp; \\text{if } x \\in \\mathbb{R}^{H \\times W \\times D \\times T} \\\\         x[..., \\text{newaxis}] &amp; \\text{if } x \\in \\mathbb{R}^{H \\times W \\times D} \\\\         \\text{undefined} &amp; \\text{otherwise}     \\end{cases} \\end{equation}\\] <p>This validation maintains spatial integrity while ensuring proper temporal dimension handling <sup>3</sup>. Single-volume inputs receive an added temporal dimension for consistent processing.</p>"},{"location":"Projects/LearnedSpectrum/#spatial-resizing","title":"Spatial Resizing","text":"<p>The implementation standardizes spatial dimensions while maintaining anatomical proportions <sup>6</sup> through trilinear interpolation:</p> \\[\\begin{equation}     \\mathcal{R}(x) = \\text{zoom}(x, [\\frac{H_t}{H}, \\frac{W_t}{W}, \\frac{D_t}{D}, 1]) \\end{equation}\\] <p>Target dimensions \\((H_t, W_t, D_t) = (64, 64, 30)\\) balance spatial resolution and computational efficiency <sup>7</sup>. The temporal dimension scaling factor of 1 preserves original temporal resolution.</p>"},{"location":"Projects/LearnedSpectrum/#intensity-normalization","title":"Intensity Normalization&lt;","text":"<p>Following fMRI preprocessing protocols <sup>6</sup>, we implement temporal-aware normalization accounting for BOLD signal dynamics:</p> \\[\\begin{equation}     \\mathcal{N}(x_t) = \\frac{x_t - \\mu_t}{\\sigma_t + \\epsilon} \\;\\; \\forall t \\in T \\end{equation}\\] <p>Where \\(\\mu_t\\) and \\(\\sigma_t\\) represent mean and standard deviation at timepoint \\(t\\) and \\(\\epsilon = 1e\\text{-}6\\) prevents division by zero.</p> <p>This normalization preserves temporal dynamics while standardizing signal intensity across sessions and subjects <sup>3</sup>. Independent timepoint normalization maintains relative temporal patterns crucial for learning stage classification.</p>"},{"location":"Projects/LearnedSpectrum/#data-augmentation-strategies","title":"Data Augmentation Strategies","text":"<p>Our implementation includes a comprehensive suite of domain-specific augmentation techniques designed to enhance model robustness while respecting the unique characteristics of fMRI data. These techniques are validated through neuroimaging research and carefully adapted for deep learning applications:</p>"},{"location":"Projects/LearnedSpectrum/#temporal-masking","title":"Temporal Masking","text":"<p>We implement an adaptive temporal dropout mechanism that helps the model learn robust temporal features despite potential signal interruptions or artifacts. The masking strategy:</p> <ul> <li>Applies random-length masks (1-5 timepoints) to simulate temporal dropouts</li> <li>Maintains temporal coherence through continuous masking windows</li> <li>Varies mask duration to ensure robustness to different types of signal interruptions</li> </ul>"},{"location":"Projects/LearnedSpectrum/#spatial-masking","title":"Spatial Masking","text":"<p>The implementation incorporates structured dropout in the spatial domain to handle regional signal variations and encourage learning from distributed patterns. Key features include:</p> <ul> <li>Probability-based masking with empirically optimized threshold values</li> <li>Preservation of anatomical structure through contiguous region masking</li> <li>Balance between feature preservation and augmentation strength</li> </ul>"},{"location":"Projects/LearnedSpectrum/#elastic-deformation","title":"Elastic Deformation","text":"<p>To account for natural variations in brain structure and registration, we apply anatomically-constrained elastic deformations that:</p> <ul> <li>Preserve biological plausibility through controlled deformation magnitude</li> <li>Maintain spatial relationships while introducing realistic variability</li> <li>Apply smooth transformations through Gaussian filtering</li> </ul>"},{"location":"Projects/LearnedSpectrum/#model-architecture","title":"Model Architecture","text":"<p>Our architecture combines Vision Transformer principles with specific adaptations for fMRI data processing. The implementation consists of three primary components, each optimized for the unique characteristics of neuroimaging data:</p>"},{"location":"Projects/LearnedSpectrum/#channel-reduction-network","title":"Channel Reduction Network","text":"<p>The channel reduction component efficiently processes high-dimensional fMRI input through a dual-stage approach:</p> <ul> <li>Initial dimensionality reduction from 30 to 16 channels</li> <li>Batch normalization and GELU activation for stable training</li> <li>Progressive dropout for regularization</li> <li>Careful preservation of spatial relationships</li> </ul>"},{"location":"Projects/LearnedSpectrum/#temporal-processing","title":"Temporal Processing","text":"<p>Our temporal processing incorporates hemodynamic response function (HRF) characteristics <sup>3</sup> through causal attention masking:</p> \\[\\begin{equation}     M_{ij} = \\begin{cases}         -\\infty &amp; \\text{if } j &lt; i + 3 \\\\         0 &amp; \\text{otherwise}     \\end{cases} \\end{equation}\\] <p>This enforces a 6-second BOLD delay constraint, reflecting established HRF parameters <sup>6</sup> while maintaining temporal causality in BOLD response learning.</p>"},{"location":"Projects/LearnedSpectrum/#progressive-dropout","title":"Progressive Dropout","text":"<p>We implement a depth-dependent dropout strategy that provides stronger regularization in deeper layers while maintaining high information flow in early layers.</p> \\[\\begin{equation}     p_i = 0.1 \\cdot \\frac{i + 1}{12} \\;\\; \\text{for layer } i \\end{equation}\\] <p>This strategy increases dropout probability with network depth, maintains high information flow in early layers, and improves generalization while preserving low-level features.</p>"},{"location":"Projects/LearnedSpectrum/#training-protocol","title":"Training Protocol","text":""},{"location":"Projects/LearnedSpectrum/#mixed-precision-training","title":"Mixed Precision Training","text":"<p>We implement dynamic loss scaling for numerical stability:</p> \\[\\begin{equation}     \\text{scale}_t = \\begin{cases}         2 \\cdot \\text{scale}_{t-1} &amp; \\text{if no overflow for } 2000 \\text{ steps}\\\\         \\frac{\\text{scale}_{t-1}}{2} &amp; \\text{if overflow detected}     \\end{cases} \\end{equation}\\] <p>This adaptive scaling ensures stable training while maintaining computational efficiency.</p>"},{"location":"Projects/LearnedSpectrum/#optimization-strategy","title":"Optimization Strategy","text":"<p>The implementation uses AdamW optimizer with fMRI-validated parameters <sup>2</sup>:</p> <ul> <li>Learning rate: \\(1e\\text{-}4\\)</li> <li>Weight decay: 0.05</li> <li>Beta parameters: \\(\\beta_1 = 0.9\\), \\(\\beta_2 = 0.999\\)</li> </ul>"},{"location":"Projects/LearnedSpectrum/#learning-rate-schedule","title":"Learning Rate Schedule","text":"<p>We implement a custom warmup-decay schedule optimized for fMRI data processing:</p> \\[\\begin{equation}     \\eta_t = \\begin{cases}         \\eta_{\\text{base}} \\cdot \\frac{t}{t_w} &amp; \\text{if } t &lt; t_w\\\\         \\eta_{\\text{min}} + \\frac{\\eta_{\\text{base}}-\\eta_{\\text{min}}}{2}(1 + \\cos(\\pi\\frac{t-t_w}{T-t_w})) &amp; \\text{otherwise}     \\end{cases} \\end{equation}\\] <p>Schedule parameters:</p> <ul> <li>Base learning rate \\(\\eta_{\\text{base}} = 1e\\text{-}4\\)</li> <li>Minimum learning rate \\(\\eta_{\\text{min}} = 1e\\text{-}6\\)</li> <li>Warmup period \\(t_w = 0.1T\\)</li> </ul> <p>This provides stable initial training followed by gradual learning rate decay for optimal parameter convergence.</p>"},{"location":"Projects/LearnedSpectrum/#regularization-and-early-stopping","title":"Regularization and Early Stopping","text":"<p>We implement comprehensive regularization following established practices <sup>1</sup>:</p> <ul> <li>Label smoothing: \\(\\alpha = 0.1\\)</li> <li>L2 regularization: \\(\\lambda = 1e\\text{-}4\\)</li> <li>Gradient clipping: norm 5.0</li> </ul> <p>Early stopping criteria definition:</p> \\[\\begin{equation}     \\text{stop} = \\begin{cases}         \\text{True} &amp; \\text{if } \\text{val\\_loss}_t &gt; \\text{best\\_loss} - \\delta \\text{ for } p \\text{ epochs}\\\\         \\text{False} &amp; \\text{otherwise}     \\end{cases} \\end{equation}\\] <p>Parameters:</p> <ul> <li>Improvement threshold \\(\\delta = 1e\\text{-}4\\)</li> <li>Patience period \\(p = 7\\)</li> </ul>"},{"location":"Projects/LearnedSpectrum/#results","title":"Results","text":"<p>Our implementation demonstrated patterns in learning stage classification from fMRI data, with performance characteristics varying significantly across learning stages. The complete analysis reveals both potential capabilities and areas requiring further refinement.</p>"},{"location":"Projects/LearnedSpectrum/#overall-model-performance","title":"Overall Model Performance","text":"<p>The model achieved an overall accuracy of 35.6% across four learning stages, with a balanced accuracy of 42.8% and a macro F1 score of 0.407. </p> <p>While exceeding random chance performance (25% for four classes), these metrics highlight the inherent complexity of learning stage classification from neuroimaging data.</p> <p>The Cohen\u2019s Kappa score of 0.093 indicates performance above chance but demonstrates the substantial challenge in achieving consistent classification across all learning stages.</p> <p></p> <p>Figure 1: Comprehensive model performance analysis showing (A) Normalized confusion matrix demonstrating classification patterns across learning stages, (B) ROC curves indicating increasing reliability from early to mastery stages, (C) Per-class performance metrics highlighting strongest performance in mastery classification, and (D) Prediction confidence distributions revealing distinct patterns for each learning stage.</p>"},{"location":"Projects/LearnedSpectrum/#stage-specific-classification-performance","title":"Stage-Specific Classification Performance","text":"<p>Performance varied substantially across learning stages, revealing distinct patterns in the model\u2019s classification capabilities. The model demonstrated strongest performance in identifying the mastery stage, achieving a precision of 0.600 and recall of 0.750 (F1 = 0.667). The ROC curve for mastery classification shows an impressive AUC of 0.945, suggesting highly distinctive neural activation patterns associated with mastery-level learning.</p> <p>The middle learning stage showed moderate classification success (precision = 0.353, recall = 0.429, F1 = 0.387), while early and late stages proved more challenging to classify (F1 scores of 0.258 and 0.316 respectively). The confusion matrix reveals a tendency to misclassify early learning stages as middle stages (47.1% of cases), suggesting a gradual transition in neural activation patterns during learning progression.</p> Learning Stage Precision Recall F1 Support ROC AUC Mean Conf. Error Rate Early 0.286 0.235 0.258 17 0.368 0.437 0.765 Middle 0.353 0.429 0.387 14 0.556 0.412 0.571 Late 0.333 0.300 0.316 10 0.740 0.389 0.700 Mastery 0.600 0.750 0.667 4 0.945 0.528 0.250 Overall 0.407 0.428 0.347 45 0.652 0.437 0.644"},{"location":"Projects/LearnedSpectrum/#neural-activation-patterns","title":"Neural Activation Patterns","text":"<p>Analysis of fMRI activation patterns, as exemplified in Figure 2, reveals characteristic spatial distributions associated with different learning stages. The sample brain slice visualization demonstrates the complex nature of the neural activation patterns the model must interpret, with varying intensity values representing normalized BOLD signal strength across different brain regions.</p> <p></p> <p>Figure 2: Representative brain slice visualization from early learning stage (z=15, t=118) demonstrating characteristic activation patterns. Intensity values represent normalized BOLD signal strength.</p>"},{"location":"Projects/LearnedSpectrum/#classification-reliability-analysis","title":"Classification Reliability Analysis","text":"<p>The model\u2019s reliability metrics provide crucial insight into its decision-making characteristics. The mean confidence of 0.437 with an overconfidence measure of 0.088 indicates relatively calibrated predictions, though the expected calibration error of 0.491 suggests room for improvement in uncertainty estimation. As shown in Figure 1, the confidence distribution shows distinct patterns for each learning stage, with mastery predictions showing a broader, right-skewed distribution compared to the more concentrated distributions of earlier stages.</p> <p>The ROC curves reveal a clear progression in classification reliability across learning stages: early (AUC = 0.368), middle (AUC = 0.556), late (AUC = 0.740), and mastery (AUC = 0.945). This progression suggests that distinctive neural patterns become increasingly detectable as learning progresses, with mastery showing particularly clear neural signatures.</p> <p>The mean loss of 1.082 (\u00b10.257) suggests stable model training despite the classification challenges, with the relatively small standard deviation indicating consistent performance across validation folds. These results demonstrate both the promise and limitations of our approach, suggesting that while neural activation patterns contain meaningful information about learning stages, additional architectural innovations may be needed to fully capture the complexity of temporal learning progression in fMRI data.</p>"},{"location":"Projects/LearnedSpectrum/#discussion","title":"Discussion","text":"<p>fMRI data from varaying datasets/test conditions is quite volatile to work with, and reliance on publically avaliable data sources without standerized test conditions certaily dosen\u2019t help. Nonethless the above guessing odds results suggests a correlation worth exploring, suggesting that integrating physiological state data into world model training provides essential insights into biological temporal information processing.</p> <p>Future work should expand beyond fMRI to incorporate the full spectrum of physiological state signals identified in our introduction (facial EMG, heart rate variability, electrodermal activity). This multi-modal physiological state approach, combined with advanced transformer architectures, could enable world models to develop temporal understanding that more closely mirrors human cognitive processes, particularly in causal reasoning and state transitions. </p> <ol> <li> <p>https://arxiv.org/abs/1706.03762\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>https://arxiv.org/abs/2010.11929\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.nature.com/articles/nature06976\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.jstor.org/stable/2891421\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.nature.com/articles/35107080\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>https://doi.org/10.1017/CBO9780511895029\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://pubmed.ncbi.nlm.nih.gov/16139527/\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://openreview.net/pdf?id=BZ5a1r-kVsf\u00a0\u21a9</p> </li> <li> <p>https://pmc.ncbi.nlm.nih.gov/articles/PMC6904682/\u00a0\u21a9</p> </li> <li> <p>https://www.nber.org/system/files/working_papers/w29587/w29587.pdf\u00a0\u21a9</p> </li> <li> <p>https://pmc.ncbi.nlm.nih.gov/articles/PMC9824521/\u00a0\u21a9</p> </li> <li> <p>https://www.biorxiv.org/content/10.1101/2022.02.28.482337v2.full\u00a0\u21a9</p> </li> <li> <p>https://www.pnas.org/doi/10.1073/pnas.1016823108\u00a0\u21a9</p> </li> <li> <p>https://pmc.ncbi.nlm.nih.gov/articles/PMC10960227/\u00a0\u21a9</p> </li> <li> <p>https://arxiv.org/abs/2302.10035\u00a0\u21a9</p> </li> <li> <p>https://arxiv.org/abs/1803.10122\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/LithophaneExperiments/","title":"Lithophane Experiments","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/LithophaneExperiments/#lithophane-experiments","title":"Lithophane Experiments","text":"Teddy Warner| 2019-2022 |  1-2 minutes <p>A Lithophane is a piece of art made out of a thin translucent material designed to show an image in a \u201cgrisaille\u201d color format when held up to light.<sup>1</sup> 3D printers can be utilized to create some nice-looking lithophanes, a practice made easy with 3dp.rocks lithophane generator, linked below. Due to their easy creation, I find lithophanes to be a nice medium to test slicer changes with, allowing for your time to be spent with the slicer settings, and not the file prep. </p> <p>Note</p> <p>This page is not documentation on the lithophane making process, but more of a portfolio of some notable lithophanes I\u2019ve printed since taking up this medium.</p> <p>3dp.rocks\u2019s Lithophane Generator </p>"},{"location":"Projects/LithophaneExperiments/#people","title":"People","text":""},{"location":"Projects/LithophaneExperiments/#art","title":"Art","text":"<ol> <li> <p>https://en.wikipedia.org/wiki/Lithophane\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/MillingWorflow/","title":"CNC Milling Workflows","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/MillingWorflow/#cnc-milling-workflows","title":"CNC Milling Workflows","text":"Teddy Warner| 2022-2023 |  12-15 minutes <p>Subtractive manufacturing is a process I\u2019ve always found mesmerizing. Although additive processes such as 3D printing allow for the creation of something from seemingly nothing, I believe it\u2019s even cooler to watch the morphing of existing stock into a different object. Despite this interest, I feel as though I\u2019ve barely scratched the surface of CNC - primarily focusing on PCB milling in my subtractive manufacturing projects. I made a first attempt to dive into more subtractive manufacturing work a couple of years ago now when I built V1 Engineering\u2019s original MPCNC.</p> <p> </p> <p>I absolutely loved building this machine and recommend it to all interested in understanding the workings of CNC, yet I don\u2019t mill on mine all that often, I find more use in using the machine as a GCode dev platform for some of my other projects. </p> <p>Since my initial attempted steps with the MPCNC, I\u2019ve become more versed with CNC milling due to exposure during my Fab Academy Week 7: Computer Controlled Machining assignment. For this assignment, I used the CLS Fab Lab\u2019s ShopBot PRSalpha to mill the plywood fish tank housing for my Fab Academy Final Project. I continued my milling work over the summer, running the ShopBot almost daily over July for Young Engineers of Today\u2019s Summer Camps. Last fall, our lab picked up a Bantam Tools Desktop CNC Milling Machine, Bantam\u2019s flagship machine, capable of super-rapid prototyping when partnered with their Milling Machine Software. </p> <p> </p> <p>This article attempts to serve as a complete guide for CNC milling, covering machinist jargon, material standards, feeds and speeds, CAM workflows with Autodesk Fusion 360 &amp; Vectric Aspire, and milling workflows for Shopbot &amp; Bantam Tools machines - all through a collection of milling micro-projects ranging from a 1 to 1.9 Million scale mill of Mars\u2019s Gale Crater to brass wax seals . </p> <p>Milling Micro-Projects</p> <p>This page strays from my normal single-project documentation style, opting to cover different CAM &amp; milling workflows via a collection of micro-projects. In a similar approach to the \u201cConstantly Updating\u201d status of my Lithophane Experiments article, I plan to continually expand the content of this article with any additional milling micro-project I complete. Initally, the page will just host material reference &amp; a feeds and speed calculator. That being said, be sure to stay tuned for future updates!</p>"},{"location":"Projects/MillingWorflow/#feeds-speeds","title":"Feeds &amp; Speeds","text":"Imperial Metric <p>Creating a successful subtractive manufacturing toolpath can be a bit more intimidating than slicing for additive manufacturing. Not only can you jeopardize your stock material, but incorrect feeds and speeds can also yield a hazardous environment &amp; potential machine damage. There is no streamlined answer to find the right feeds and speeds, ideal values depend on numerous variables &amp; feeds and speeds may not remain constant from job to job. This section provides a starting place for feeds and speeds, with general values provided as well as a calculator for the required inputs in your toolpath. This is by no means a universal key and necessary precautions &amp; alterations should be made to provide values to mesh with your manufacturing workflow. Often the manufacturer of your tool &amp; your machine will provide generic feeds and speeds for your specific equipment. Operator input is required to achieve successful &amp; safe cuts, often you\u2019ll be able to hear machine strain - a telltale sign of poor cutting. Trial and error adjusting is necessary to achieve the sweet spot for your feeds and speeds.  </p> Feeds &amp; Speeds Terminology <code>Tool Diameter</code> <p>The diameter of the endmill. When Profile milling or Through Cutting stock, it is best to keep the Tool Diameter \u2265 1/6 Stock Thickness, preserving the integrity of the endmill while allowing for full passes. Larger tool diameters yield shorter cut times when removing a lot of material, while smaller diameters allow for higher detail to be reached. It is typically best to utilize both larger and smaller diameter endmills, using the larger to clear the bulk of stock material, while finishing the mill with a smaller diameter tool to achieve the best detail. </p> <p> </p> <code>Flute Count</code> <p>The number of individual flutes an endmill has. Flutes are the upward running cutting edges on an endmill. Lower flute counts allow for better chip &amp; heat clearance from the cutting edge, while higher flute counts provided a smoother finish to a part. Stock materials that require a high surface speed also require higher flute bits, and vice versa with lower surface speed requirements. One to Two flute bits will suffice for prototyping with soft plastics &amp; waxes. Two or more flutes will typically be needed for harder plastics (such as HDPE), woods, and metals.</p> <p> </p> <code>Surface Speed</code> <p>The speed at which the tool\u2019s cutting edge travels through the stock. Surface Speed is dependent on both the stock &amp; endmill materials. Maximum surface speeds are typically published by your endmill\u2019s manufacturer and do not need to be derived experimentally. Staring jobs at \u2264 50% of the maximum provided value is the best practice to allow for ample time to ensure the successful operation of your machine.</p> <p> </p> <code>Chip Load</code> <p>The thickness of offcut \u2018chips\u2019 removed with each flute per revolution of the endmill. Maximum chip load is typically provided by the endmill\u2019s manufacturer, based upon the tool\u2019s characteristics. Finding a balance between chip load extremes is crucial for the safety of you and your machine. While larger chip loads yield shorter machine time, they also put greater forces on your endmill, potentially pushing the bit towards its point of rupture. On the other hand, smaller chip loads increase machine time, while expelling waste and heat from the tool at a slower pace, thus risking overheating and potential fire. Safe chip load values usually fall between 0.001\u201d &amp; 0.010\u201d0.0254mm &amp; 0.254mm.</p> <p> </p> <code>Spindle Speed</code> <p>The number of revolutions made by the endmill in a unit of time (RPM is standard). A Lower RPM yields a higher quality surface finish &amp; more cutting power, while a higher RPM decreases machine time. For optimal milling operations, use a higher RPM for roughing passes &amp; a lower for finishing.</p> <p> </p> \\[ Spindle Speed (RPM) = {Surface Speed (ft/min) \\over \u03c0 \u2217 {1 \\over 12} \u2217 Tool Diameter (in)} \\] <p> \\[ Spindle Speed (RPM) = {Surface Speed (M/min) \\over \u03c0 \u2217 {1 \\over 1000} \u2217 Tool Diameter (mm)} \\] <code>Feed Rate</code> <p>The speed at which the machine moves the tool through the stock. Finding the right feed rate is crucial for the safety of you and your machine. Excessively high feed rates cause excessive load on the cutter, leading to cataclysmic failure of the endmill, spindle, and machine. Feed rates that are too low produce unnecessary vibration on the machine, leading to poor surface finishes &amp; potential cutter failure.</p> <p> </p> \\[ Feed Rate (in/min) = Spindle Speed (RPM) \u2217 Flute Count \u2217 Chip Load (in) \\] <p> \\[ Feed Rate (mm/min) = Spindle Speed (RPM) \u2217 Flute Count \u2217 Chip Load (mm) \\] <code>Plunge Rate</code> <p>The speed at which the endmill is driven down into the stock. The vertically running flutes on an endmill allow the tool to cut horizontally, while vertical plunges are more demanding on the tool. Lower plunge rates prevent tool damage &amp; maintain lower temperatures while boring holes. All plunging cuts should be ramped, as gradual plunging while traveling across the stock will reduce tool stress.</p> <p> </p> \\[ Plunge Rate(in/min) = Feed Rate (in/min) * {1 \\over 2} \\] <p> \\[ Plunge Rate(mm/min) = Feed Rate (mm/min) * {1 \\over 2} \\] <code>Stepdown</code> <p>The vertical depth of each pass of the tool into the stock. Best practice is to maintain a step down of \u2264 50% of the tool diameter, however, may be increased while milling softer materials. The step down should always remain less than the tool diameter.</p> <p> </p> \\[ Stepover(in) = Tool Diameter (in) * {3 \\over 5} \\] <p> \\[ Stepover(mm) = Tool Diameter (mm) * {3 \\over 5} \\] <code>Stepover</code> <p>The space between passes of the tool into the stock. While pocketing, a maximum stepover of 50% can be used, however lower stepover values will leave a better surface finish.</p> <p> </p> \\[ Stepover(in) = Tool Diameter (in) * {9 \\over 20} \\] <p> \\[ Stepover(mm) = Tool Diameter (mm) * {9 \\over 20} \\]"},{"location":"Projects/MillingWorflow/#material-reference","title":"Material Reference","text":"<p>Feeds and speeds are equally dependent on material properties and the specific of your machine &amp; tool. Below I\u2019ve compiled a table of commonly milled stock materials, ranging from woods to plastics to metals. Each material offers a brief description of the stock, as well as average surface speed &amp; chip loads. Chiploads are tool-dependent just as much as they are material-dependent, so be sure to select an adequate load for your tool\u2019s diameter. More conservative chip loads are given on the left, while aggressive loads are given on the right. Conservative values will extend the life of your tool, while the higher loads will catalyze your job time - select a chipload within the provided range based on your needs. As mentioned above, This is by no means a universal key and necessary precautions &amp; alterations should be made to provide values to mesh with your manufacturing workflow. Often the manufacturer of your tool &amp; your machine will provide generic feeds and speeds for your specific equipment. Operator input is required to achieve successful &amp; safe cuts, often you\u2019ll be able to hear machine strain - a telltale sign of poor cutting.</p> Material Description  Wax A easily milled medium, commonly used for casting cores, molds, and CNC program proofs. <ul> <li>Cost Efficient, offcut may be saved, melted &amp; reused</li> <li>Environmentally Friendly</li> <li>Safe, no hazardous waste or fumes</li> <li>High Dimensional Accuracy</li> <li>Self-lubricating</li> <li>Easy on Tooling</li> </ul> <p>Surface Speed (ft/minM/min) = <code> 200 </code><code> 60.96 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.0089</code> - <code>0.005</code><code>0.22606</code> - <code>0.127</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.010</code> - <code>0.015</code><code>0.254</code> - <code>0.381</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.015</code> - <code>0.020</code><code>0.381</code> - <code>0.508</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.025</code> - <code>0.033</code><code>0.635</code> - <code>0.8382</code>  Soft Wood A accessible &amp; stylish medium, not to tricky to mill, often used for large scale parts - Pine, Spruce, Cedar, etc. <ul> <li>Light weight, low density</li> <li>Sustainable resource, softwoods grow at a rapid rate</li> <li>Cheap &amp; readily available</li> <li>Easily milled</li> </ul> <p>Surface Speed (ft/minM/min) = <code>650</code><code> 198.12 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.004</code> - <code>0.006</code><code>0.1016</code> - <code>0.1524</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.011</code> - <code>0.013</code><code>0.2794</code> - <code>0.3302</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.017</code> - <code>0.020</code><code>0.4318</code> - <code>0.508</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.021</code> - <code>0.023</code><code>0.5334</code> - <code>0.5842</code>  Hard Wood Similar benefits to soft wood, can be a bit more costly - Maple, Walnut, Cherry, Ash, etc. <ul> <li>Extremely Durable</li> <li>Enhanced strength when compared to softwoods, higher density</li> <li>Naturally more fire resistance than softwoods</li> </ul> <p>Surface Speed (ft/minM/min) = <code>650</code><code> 198.12 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.003</code> - <code>0.005</code><code>0.0762</code> - <code>0.127</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.009</code> - <code>0.011</code><code>0.2286</code> - <code>0.2794</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.016</code> - <code>0.018</code><code>0.4064</code> - <code>0.4572</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.019</code> - <code>0.021</code><code>0.4826</code> - <code>0.5334</code>  Medium Density Fiberboard <code>MDF</code> An easily machined &amp; finished material, relatively cheap, commonly used for jigs, fixtures, vacuum molds &amp; engraving. <p>\u26a0\ufe0f Strong Dust Collection Required, as the fused nature of the material creates extremely fine dust.</p> <ul> <li>Affordable &amp; readily available</li> <li>Consistent, dense, heavy, flat &amp; stiff</li> <li>Flex &amp; crack resistant</li> <li>Easily machined</li> <li>Easy to post-process, paint &amp; seal</li> </ul> <p>Surface Speed (ft/minM/min) = <code>650</code><code> 198.12 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.004</code> - <code>0.007</code><code>0.1016</code> - <code>0.1778</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.013</code> - <code>0.016</code><code>0.3302</code> - <code>0.4064</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.020</code> - <code>0.023</code><code>0.508</code> - <code>0.5842</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.025</code> - <code>0.027</code><code>0.635</code> - <code>0.6858</code>  Oriented Strand Board <code>OSB</code> A strong, light weight, cost-efficient material, a great choice for large scale stiff parts. <ul> <li>Similar to plywood but contains no natural defects, knot free and consistent density</li> <li>Environmentally friendly, often produced from sustainable rapid growing trees</li> <li>Recyclable into new OSB</li> <li>Stiff &amp; lightweight</li> </ul> <p>Surface Speed (ft/minM/min) = <code>650</code><code> 198.12 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.004</code> - <code>0.006</code><code>0.1016</code> - <code>0.1524</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.011</code> - <code>0.013</code><code>0.2794</code> - <code>0.3302</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.017</code> - <code>0.020</code><code>0.4318</code> - <code>0.508</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.021</code> - <code>0.023</code><code>0.5334</code> - <code>0.5842</code>  High-density Polyethylene <code>HDPE</code> A soft-ish plastic, great for prototyping but a tricky material to mill. <ul> <li>Impact resistant at low temperatures</li> <li>Great Chemical resistance</li> <li>UV Resistant</li> <li>Moisture Resistant</li> <li>Stiff &amp; strong</li> <li>Emits not hazardous odors or waste</li> </ul> <p>Surface Speed (ft/minM/min) = <code>450</code><code> 137.16 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.003</code> - <code>0.006</code><code>0.0762</code> - <code>0.1524</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.007</code> - <code>0.010</code><code>0.1778</code> - <code>0.254</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.012</code> - <code>0.016</code><code>0.3048</code> - <code>0.4064</code>  Polyetheretherketone <code>PEEK</code> A high-performance thermoplastic, great for structural applications with resistance to fatigue and stress-cracking. <p>\u26a0\ufe0f PEEK is rather abrasive on tooling, Carbide or Polycrystalline (PCD) tooling should be used.</p> <ul> <li>Comparable performance to Human bone tissue</li> <li>Resistant to chemicals and radiation</li> <li>Great strength to weight ratio</li> <li>Creep-resistant &amp; long-wearing</li> <li>Great strength to weight ratio</li> <li>Temperature resistant, can operate up to 480\u00b0 F</li> <li>Easy to machine</li> </ul> <p>Surface Speed (ft/minM/min) = <code>500</code><code> 152.4 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.002</code> - <code>0.004</code><code>0.0508</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.006</code> - <code>0.009</code><code>0.1524</code> - <code>0.2286</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code>  Polyetherimide <code>PEI</code> A high-performance thermoplastic, with great heat, solvent &amp; flame resistant. Often used in applications with long term steam exposure. <ul> <li>High deflection temperature at 400\u00b0 F</li> <li>Resistant to chemicals and radiation</li> <li>Creep-resistant, strong &amp; rigid</li> <li>Heat &amp; flame resistant</li> </ul> <p>Surface Speed (ft/minM/min) = <code>360</code><code> 109.728 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.002</code> - <code>0.004</code><code>0.0508</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.006</code> - <code>0.009</code><code>0.1524</code> - <code>0.2286</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code>  Polyvinyl Chloride <code>PVC</code> An cost efficient &amp; accessible plastic, typically used across industry but offers a cheap &amp; lightweight medium. <ul> <li>Lightweight &amp; durable</li> <li>Easy to process</li> <li>Low cost &amp; accessible</li> <li>Waterproof</li> <li>Easy to machine</li> </ul> <p>Surface Speed (ft/minM/min) = <code>250</code><code> 76.2 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.002</code> - <code>0.004</code><code>0.0508</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.006</code> - <code>0.009</code><code>0.1524</code> - <code>0.2286</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code>  Polyoxymethylene <code>POM</code> A general purpose, good all around thermoplastic - also know as Acetal or Delrin. <ul> <li>Strong, tough &amp; ridged</li> <li>Great impact strength</li> <li>Easy to machine</li> <li>High dimensional accuracy</li> <li>Wear resistant</li> </ul> <p>Surface Speed (ft/minM/min) = <code>375</code><code> 114.3 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.002</code> - <code>0.004</code><code>0.0508</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.006</code> - <code>0.009</code><code>0.1524</code> - <code>0.2286</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code>  Acrylonitrile Butadiene Styrene <code>ABS</code> Easily accessed &amp; low cost thermoplastic, commonly used for molding applications. <ul> <li>Ridged, good abrasion and strain resistance</li> <li>High dimensional accuracy</li> <li>Good impact resistance</li> <li>Can be chemically welded</li> <li>Good insulating properties</li> <li>Easy to machine</li> </ul> <p>Surface Speed (ft/minM/min) = <code>300</code><code> 91.44 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.002</code> - <code>0.004</code><code>0.0508</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.006</code> - <code>0.009</code><code>0.1524</code> - <code>0.2286</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code>  Polycarbonate <code>PC</code> An incredibly strong and possibly transparent thermoplastic, known for maintained temperature resistance. <ul> <li>Outstanding strength, stiffness &amp; impact resistance</li> <li>Resists cracking, chips, dents &amp; scratches</li> <li>Easy to paint</li> <li>Chemically weldable</li> </ul> <p>Surface Speed (ft/minM/min) = <code>360</code><code> 109.728 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.002</code> - <code>0.004</code><code>0.0508</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.006</code> - <code>0.009</code><code>0.1524</code> - <code>0.2286</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code>  Nylon A cost-effective &amp; long-lasting thermoplastic, used in cases of required mechanical dampening or electrical insulation. <ul> <li>Strong &amp; durable</li> <li>Lightweight &amp; elastic</li> <li>Low friction</li> <li>Corrosion &amp; abrasion resistant</li> <li>Great insulating prosperities</li> </ul> <p>Surface Speed (ft/minM/min) = <code>400</code><code> 121.92 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.002</code> - <code>0.004</code><code>0.0508</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.006</code> - <code>0.009</code><code>0.1524</code> - <code>0.2286</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code>  Acrylic A lightweight insulating  thermoplastic, serves as an effective replacement for glass. <p>\u26a0\ufe0f Acrylic is prone to stress cracks &amp; fractures during milling &amp; post-processing.</p> <ul> <li>Transparent &amp; UV resistant</li> <li>Good impact resistance</li> <li>Great thermal insulation</li> </ul> <p>Surface Speed (ft/minM/min) = <code>500</code>, <code>130</code><code>152.4</code>, <code>39.624</code> without coolant</p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.003</code> - <code>0.005</code><code>0.0762</code> - <code>0.127</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.010</code> - <code>0.012</code><code>0.254</code> - <code>0.3048</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.012</code> - <code>0.015</code><code>0.3048</code> - <code>0.381</code>  Carbon Fiber A strong &amp; lightweight composite of carbon based fibers, desirable for various industrial applications due to its heat &amp; chemical resistance. <p>\u26a0\ufe0f Carbon fiber is incredibly abrasive and will wear down tooling &amp; dull bits will pull fibers from the composite  instead of cutting through them. The use of Carbide and Polycrystalline Diamond (PCD) bits are optimal while milling carbon fiber, as they offer a superior wear resistance.</p> <ul> <li>Lightweight</li> <li>Stiff &amp; Strong</li> <li>High temperature tolerance with low thermal expansion</li> <li>Resistant to chemical abrasion</li> </ul> <p>Surface Speed (ft/minM/min) = <code>5.45</code><code> 1.66116 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.003</code> - <code>0.006</code><code>0.0762</code> - <code>0.1524</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.009</code> - <code>0.012</code><code>0.2286</code> - <code>0.3048</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.016</code> - <code>0.018</code><code>0.4064</code> - <code>0.4572</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.023</code> - <code>0.025</code><code>0.5842</code> - <code>0.635</code>  Aluminium An accessible, easy to mill metal, seen across thermal &amp; electrical conducting components. <ul> <li>Easy to machine</li> <li>Non-magnetic</li> <li>Lightweight &amp; durable metal</li> <li>Good electrical &amp; heat conductor</li> </ul> <p>Surface Speed (ft/minM/min) = <code>600</code>, <code>200</code><code>182.88</code>, <code>60.96</code> without coolant</p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.003</code> - <code>0.004</code><code>0.0762</code> - <code>0.1016</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.005</code> - <code>0.007</code><code>0.127</code> - <code>0.1778</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.006</code> - <code>0.008</code><code>0.1524</code> - <code>0.2032</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.008</code> - <code>0.010</code><code>0.2032</code> - <code>0.254</code>  Brass A easy to machine &amp; highly conductive metal, ideal for low friction &amp; intricate parts. <ul> <li>Easy to machine</li> <li>Non-magnetic</li> <li>Highly electrical &amp; thermal conductive</li> <li>Wear &amp; corrosion resistant</li> <li>High malleability</li> <li>Antibacterial</li> </ul> <p>Surface Speed (ft/minM/min) = <code>600</code><code> 182.88 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.0004</code> - <code>0.0010</code><code>0.01016</code> - <code>0.0254</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.0005</code> - <code>0.0020</code><code>0.0127</code> - <code>0.0508</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.0005</code> - <code>0.0030</code><code>0.0127</code> - <code>0.0762</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.0010</code> - <code>0.0060</code><code>0.0254</code> - <code>0.1524</code>  Copper A malleable metal, typically used for its high electrical &amp; thermal conductivity. <ul> <li>Non-magnetic</li> <li>High electrical &amp; thermal conductivity</li> <li>Wear &amp; corrosion resistant</li> <li>High malleability</li> <li>Antibacterial</li> </ul> <p>Surface Speed (ft/minM/min) = <code>550</code><code> 167.64 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.0004</code> - <code>0.0010</code><code>0.01016</code> - <code>0.0254</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.0005</code> - <code>0.0020</code><code>0.0127</code> - <code>0.0508</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.0005</code> - <code>0.0030</code><code>0.0127</code> - <code>0.0762</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.0010</code> - <code>0.0060</code><code>0.0254</code> - <code>0.1524</code>  Steel An iron alloy with high strength &amp; fracture resistance, typically used in situations requiring its high tensile strength, such as tools &amp; machines. <ul> <li>High strength &amp; durable</li> <li>High fracture resistance</li> <li>Wear &amp; corrosion resistant</li> </ul> <p>Surface Speed (ft/minM/min) = <code>200</code>, <code>50</code><code>60.96</code>, <code>15.24</code> without coolant</p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.0004</code> - <code>0.0008</code><code>0.01016</code> - <code>0.02032</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.0008</code> - <code>0.0010</code><code>0.02032</code> - <code>0.0254</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.0012</code> - <code>0.0015</code><code>0.03048</code> - <code>0.0381</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.0015</code> - <code>0.0025</code><code>0.0381</code> - <code>0.0635</code>  Insulation Foam A low cost, accessible &amp; easy to mill material, commonly used for large molds &amp; as cores for lightweight parts.  <ul> <li>Easy to machine</li> <li>High mechanical strength with very low density</li> <li>Thermal insulating properties</li> <li>Cheap &amp; accessible</li> <li>Resistance to water absorption</li> </ul> <p>Surface Speed (ft/minM/min) = <code>1000</code><code> 304.8 </code></p> <p>Chip Load (inmm) -          1/8\" Tool Diameter3.175mm Tool Diameter - <code>0.004</code> - <code>0.006</code><code>0.1016</code> - <code>0.1524</code> 1/4\" Tool Diameter6.35mm Tool Diameter - <code>0.011</code> - <code>0.013</code><code>0.2794</code> - <code>0.3302</code> 3/8\" Tool Diameter9.525mm Tool Diameter - <code>0.017</code> - <code>0.020</code><code>0.4318</code> - <code>0.508</code> \u2265 1/2\" Tool Diameter\u2265 12.7mm Tool Diameter - <code>0.021</code> - <code>0.023</code><code>0.5334</code> - <code>0.5842</code>"},{"location":"Projects/MillingWorflow/#feeds-speeds-calculator","title":"Feeds &amp; Speeds Calculator","text":"No Coolant Coolant Instructions for Use <p>Work through the calcuator from top to bottom. First select your coolant prefrence, then input tool diamater and flute count. You may pull reccomended material settings from the table above via the \u201cMaterial Library\u201d dropdown, or you may under your own. Please note the prior warnings on calcuator dependence: This is by no means a universal key and necessary precautions &amp; alterations should be made to provide values to mesh with your manufacturing workflow. Often the manufacturer of your tool &amp; your machine will provide generic feeds and speeds for your specific equipment. Operator input is required to achieve successful &amp; safe cuts, often you\u2019ll be able to hear machine strain - a telltale sign of poor cutting.</p> Tool Diameter (inmm) Flute #: <p> Material Library Wax Soft Wood Hard Wood MDF OSB HDPE PEEK PEI PVC POM ABS PC Nylon Acrylic Carbon Fiber Aluminium Brass Copper Steel Insulation Foam <p></p> Surface Speed (ft/minM/min) <p></p> Chip Load (inmm) Spindle Speed (RPM) Feed Rate (in/minmm/min) Plunge Rate (in/minmm/min) Stepdown (inmm) Stepover (inmm)  Calculate   Clear"},{"location":"Projects/MillingWorflow/#microprojects","title":"Microprojects","text":"<p>An addendum - Jan 2025.</p> <p>When I set out to write this piece a few years ago, I had the somewhat lofty intention of doccumenting as many different CAD/CAM softwares as I could, providing comprehensive walkthroughs for their usage. By the time I finished assembling and testing the above Material Reference section (believe me when I say this was a lift), I was quite burnt out of this endevour, and so this article just sat, unfinished on this site for a few years.</p> <p>In hopes of providing a slightly better \u201cconclusion\u201d to this piece, I\u2019ve appended a gallary of project media below, all of which was machined with settings from the above Feeds &amp; Speeds Calcuator. Enjoy!</p>"},{"location":"Projects/MillingWorflow/#gale-crater-mill","title":"Gale Crater Mill","text":"Scanning the profile of my cedar stock and processing this scan on Inkscape Gale Crater model on Fusion 360 Milling on the Shopbot Desktop MAX ... and the results Final Gale Crater Mill after finishing"},{"location":"Projects/MillingWorflow/#topography-paper-weight","title":"Topography Paper Weight","text":"Using Terrain2STL to generate the topography Milling on the Bantam Tools Desktop CNC Milling Machine Some more milling media and some more milling media ... and the results"},{"location":"Projects/MillingWorflow/#flat-pack-stool","title":"Flat-Pack Stool","text":"Flat-Pack Stool model in Fusion 360 Milling in progress ... and the results <ol> <li> <p>https://www.cnccookbook.com/machining-carbon-fiber-composites-drilling-cnc-tools/\u00a0\u21a9</p> </li> <li> <p>https://dragonplate.com/how-to-cut-carbon-fiber\u00a0\u21a9</p> </li> <li> <p>https://www.gutenberg.org/files/12299/12299-h/12299-h.htm\u00a0\u21a9</p> </li> <li> <p>https://www.practicalmachinist.com/vb/general-archive/face-milling-pvc-152424/\u00a0\u21a9</p> </li> <li> <p>https://www.precisebits.com/tutorials/spindle-rpm\u00a0\u21a9</p> </li> <li> <p>https://pub.pages.cba.mit.edu/feed_speeds/\u00a0\u21a9</p> </li> <li> <p>https://www.protolabs.com/resources/design-tips/cnc-machining-materials/\u00a0\u21a9</p> </li> <li> <p>https://www.3erp.com/blog/cnc-milling-materials-choose-application/\u00a0\u21a9</p> </li> <li> <p>https://www.hubs.com/knowledge-base/selecting-right-cnc-material/\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/Octoprint/","title":"Octoprint Setup","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/Octoprint/#octoprint-setup-documentation","title":"Octoprint Setup Documentation","text":"Teddy Warner| Fall, 2021 |  9-11 minutes <p>Octoprint takes 3D printing to new heights, creating a more concise workflow with more accessible machine control. The opensource Octoprint project was created and maintained by Gina H\u00e4u\u00dfge. The software enables a machine with a web interface with full machine controls and a world of community plugins - all of which run on a Raspberry Pi made Server with an octoprint image. I use Octoprint on all of my personal printers, and a special CNC-focused fork of the software for my MPCNC. As mentioned above, web interfacing a machine creates a more concise workflow and thus is great for personal machines. However, an Octoprint setup shines even more in a print farm instance. During the winter months of my sophomore year (2020) I set up secure Octoprint instances on each of my lab\u2019s array of 20 FDM printers. Each of my setup instances can be read seen under the My Octoprint Instances section of this page. </p>"},{"location":"Projects/Octoprint/#octoprint-installation","title":"Octoprint Installation","text":"<p>Octoprint Installation Requirements</p> <p>You\u2019ll need a Raspberry Pi (Recommended hardware: Raspberry Pi 3B, 3B+ or 4B), a sufficient power source for the Pi, as well as a micro SD card (4GB or larger) to flash the Octorpint image to.</p> <p>Download the Latest Octopi Image </p> <p>First, download and flash the latest Octoprint image (linked above). This Pi image can be flashed as you would with any other Raspberry Pi project - I use balenaEtcher for flashing, its simple 3-step interface makes the process super straightforward. After a successful flash of this image on your Pi\u2019s SD card configure your WiFi information in the octopi-wpa-supplicant.txt located on the flashed SD card (If you\u2019re using wired internet, you can skip this setup). To update the octopi-wpa-supplicant.txt file with your network, open the file in a code editor of your choice.</p> <p>Do not use WordPad (Windows) or TextEdit (MacOS X)</p> <p>These editors will mess with the file layout, and cause problems with your setup.</p> <p>Next, locate the type of network you\u2019ll be connecting to - for this example, I\u2019ll be using the WPA/WPA2 Secured standard, </p> <pre><code>## WPA/WPA2 secured\n#network={\n#  ssid=\"put SSID here\"\n#  psk=\"put password here\"\n#}\n</code></pre> <p>for any type of connection you choose, you can enable it by uncommenting the sections lines with a single hashtag, leaving you with a block like below.</p> <pre><code>## WPA/WPA2 secured\nnetwork={\n  ssid=\"put SSID here\" // (1)\n  psk=\"put password here\" // (2)\n}\n</code></pre> <ol> <li>Replace \u201cput SSID here\u201d with your network\u2019s SSID.</li> <li>Replace \u201cput password here\u201d with your network\u2019s password.</li> </ol> <p>Next, scroll down to the bottom of the document to the section starting \u201d# Uncomment the country your Pi is in\u2026\u201d. Here, remove the hashtag in front of your network\u2019s country, and add a hashtag in front of all other (non-selected) countries.</p> <p>Then, after saving your file and ejecting your SD, you can install your flashed SD in your Pi and boot.</p> <p>Next, some basic Pi config. Make sure you are on the same WiFi network you set up your Pi on, and then SSH into your booted Pi at the IP octopi.local with the Pi\u2019s default credentials (Username - pi / Password - raspberry). I use Putty as my SSH client as again, it\u2019s pretty straightforward to use. Once connected to your Pi, run the command \u2026</p> <pre><code>sudo raspi-config\n</code></pre> <p>to open the configuration GUI. Here you can change your Pi\u2019s credentials (highly recommended), set up your local timezone (to allow for accurate machine ETAs), and change your machine\u2019s hostname (thus changing the URL from the default octopi.local to YOURHOSTNAME.local). After all, changes, be sure to reboot your Pi.</p> <p>Congrats!</p> <p>You have now installed Octoprint on your Raspberry Pi, and can now connect to its web server with the URL http://octopi.local ( or if you changed your hostname, with the URL http://YOURHOSTNAME.local).</p>"},{"location":"Projects/Octoprint/#octoprint-configuration","title":"Octoprint Configuration","text":"<p>With an Octoprint instance up and running, the difficult part of the setup is complete. Access to the web interface allows for easy machine and interface setup, in addition to some more customizations in the form of community plug-ins.</p>"},{"location":"Projects/Octoprint/#interface-config","title":"Interface Config","text":"<p>Beginning with the configuration of the interface itself, basic settings can be found in the web interface by clicking on the wrench icon on the right side of the navigation bar located at the top of the interface. Scrolling through these menus allows for total customization of the interface. A good starting place is under the Octoprint section in the Appearance menu. Here (as shown below) you can customize the interface title - displayed in the interface\u2019s navigation bar, as well as the default interface highlight color.</p> <p></p>"},{"location":"Projects/Octoprint/#printer-setup","title":"Printer Setup","text":"<p>To enable Octoprint\u2019s main purpose, a machine must be connected to the hardware running Octoprint via serial. This connection can come in the form of a USB cable in the simplest setup, or GPIO pins can be used for communication as well. </p> <p>Personal Setup</p> <p>In the case of my Prusa I3 MK3S+, I took advantage of this GPIO communication setup, to allow for the mounting of my Raspberry Pi directly under my printer\u2019s mainboard (via this Raspberry Pi 4 Case) without a bulky USB cable connecting them \u2026  </p> <p>Your serial connection must be set up software side in the Serial Connection menu found under the Printer section of the interface settings. Octoprint can automatically detect your Serial Port and Baudrate when AUTO is selected in these dropdowns, however, you may also specify specifics for each field.</p> <p></p> <p>Next, a machine profile must be created for your connected machine to ensure safe machine control with regard to hardware limits. A profile can be created in the Printer Profiles menu under the Printer section of the interface\u2019s settings. Create a new profile by clicking the Add Profile\u2026 button in the lower right corner of the menu, and fill out the profile with your machine\u2019s information.</p> <p></p> <p>One key feature of Octoprint is its webcam machine stream, allowing for remote supervision of your machine. Anything from USB webcams to Raspberry Pi ribbon cable cameras can be used for this stream &amp; Octoprint will automatically find this attached webcam and will use it to stream your machine (some more exotic cameras or mounting styles may require an additional configuration - discussed below). </p> <p>Personal Setup</p> <p>On my printer, I\u2019ve mounted a Raspberry Pi camera to the X-Axis stepper of my machine (via this Raspberry Pi camera mount), yielding a pretty nice side view of prints, shown below.  <p> </p> <p>Due to my printers camera mount, my Raspberry Pi camera is heald in an upsidedown orientation and thus needs to be compensated for on the software side. Luckily, in the Webcam &amp; Timelapse menu under the Features section of the Octorprint interface settings, webcam orientation can be changed. In addition, more advanced webcam options can be found, allowing for the use of almost all cameras connected to the hardware running Octorpint.</p> <p></p>"},{"location":"Projects/Octoprint/#plugins","title":"Plugins","text":"<p>One of the greatest features of Octorpint stems from its open-source nature \u2026 its community plugins. Under the Plugin Manager menu in the Octoprint section of the interface\u2019s settings, plugins can be added to the octoprint instance, allowing for entire customization of the instance from the interface to machine interaction. There are tons upon tons of plugins that exist in the Octorprint community, and you may even develop your own, however below is a list of plugins I find to be amazing additions to an instance </p> <p>Note</p> <p>Some of these shown plugins are machine specific to my Prusa I3 MK3S+</p> <p></p> <ul> <li> <p>Access Anywhere - The Spaghetti Detective<sup>1</sup> - AI-powered failure detection &amp; Remote Octoprint Access </p> <p> <p> </p> <li> <p>Bed Visualizer<sup>2</sup> - Uses Plotly js library to render a 3D surface of the bed\u2019s reported mesh </p> <p> </p> </li> <li> <p>Custom Background<sup>3</sup> - Change the background image on the temperature graph </p> <p> </p> </li> <li> <p>Exclude Region<sup>4</sup> - Adds the ability to prevent printing within rectangular or circular regions of the currently active gcode file </p> <p> </p> </li> <li> <p>Floating Navbar<sup>5</sup> - Make the navbar stick to the top of the page while scrolling</p> </li> <li> <p>GcodeEditor<sup>6</sup> - Edit gcode that\u2019s been uploaded to OctoPrint</p> <p> </p> </li> <li> <p>Heater Timeout<sup>7</sup> - Automatically shut off heaters if no print has been started</p> </li> <li> <p>Navbar Temp<sup>8</sup> - Display temperatures on the navbar</p> <p> </p> </li> <li> <p>Octoprint Display ETA<sup>9</sup> - Show finish time (ETA) for current print</p> <p> </p> </li> <li> <p>PrettyGCode<sup>10</sup> - adds a 3D GCode visualizer tab in Octoprint</p> <p> </p> </li> <li> <p>Themeify<sup>11</sup> - Beautiful themes for octoprint</p> </li> <li> <p>ipOnConnect<sup>12</sup> - Display the ip address of the connected OctoPrint instance on the control panel  MK3S+ specific</p> <p> </p> </li>"},{"location":"Projects/Octoprint/#octoprint-interface-workflow","title":"Octoprint Interface Workflow","text":"<p>Although the Octoprint web interface is rather intuitive, the number of stock features (not to mention plugin-enabled ones) can be a bit overwhelming without a bit of exploring. Below is a short PowerPoint I put together walking through the basics of the interface for students using my lab print farm, allowing for a bit of knowledge before exploration.</p>"},{"location":"Projects/Octoprint/#my-octoprint-instances","title":"My Octoprint Instances","text":"My Personal Octoprint Enabled Prusa I3 MK3S+ My Lab's Octoprint Enabled Printer Farm <ol> <li> <p>https://plugins.octoprint.org/plugins/thespaghettidetective/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/bedlevelvisualizer/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/custombackground/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/excluderegion/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/floatingnavbar/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/GcodeEditor/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/HeaterTimeout/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/navbartemp/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/display_eta/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/prettygcode/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/themeify/\u00a0\u21a9</p> </li> <li> <p>https://plugins.octoprint.org/plugins/ipOnConnect/\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/ParametricGenerator/","title":"Parametric Bottle Cap Generator","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/ParametricGenerator/#parametric-bottle-cap-generator","title":"Parametric Bottle Cap Generator","text":"Teddy Warner| Fall, 2021 |  6-7 minutes <p>Lost a lid or just want a more functional cap? Generate and print your own, compatible with any existing threads!</p> <p></p> <p>Be Sure to check out this projects page on PrusaPrinters, and its Instructable!</p> <p>Parametric Bottle Cap Generator Files </p>"},{"location":"Projects/ParametricGenerator/#cad-testing","title":"CAD &amp; Testing","text":"<p>This model was designed in Fusion 360 and uses 3 required input parameters and standard Metric thread profile equations to generate a cap that will perfectly fit any of your threaded containers. Input Parameters can be found from an existing threaded connector following the documentation below and their values can be written in their corresponding Expression boxes in the Parameters spreadsheet of the attached Parametric Bottle Cap Fusion 360 file (shown below)</p> <p></p> <p>Project Origins</p> <p>I originally set out to make this generator due to a need for a lower profile cap for the isopropyl alcohol bottle I keep next to my printer. The thread profile of this bottle is rather abnormal, and thus I found myself finding thread component values with standard Metric thread profile equations, the same used by the generator. </p> <p>Following the standard Metric thread profile<sup>1</sup> (displayed in the diagram below)\u2026</p> <p></p> <p>The model derives all necessary values from three required input parameters, all of which are fed into Fusion 360\u2019s coil tool, creating entirely parametrically generated threads. The calculations for user parameters derived from the three required input parameters are as followed \u2026</p> <ul> <li>Thread Height - 0.8660254037844386 * ThreadPitch</li> <li>Hole Size - ConnectDiamater + ThreadHight</li> <li>ThreadDmax - ConnectDiamater</li> <li>ThreadDmin - ThreadDmax - 2 * 5 / 8 * ThreadHight</li> <li>Cap Diamater - HoleSize + ThreadHight</li> <li>Cap Height - ConnectLegnth + ThreadPitch / 2 + 1.5 mm</li> </ul> <p>The implementation of these standard Metric thread profile equations in a Fusion model parametrically was the real kicker of this design. Unfortunately, Fusion\u2019s native thread tool is incompatible with user parameters and thus was unusable in the case of this generator. In its place, I utilized Fusion\u2019s coil tool, manipulating the values found in the generator\u2019s user parameters to create the caps inner threads. The final working coil tool calculations are as followed \u2026</p> <ul> <li>Diameter - ThreadDmax + ThreadHight / 4 * 2</li> <li>Height - ConnectLegnth + ThreadPitch / 2</li> <li>Pitch - ThreadPitch</li> <li>Angle - 0.0 deg</li> <li>Selection Size - ThreadHeight</li> </ul> <p>all of which are included, shown below, to generate the cap\u2019s threads.</p> <p></p> <p>Following the Generation of the caps thread, an inner contour is added defined by the ISO 965-1 standard<sup>2</sup> - shown in the diagram below.</p> <p></p> <p>This standard calls for radius value ThreadPitch / 4, and thus the following values are used in the inner contour \u2026</p> <ul> <li>Radius - ThreadPitch / 4</li> <li>Radius Type - Constant</li> </ul> <p>The contour is created with Fusion\u2019s Fillet tool and the prior mentioned values, shown below.</p> <p></p> <p>All this yields the successful basic generator, embedded below \u2026</p> <p>\u2026 however, what fun would a custom cap generator be without a little customization. The generator includes four different body styles,</p> <ol> <li>Plain</li> <li>Single-Hole</li> <li>Salt-Shaker</li> <li>Lanyard</li> </ol> <p>\u2026 allowing for total cap customization. These styles can be changed, along with two other customization factors, discussed in the Cap Generation section below.</p>"},{"location":"Projects/ParametricGenerator/#cap-generation-","title":"Cap Generation -","text":"<p>For documentation purposes, I created a new cap for my Nalgene water bottle \u2026</p>"},{"location":"Projects/ParametricGenerator/#required-measurements","title":"Required Measurements","text":"<p>There are three measurements required to generate your cap, all of which can be taken from the existing threaded connector \u2026 </p> <ol> <li> Connector Diameter - Measure the diameter (in MM) of your existing connector, from the very farthest point (i.e. the point of the thread) on either side. </li> </ol> <p></p> <p>Then, update the Expression value in the ConnectDiameter row (the box highlighted yellow below) with this found value.</p> <p></p> <ol> <li> Connector Length - Measure the height (in MM) of your existing connector, from the top lip to underneath the threads.</li> </ol> <p></p> <p>Then, update the Expression value in the ConnectLegnth row (the box highlighted yellow below) with this found value.</p> <p></p> <ol> <li> Thread Pitch - Measure the thread pitch of your existing connector, the distance in MM between the points of two sequential threads. </li> </ol> <p></p> <p>Then, update the Expression value in the ThreadPitch row (the box highlighted yellow below) with this found value.</p> <p></p>"},{"location":"Projects/ParametricGenerator/#optional-customization","title":"Optional Customization","text":"<p>To offer a bit more customization to each generated cap, there are a couple of different preferences allowing for different functions.</p> <ol> <li> Number of Grips - The number of grips lining the edge of the cap can be changed in the Expression value of the NumofGrips row. I find values between 40 through 55 work best, but if your experimenting, going below 11 will stop the generation of grip chamfered.</li> </ol> <p></p> <ol> <li> Grip Depth - The depths of these grips can be altered, determining how grippy your grips are. I\u2019ve found a value around 0.3 or 0.4 offers a good texture around the edge.</li> </ol> <p></p> <ol> <li> Lid Style - The lid style of your cap can be toggled between 4 presets in the Fusion Parametric Bottle Cap file by navigating to</li> </ol> <pre><code>Parametric-Bottle_Cap &gt; Bodies &gt; Styles\n</code></pre> <p>in the Fusion browser. The lid styles can be toggled between via the eye icon to the left of each style. The four styles are included below, with each of the toggles highlighted.</p> <ol> <li> <p>Plain -</p> <p> </p> </li> <li> <p>Single Hole -</p> <p> </p> </li> <li> <p>Salt Shaker -</p> <p> </p> </li> <li> <p>Lanyard -</p> <p> </p> </li> <li> <p>(Bonus) Community Remixes - </p> <p>Since I published this article, the community has developed a few additional styles! You can browse these on printables.</p> </li> </ol> <p>Congrats!</p> <p>You\u2019ve successfully generated your own bottle cap!</p> <ol> <li> <p>https://amesweb.info/Screws/metric-thread-profile-form-formula.aspx\u00a0\u21a9</p> </li> <li> <p>https://www.iso.org/standard/57778.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/PizzaPizza/","title":"Pizza-Pizza CNC Machine","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/PizzaPizza/#pizza-pizza-cnc-machine","title":"Pizza-Pizza CNC Machine","text":"Teddy Warner| Winter, 2022 |  38\u201348 minutes <p>A Pizza-Preparing, Tool-Changing, 3-Axis, 3D-printed CNC Machine!</p> <p>The Pizza-Pizza CNC Machine is a Marlin-based, three-axis CNC Machine I developed alongside three of my friends. My contributions to the project include the machine\u2019s gantry, electronic housing, and parts of the frame CAD, as well as the machine\u2019s electronics system, firmware, and pizza-preparing gcode. This publication covers the fabrication of the CNC in-depth, with a focus on my project contributions, while also including final-result media.</p> <p>The machine includes two tool ends, one for sauce distribution and another for cheese, with the potential for expandability to have toping tool ends in future iterations. The CNC is mostly 3D-printed, with the exception of its aluminum rails and laser-cut wooden baseplate, and operates with a mini RAMBo - or RepRap Arduino-Mega-compatible Mother Board.</p> <p>The Pizza-Pizza CNC is a prototype. While all files are provided for your recreation, our initial build was in a time trial: the machine was designed, manufactured, and assembled in a little under 2 weeks. That being said, we\u2019d love to see your recreations and refined iterations of the project!</p>"},{"location":"Projects/PizzaPizza/#supplies","title":"Supplies","text":"Item Quantity Price 1.75mm White PETG (1kg) 1 $23.99 Mini RAMBO 1 $95.00 Creality LCD 1 $22.79 12v DC Power Supply 1 $20.98 AC Power Adapter 1 $8.99 V-Rollers (Pack) 1 $9.99 Linear Bearings (Pack) 1 $10.95 NEMA 17 Stepper Motors 4 $12.99 Servo Motors 2 $16.99 40mm x 10mm Fan 1 $13.95 Steel Linear Motion Rods 2 $14.39 20x20 Aluminum Extrusion (Pack) 2 $50.99 Stepper Belts (10 Meters) 1 $14.99 M3 Hardware Assortment (Bolts, Nuts &amp; Screws) 1 - <p>\u2014 Total Cost: $316.99 \u2014</p>"},{"location":"Projects/PizzaPizza/#downloads","title":"Downloads","text":"<p>Click here to access and download all files, including CAD, Code, and Schematics, for this project. These files can be used and altered with attribution, as stated and enforced by my project license. In addition to the files included in this downloads folder, please note that Fusion 360 source files can be accessed with the Open in Fusion 360 button in the bottom right-hand corner of each of the embedded designs on this page.</p> <p>Checkout the Pizza Pizza CNC on Instructables</p> <p>The Pizza Pizza CNC Machine recieve the Judges Prize in Autodesk Instructable\u2019s CNC and 3D Printing Contest! Check out the writeup here!</p>"},{"location":"Projects/PizzaPizza/#gantry-cad","title":"Gantry CAD","text":"<p>A big feature of the Pizza-Pizza CNC is its tool-changing functionality. The machine\u2019s Z-carriage comes equipped with a claw-like end that can grab the machine\u2019s two inverted-frustum-shaped tools: a cheese and a sauce hopper. These hoppers will hang from mounts on the machine\u2019s frame from contact at their smaller diameters, and are picked up by moving the machine\u2019s claw just above these mounts, and sliding up to mesh with the larger top diameter of the hoppers. Thus, our CNC needs a z-axis to move the machine\u2019s claw up and down along the inverted-frustrum\u2019s surface. With this in mind, I began work modeling our CNC\u2019s Z-carriage in Fusion 360.</p> <p>The carriage itself is a rather simple piece, using linear bearings to move along the y-axis rods, with two underside slots running parallel to each other to hold the bearings in place. Both of these slots run the length of the carriage, however towards the center of the slots, there is a small lip up, allowing the steel rods to still move while holding the linear bearings in the four corners, at the ends of each slot. The final bit to this design is a bolt-on endcap for two of the sides of the carriage, ensuring the bearings don\u2019t leave the carriage\u2019s slots.</p> <p></p> <p>From here, I added two little features near the two endcaps, allowing for the Y-axis belt to be clamped to the carriage. The carriage will be pulled along the axis by this belt, attached to a stepper motor and idler on each end of the steel rods. These little features stray off the carriages centerline to the left, allowing for the belt running towards the right of the carriage to be unaltered. Each of the belt clips has a slot with matching teeth to mesh with the Y-axis belt, allowing for the feature to hold the belt without slipping.</p> <p>With the Y-axis motion of the carriage flattened out, I began the Z-axis design. To keep as much carriage bulk towards it\u2019s center, I began by positioning a stepper motor mount at the top middle of the carriage body. The machine will use this downwards-facing stepper, coupled to an 8mm threaded rod with a coupler and support bearing to drive the it\u2019s claw end. Because this rod will be hanging down from the coupler, the carriage design fits a bearing below the stepper and coupler assembly, to support the coupler and allow for a smooth rotation. Along with this threaded rod, the Z-axis uses two linear steel rods, attached to the bottom of the carriage and to a small bottom bracket to create a track for the axis to move on. These rods are the same style as those used on the machine\u2019s Y-axis. The final piece to this carriage involved endstop mounting. To home the Z-axis before machine use, I modeled an endstop switch mounting face, along with some mounting screw holes into the bottom connecting piece between the two steel rods.</p> <p></p> <p>The final bit to this carriage puzzle was the Z-axis claw. Similar to the carriage itself, this claw utilizes linear bearings to roll vertically on the Z-axis\u2019s two steel rods. The claw is driven up and down by the 8mm threaded rod attached to the Z-axis stepper motor, meshing with the rod\u2019s corresponding threaded nut. The pass-through hole for this nut is designed to allow the nut to sit flush with the top surface of the claw and can be inserted into the claw as you would a brass insert, by heating the nut with a soldering iron, while applying pressure to guild the nut into the hole. Next to the claws\u2019 nut is a small feature laying on the underside of the claw. This jut-out box ensures the Z-axis endstop hits the claw before the claw\u2019s linear bearings hit the bottom of the axis. From this feature, the claw ramps up into the hopper-holding end. This end consists of a 240-degree semi-circle, allowing for the end to slide into the bottom end of the hopper, and the rais to lock the hopper in the semi-circle. This claw was finished up with a small chef hat icon, which I imported into Fusion as an SVG before extruding the outlines of the design into some of the claw\u2019s space. Below is the finished Z-Axis Carriage model, including the Y-axis motion, Z-Axis, and the claw of the machines.</p> <p>With the carriage flattened out, I derived this Z-Carriage model into a communal machine render my friends and I shared, moving the component to run along the two Y-axis steel rods.</p> <p></p>"},{"location":"Projects/PizzaPizza/#endstops-belt-tensions","title":"Endstops &amp; Belt Tensions","text":"<p>I next began work on the Pizza-Pizza CNC Machine\u2019s gantry alongside my friend, Graham Smith. I developed the X-Axis belts and endstop, while Graham dealt with the Y-axis. I began this work off of one of the corner brackets Graham had modeled in a shared Pizza-Pizza CNC Machine render while I was working on the machine\u2019s carriage. These corners are mirrors across all eight of the corners of the machine, connecting three different pieces of aluminum extrusion to form the frame of the machine. I created a feature off of one of these corners, allowing a stepper belt to be fastened, and tensioned with a screw. The motion on this axis is driven along with these belts by two stepper motors on 3D-printed brackets. The belts on this axis themselves are stationary, spanning from corner to corner, running through an idler bearing, then around the stepper motors belt coupler, and then back around another idler bearing, before reaching the other corner. The two idler bearings ensure the belt is taut around the motor\u2019s belt coupler, and therefore, when the stepper steps, the axis is pulled along the taut belt. The features modeled into the side corner hold one end of this motion belt in line with the idler bearings, and wrap the end of the belt around a tensioning mechanism, before locking the belt in place in a slot with meshing teeth to hold the belt from slipping. The basic premise of the belt tensioner stems from the rotation of a screw through a slotted nut, pushing the end of the screw further into the feature. At the end of this screw is a small semi-elliptical shape that directs the force coming from the screw into the belt wrapped around it. This belt tensioning feature was needed on all four of the machine\u2019s upper corners, so upon the completion of the feature in one corner, I used some construction midplanes, and Fusion 360\u2019s mirror tool to mirror the feature to each of the four different upper corners.</p> <p></p> <p>With the X-axis motion done, I moved on to the axis\u2019s one endstop, which will allow our machine to home its X-axis to the switch before usage. The mount for this endstop switch is not overly complicated, attaching a switch holding bracket to the top of the 2020 aluminum extrusion t-slots. The feature uses an M4 bolt and corresponding T-Bolt to attach the bracket to the top of the extrusion through a hole in the bracket. From here the feature stems up to a slot that holds an endstop switch in line with the machine\u2019s X-axis carriage. The switch is held in this slot by its bottom screw hole, using an M2 bolt and nut. I positioned this endstop in the back right of the machine, keeping the endstop away from the cluttered front of the machine, and the switch\u2019s cable distanced as close to the electronic enclosure as possible. The feature can be seen mounted in this position in our final Pizza Pizza CNC render shown below.</p>"},{"location":"Projects/PizzaPizza/#electronic-housing","title":"Electronic Housing","text":"<p>Along with the prior carriage, belt tensioner, and endstop CAD work, I dealt with the brain and blood of our Pizza-Pizza CNC, the electronics system. The system is built around a Mini RAMBo - or RepRap Arduino-Mega-compatible Mother Board - controller board. The Mini RAMBo is a smaller version of the RAMBo controller board, a board based on the Arduino MEGA, including four individual stepper motor drivers and MOSFET switched outputs. This board worked great in the case of our machine, as not only is it a powerful, compact, and easily manipulated controller board, we were able to scrap the board from one of our lab\u2019s old out-of-commission Luzbot Mini 3d printers. This Mini RAMBo controls the machine\u2019s three-axis through four different stepper motors, one wired to the Z-axis, one to the Y-axis, and one stepper port wired to two different X-axis steppers. These steppers work with their corresponding endstops, also wired to the Mini RAMBo, to home and locate the machine. The Mini RAMBo also controlled the machine\u2019s two toolend servos, as well as a full graphic LCD panel to display machine menus and status. The graphical LCD used in the electronics system is a scrapped Creality Ender 3 LCD panel. This whole system is powered by a 12-volt DC power supply, converting 110-volt American AC wall power into the 12-volts needed by the system.</p> <p></p> <p>As a complement to the importance of the machine electronics system, I began designing and modeling a separate electronic enclosure that would sit independently to the side of the machine. I started the CAD work for this enclosure in Fusion 360 with not only the goal of fitting all electronics inside, but also maintaining decent-looking cable management, and proper ventilation. It\u2019s worth a second noting that this encloser will not hold the machine\u2019s power supply, as it\u2019s usually not best practice to put the hot PSU next to the controller, so the electronic closer will be connected to the PSU with some hookup wire. I started by tracing the two main boards of the system, the Mini RAMBo, and Creality Ender 3 LCD, in Fusion 360. I then started work on the body of the encloser itself, designing the base around the traced Mini RAMBo, and extruding up this base to make an encloser. From here I used a profile sketch of the LCD panel to draft a slanted face on the enclosure, where the LCD would mount, an angle for easy viewing, and minimal screen glare. The final bit allowing these two mainboards to fit in the enclosure is space for the Mini RAMBo\u2019s USB port to pass through to the back of the enclosure. The USB port access allowed me to continue to update the board\u2019s firmware while the electronics were in the enclosure.</p> <p></p> <p>Before continuing with the rest of the enclosure, I began the process of splitting up the pre-existing body into different components, and also creating new bodies and components for the enclosure\u2019s lid, wire grommet, and LCD knob. I spit these components up to make the 3D printing process as pain-free as possible, keeping in mind the limits of 3D printing while doing so. I ended up with four different components making up the encloser, one main body, the LCD screen mounting plate, the LCD screen knob, and a lid to the top of the encloser.</p> <p>Next up: electronic enclosure ventilation. Luckily enough for me, the Mini RAMBo has two 12-volt fan ports on the board, which can be turned on and off by the firmware. I used one of these ports to connect a small 40x10mm 12-volt fan to the closer, which is turned on by the firmware when the board\u2019s stepper motor drivers are activated, the default encloser fan configuration for marlin. This encloser fan pulls air in through a vent on the top left wall of the encloser\u2019s base. This intaken air circulates the encloser, where the cool air falls over the Mini RAMBo, positioned at the base of the encloser, before leaving through a side air vent positioned to the left of the Mini RAMBo. As a final touch to the electronics enclosure, I added a Pizza Pizza CNC logo to the front LCD plate, and some cool pizza icons on the enclosers sides, complementing the slanting nature of the enclosers front.</p> <p></p> <p>Upon the completion of this electronics box, I derived it into our shared Pizza Pizza CNC render, just like I did with the machine Z-carriage. After this completion, I spent some more time in the group fusion file, modeling in a nice plywood platform on which the machine and electronic enclosure rest.</p> <p></p>"},{"location":"Projects/PizzaPizza/#configuring-marlin","title":"Configuring Marlin","text":"<p>The electronics system of our machine is no good without firmware, so naturally, after completing the machine\u2019s electronics design, I began the firmware compiling process. Our Pizza Pizza CNC runs a version of the Marlin 3D printer firmware on the machine\u2019s Mini RAMBo. Marlin is an open-source firmware project with a great community of makers behind it, and thus was an easy choice for our machine due to the great documentation. The variations and branches of Marlin can vary greatly, so I\u2019ve found that when working with the firmware, it\u2019s best to start with a base configured for the controller board that you can alter. I began the firmware powering our machine using firmware provided by MarlinBuilder and the MPCNC project as a reference to make alterations to. The compiling of Marlin is a time-consuming process on your first couple of times through although the code is well documented and the line-by-line comments make it easy to work through, however as you begin to become more finally with the Marlin layout, the code becomes easier to navigate and compile. Below are the Pizza Pizza CNC Marlin completion notes, noting major aspects/configurations of the firmware. It\u2019s worth noting, however, that the amount of small simple changes made in our instance of the firmware would be too many to cover on this page, despite that, the configured instance can be found under this publications Supplies section, and smaller changes than those covered on this page can be found, explain part by part by the codes comments.</p> <p>This instance of Marlin firmware is an altered version of that supplied from the MarlinBuilder repo.</p> <ul> <li>Configured for MiniRambo</li> <li>Configured for CR10_STOCKDISPLAY</li> <li>Custom Boot screen</li> <li>Custom Status screen</li> <li>Configured with 0 Extruders - for CNC use</li> <li>Custom Pizza Maker Menu</li> <li>Configured with Marlin Game Menu</li> <li>Triple Enabled Servo Control Ports</li> </ul>"},{"location":"Projects/PizzaPizza/#custom-boot-and-status-screens","title":"Custom Boot and Status Screens","text":"<p>Upon bootup of Marlin, you are greeted with a graphical boot screen and then a machine status screen on the system\u2019s LCD, a good place to make a first impression. The firmware gives you the ability to include custom boot and status screens in your firmware instance, a feature I took advantage of, setting up our Pizza Pizza CNC firmware to boot with a chef hat logo, and include a \u201cPizza Pizza - CLS Fab Lab\u201d icon on the LCD\u2019s status screen. The first step in configuring these screens is to enable the firmware to show them. This can be done simply by uncommenting the lines\u2026</p> <pre><code>// #define SHOW_BOOTSCREEN\n\n// #define SHOW_CUSTOM_BOOTSCREEN\n\n// #define CUSTOM_STATUS_SCREEN_IMAGE\n</code></pre> <p>in Marlin\u2019s <code>Configuration.h</code> file. These three lines are found towards the very top of the <code>Configuration.h</code> file, just under the firmware author credits. Once uncommented, the lines will become more vibrant when compared to the comment lines, showing their activation.</p> <p>With the custom screen options enabled, the next step was to generate and include the image files to be shown on these screens. Starting with the custom boot screen, I created a new file in my Marlin directory, under the Marlin folder named _Bootscreen.h. This file is recognized by the Marlin instance as a custom boot screen, and thus the firmware will display the contents of the text file on bootup. With this file created, the next step was to generate the content of the file, a process made simple with Marlin\u2019s Bitmap Converter. This bitmap converter tool from Marlin\u2019s website converts a bitmap image file into text content that can be pasted directly into Marlin\u2019s <code>_Bootscreen.h</code> file. Here I chose a bitmap logo for our machine, a chef hat icon with Pizza Pizza written below it, and imported the bitmap into Marlin\u2019s converter. Under the tool, I selected the Marlin 2.x check box, so the tool would generate a format for the updated version of Marlin, along with the Binary, ASCII Art, and Boot checks. The Binary check box will output the conversion in a binary format that can be inserted into the <code>_Bootscreen.h</code> file, as opposed to the generic .hex file. Next, the ASCII Art check box, adds a nice preview of the screen to the converted code, making the text a little more readable. And Finally, selecting the tools Boot checkbox will format the conversion for the <code>_Bootscreen.h</code> file. With all these checks marked, I used the tool to convert the bitmap and then copied the output into my <code>_Bootscreen.h</code> file under my Marlin directory.</p> <p></p> <p>Moving on to the firmware status screen file, the basic file setup for the screen is practically the same as the boot screen. First, I created a new file in my Marlin folder, titled _Statusscreen.h, and then used the same Bitmap Converter to convert a Pizza Pizza - CLS Fab Lab logo and Pizza icon into our systems status screen. This conversion can be done by checking all the same boxes as before, Marlin 2.x, Binary, ASCII Art, except the Boot checkbox, as now because were generating the status screen, I checked the Status box. Despite these correct settings, I would receive an error while generating this status screen, as, unlike the systems boot screen, Marlin\u2019s status screen has more space requirements. I found these two lectures on Customizing Marlin LCD and Marlin\u2019s Custom Status Screen helpful while troubleshooting this, as both videos explain the different requirements of these custom screens and the workings behind them. The Marlin status display screen leaves a 128x19 pixel canvas for a custom status screen, with even less room for any other display graphics included on the status display. Our instance of Marlin has a 105x19 pixel canvas for this custom screen, due to the animated fan icon shown on the status display when the electronics encloser fan is activated. This fan icon comes preset when a fan is set up in Marlin, and I think adds a nice touch to the status display, so I decided to leave it, and work with the 105x19 pixel canvas. Keeping this size in mind, I rescaled the logo bitmap to the correct size and touched up the image pixel by pixel until the entire thing was clean black and white. I then reimported the small bitmap into the converter, checking the boxes listed above, and converted the image before copying the output into the <code>_Statusscreen.h</code> file in my Marlin folder.</p> <p> </p>"},{"location":"Projects/PizzaPizza/#custom-interface-menu","title":"Custom Interface Menu","text":"<p>With our instance of Marlin customized with a custom boot and status screen, I next moved on to the interface\u2019s LCD menus. Due to the lack of an SD card reader on both the Mini RAMBo board and the Ender 3 LCD, I opted to enable a customer menu in Marlin where we could store our pizza-making gcode and run it through the LCD interface. Marlin can be configured with custom menus like this through its <code>Configuration_adv.h</code>. I started a new custom menu by uncommenting line 3227,</p> <pre><code>// #define CUSTOM_USER_MENUS\n</code></pre> <p>This feature enables the ability to include a custom menu to run gcode commands in the Marlin interface. I began the menu by naming it and setting some default settings with the lines \u2026</p> <pre><code>#define CUSTOM_USER_MENU_TITLE \"Pizza Maker Menu\"\n#define USER_SCRIPT_DONE \"M117 Pizza done.\"\n#define USER_SCRIPT_AUDIBLE_FEEDBACK\n#define USER_SCRIPT_RETURN\n</code></pre> <p>These lines in order first name the menu Pizza Maker Menu, tell LCD to print Pizza done. on the status screen after a script is run, enable the LCD to give audible feedback when the menu is used, and also to return the interface to the status screen when a script is run. With these settings set, I next included the two different options under the menu, with the lines \u2026</p> <pre><code>#define USER_DESC_1 \"Load Pizza Pan\"\n#define USER_GCODE_1 \"G28 X Y\"\n\n#define USER_DESC_2 \"Make A Pizza\"\n#define USER_GCODE_2 \"G28 X Y\"\n</code></pre> <p>These lines establish the two menu options, to Load Pizza Pan and to Make A Pizza, and the gcode that will be run when selected. The gcode put in place here, \u201cG28 X Y\u201d is just a place filler in the Make A Pizza slot until the actual pizza-making code is written, however, it does serve its purpose in Load Pizza Pan, as the line homes the machine on its X and Y-axis. Below is an image of the entire custom user menu put together in Marlin\u2019s Configuration_adv.h.</p>"},{"location":"Projects/PizzaPizza/#servo-setup","title":"Servo Setup","text":"<p>Our Pizza Pizza CNC electronic system is not only responsible for axis movement and the LCD interface, but also tooled control, and thus the firmware needs the ability to control servos on the two hopper tool ends. The toolend system of our CNC was made by my friend, Charles DeMey. The Marlin firmware can control servos natively through gcode commands when configured in the firmware, so this was my first step in the servo setup process. The servo control sections can be found at the very bottom of Marlin\u2019s <code>Configuration.h</code> file, and you can enable servo control by uncommenting the line \u2026</p> <pre><code>// #define NUM_SERVOS 3\n</code></pre> <p>The number following this line tells the firmware the number of desired servos, in m=our machines case three, two used by the tool ends, and one for possible expansion. In correspondence with this line, you will next need to set a servo delay, so each servo will have time to reach its desired angle. This delay value needs to contain an array of delay values corresponding to the number of servos set up in the prior line. In our case, this array looked like this \u2026</p> <pre><code>// #define SERVO_DELAY { 300, 300, 300 }\n</code></pre> <p>setting a delay of 300 for each of the three servos individually.</p> <p>Unfortunately, the Mini RAMBo board were using in our electronics system doesn\u2019t come equipped with on-board factory servo pins, however, this issue can be worked around by reestablishing the board\u2019s pins in marlin, assigning different servo pins. The Mini RAMBo comes equipped with 6 onboard endstop pins, for MIN and MAX dual end stopping, a feature that was not taken advantage of on our Pizza Pizza CNC, so I settled on switching the board\u2019s three MAX endstop pins, into our needed servo pins. I located the Mini RAMBo board file under my Marlin directory and scrolled through the file until I found the board\u2019s Limit Switches section. Here I switched the Mini RAMBo pins 30, 24, and 23, from the factory MAX endstop pins, into three different servo pins, <code>SERVO0_PIN</code>, <code>SERVO1_PIN</code>, and <code>SERVO2_PIN</code>.</p>"},{"location":"Projects/PizzaPizza/#game-menu","title":"Game Menu","text":"<p>As a fun little touch to our machine\u2019s instance of Marlin, I enabled Marlin\u2019s easter egg game menu on line 1427 of <code>Configuration_adv.h</code>. This feature adds a menu at the bottom of the Marlin LCD interface, allowing a user to play game options configured in the firmware. On our Pizza Pizza CNC display, a user can play Brickout, Space Invaders, or Snake while waiting for their pizza to be prepared. Not a necessary element of the firmware, but a nice touch to finish this compilation with.</p>"},{"location":"Projects/PizzaPizza/#compiling-marlin","title":"Compiling Marlin","text":"<p>Now with our instance of Marlin configured, the next step was to build and flash the code to our Mini RAMBo. I used PlatformIO to build and flash my instance of Marlin to the board. I began the firmware building process, using PlatformIO\u2019s build checkmark in its toolbar while in my Marlin directory. This built successfully on the first try, so I next moved on to connecting the Mini RAMBo to my computer and flashing the firmware. One thing to keep in mind while flashing the firmware to a Mini RAMBo is the need to power the board from an external power supply while connected via USB to a computer. I hooked up the board to a 12-volt input from a power supply and connected the board to my computer via a USB cable. Upon board connection, PlatformIO scans the port and recognizes the board, allowing me to just use the PlatformIO toolbar\u2019s Flash arrow to flash the Mini RAMBo with our instance of Marlin.</p> <p></p> <p>\u2026 and success! The Marlin firmware flashed to our Mini RAMBo and electronics system on the first go and booted up.</p> <p></p>"},{"location":"Projects/PizzaPizza/#firmware-testing","title":"Firmware Testing","text":"<p>I began to move on to testing both the electronics system and firmware. Visually, Scrolling through the LCD interface I found no issues, and every part of the system powered on correctly. I nest connected the Mini RAMBo to my laptop vias USB and began to test the system by sending it commands. I used CNCjs, a javascript CNC controller, and gcode sender, to first ensure I could connect to the system via USB, and next to test the board\u2019s three active stepper motor ports by hooking up a stepper to the boards X, Y, and Z stepper ports. This jerry-rigged test, shown in the video below, yielded good results, confirming control over the steppers through firmware.</p> <p>I also completed this same motion test through the LCD interface Motion menu, to confirm the interfaces working, before moving on to the final firmware test, the game menu test. All three of the included games work great and are super entertaining. Unfortunately, Graham Smith, outperformed me while testing the games, scoring a 155 in space invaders, despite that, the game menu was an entertaining success, and finally, the firmware was complete.</p> <p>One of the coolest aspects of running Marlin on our CNC is its easy LCD interface integration, a feature that adds more flair to a machine. Although different unique sections of this interface are discussed above under the Marlin configuring section of this page, I threw together a walkthrough of the final product, all the parts together, shown below.</p>"},{"location":"Projects/PizzaPizza/#manufacturing-assembly","title":"Manufacturing &amp; Assembly","text":"<p>The machine manufacturing and assembly process began with lots of print time. Due to our mostly 3D-printed gantry design, Graham Smith and I ran our printers around the clock for a couple of days to crank out all of our CNC\u2019s printed parts.</p> <p></p>"},{"location":"Projects/PizzaPizza/#electronics-housing-assembly","title":"Electronics &amp; Housing Assembly","text":"<p>Before worrying about any wiring, I first began with print cleanup for our electronics enclosure. I printed the large base to our encounter with supports to allow for the side pizza icons to come out cleanly, and thus after the print, I had to post-process the part. All parts printed for any of my systems use PETG plastic, and in my belief that allows this post-processing to be a little easier. I followed the same steps taken to clean up my prints in my Fab Academy 3D printing week assignment, and these processes can be read about on that page.</p> <p></p> <p>After this cleanup, I began to install the electronics inside the case, first screwing the LCD panel to its mounting place, using the plate\u2019s spacers, to align the screen in its opening, shown below.</p> <p></p> <p></p> <p>I then moved on to welding this front plate with the LCD attached to the encloser\u2019s base, sticking the two together with superglue, before using a hairdryer and some sandpaper to clean up the edge. Nextly, I installed the Mini RAMBo on its mounting pins, aligning the board\u2019s USB port with its corresponding cutout, and also screwed in the enclosure fan with some M3 screws and bolts.</p> <p>I moved on to setting up the machine wiring harnesses and altering some stepper cables for each axis. The Machines X-axis steppers are set to run off of the same port on the Mini RAMBo, so I first prepared this cable, by splicing two stepper connectors to one of the board connectors, and next reversing two of the stepper connector wires, one of the stepper cables, to ensure the two motors would be reversed, and thus move in the same direction when mounted in a mirrored position. One of these X-axis stepper cables also needed to be longer than the other, due to the mounting position of the stepper in correspondence to the electronics housing, so I added a bit of length to one of the connectors. I also repeated this added length of the Z-axis stepper, and plugged these two wires, along with the unaltered Y-axis wire into the Mini RAMBo.</p> <p></p> <p>The next wiring step was the power of the system, which simply meant connecting the Mini RAMBo to a 12v DC power supply, and that to an AC adapter and fuse box (Yes the fuse here helps, I blew one in this box while testing due to me being stupid, so the inclusion of this part saved the system). I hooked up our Mini RAMBo\u2019s power adapter to some speaker wire, and ran it to the VCC and GND outputs of our power supply, hooking up each wire to the correct output. Nextly, I attached the Ac adapter and fuse to the system, by hooking up the live, neutral, and ground wires to our power supply, before plugging in the system to test. This power wiring setup worked, and the whole system booted up, as shown in the picture below.</p> <p></p> <p>The final pieces to this wiring puzzle involved connecting the three axis\u2019s endstops to their correct MIN endstop pins on the Mini RAMBo, and also attaching some servo extender cables to the designated servo data pins, set up above in the firmware, before routing all of these cables through the enclosers back wall zip ties, mounting the cables cleanly out of the way.</p>"},{"location":"Projects/PizzaPizza/#gantry-assembly","title":"Gantry Assembly","text":"<p>The majority of the Gantry assembly process was print cleanup, due to the gantries a large amount of 3d printed parts, and like before I followed the same post-processing steps as I did in my Fab Academy 3D printing week assignment, but after all, this was complete. Below, I\u2019ll quickly touch on the assembly of each of the printed components I worked on\u2026</p> <p>starting with the belt tensioners. There were eight corners on our machine in total, but only four needed assembly/post-processing. These were the four top corners including the machine\u2019s X-axis belt tensioners. These tensioners are assembled by sliding an M3 nut into the tensioners slot, securing it in with an M3 bolt, which runs through the nut and connects to a pressure distribution end, where the belt wraps around. On any piece connecting a belt to a 3d printed component, I included meshing teeth, to align and hold the belt in place snuggly without adhesives.</p> <p></p> <p>I then used these eight printed corners, along with some 20x20 aluminum extrusion to assemble the machine\u2019s frame. I first used a metal bandsaw to cut these extrusions to their desired lengths \u2026</p> <p></p> <p>before attaching the corners to the extrusion with some work with a mallet. Unfortunately, One of the cornets cacked on the top during this assembly, but this was no big deal because I just used some superglue and a clamp to close the crack, ensuring the corner was still square.</p> <p></p> <p>The Z-carriage claw assembly was pretty simple, the only step was to attach the brass threaded rod coupler to the claw. This was inserted just as you would any other brass insert, by heating the coupler with a soldering iron, aligning it to the claw\u2019s hold, and applying pressure to push the insert into the claw. From here, I used two M3 bolts and nuts to secure the brass coupler in the claw, ensuring no rotation in its resting place.</p> <p></p> <p>To complete the rest of the Z-carriage, I first, like all the other prints before it, removed supports from the print and post-processed the part.</p> <p></p> <p>The first step in this carriage assembly was the installation of the embedded couple support bearing. This bearing allows the Z-axis couple to have a place to sit, reducing strain on the coupler, and allowing for smoother movement. I greased a small skateboard bearing, and fit it into place, using a dowel to reach the bearing when at the bottom of its hole.</p> <p></p> <p>Nextly, I mounted the carriage\u2019s four linear bearings in their slots, and then attached the carriage\u2019s two endplates with eight total M3 screws, securing these bearings in place.</p> <p>The Z-carriage assembly now just came down to mounting the stepper, claw, and Z-axis rods, which needed to be cut down to size on the metal bandsaw, just like the aluminum extrusion. I first mounted the Z-axis stepper, coupler, and threaded rod in place, ensuring the couple was sitting flush on the embedded bearing, before attaching the stepper to the carriage with some M3 screws. Nextly, I prepared the bottom half of the axis, using a mallet to hit the two steel rods into the bottom of the axis, mounting the axis claw to these rods, and screwing on the Z-axis endstop to its mount, before hitting this whole assembly onto the bottom of the Z-carriage, leaving me with the completed product shown below.</p> <p></p> <p>I then mounted the Z-carriage to the two Y-axis steel rods, and handed off the gantry assembly to Graham Smith, who attached my Z-carriage to his X-Axis carriages, and worked with me to mount the whole gantry to the frame of the machine.</p> <p></p>"},{"location":"Projects/PizzaPizza/#pizza-making","title":"Pizza Making!","text":"<p>To prepare a pizza in our Pizza Pizza CNC, a .gcode script will need to be run on the machine, just like a 3d printer or other CNC machines. I broke up the task of this .gcode into different steps\u2026</p> <ol> <li>Home the Machine</li> <li>Pick up the Sauce Tool End</li> <li>Move to the center of the work plane, and open the hopper via the servo</li> <li>Move the machine to make a circle of sauce from this center point</li> <li>Close the hopper via the servo</li> <li>Drop off the Sause Tool End</li> <li>Pick up Cheese Tool End</li> <li>Repeat Steps 3-5</li> <li>Drop off the Cheese Tool</li> <li>Jog Machine Back to Origin</li> </ol> <p>These 10 different steps were split up into sections that could be generated, and others that would have to be written line by line.</p> <p>I began the pizza gcode work in Fusion 360, as I planned on generating a circle toolpath we could run to lay down sauce and cheese on our pizza. Our desired pizza size was a 12\u201d diameter crust, so I began by putting a circle representing this crust on a workplane sized like our machine\u2019s bed. Then I created an offset circle running on the inside of this crust, representing the layer of sauce and cheese, leaving a crust around the outside. With this basic circle done, I saved the sketch as an SVG to my computer.</p> <p></p> <p>With this SVG created, I next moved on to the actual toolpath generation for these circles. For this process, I used a nice simple toolpath generation software called Estlcam, a software I\u2019ve used in the past whenever doing pen plotting with my CNC.</p> <p>I began in the Estlcam software by importing my circle SVG created in Fusion, before using the software to generate a pocket-like toolpath on the inside circle, peeling out in spirals from the center of the circle. To do this I first created a custom hopper \u201cbit profile\u201d in Estlcam (just a 25mm end with fast speeds and feeds), and selected this tool along with Estlcam\u2019s Hole tool from the toolbar.</p> <p></p> <p>I then exported this pocket-like circle toolpath from Estlcam via \u2026</p> <pre><code>file &gt; Save CNC Program\n</code></pre> <p>and then view the generated .gcode in Esltcam\u2019s GCODE preview window.</p> <p></p> <p>This process left me with generated gcode of a single circle, that I could later manipulate into our pizza-preparing gcode. I ran a quick test of this generated gcode on my personal CNC, just to confirm it\u2019s working, shown in the video below.</p>"},{"location":"Projects/PizzaPizza/#tool-change-servo-control","title":"Tool Change &amp; Servo Control","text":"<p>The next step in our pizza preparing gcode was flattening out servo control, and proper tool change code. I worked with Charles DeMey on this process, starting with controlling the two servos on Charles\u2019s tool ends for our CNC. This servo control feature is a feature I had set up prior in the Marlin firmware (talked about above), and Charles and I worked off of my compiled firmware to attach a data line from each servo to their set pins on the Mini RAMBo. Originally, I was planning on not only running this data line to the servos from the Mini RAMBo but also VCC and GND to power them from the board. However, this setup drew too much current to the servos and left the system\u2019s LCD unable to display characters. As a workaround to this, I ended up powering each of these servos through a Buck converter attached to our machine\u2019s power supply, stepping the 12v signal down to 5v for the servos. From here, Charles spend a little time writing and testing 5 different angles for each servo</p> <ul> <li>Closed</li> <li>Half Open</li> <li>Open</li> <li>Opposite Half Open = Opposite Closed</li> </ul> <p>and converted these 5 angles, into gcode servo control commands, inserting the servo angle into \u2026</p> <pre><code>M280 P&lt;index&gt; S&lt;pos&gt;\n</code></pre> <p>The M280 command initiates Marlins servo control, where we can then declare the servos port with the P, and set the desired angle with S. We used this format for each servo 5 angles and copied this servo control gcode into our generated circle code to use later.</p> <p>After the servo control gcode was flattened out, Charles began the work of writing tool change gcode for our CNC, writing out the rough positioning of each hopper when on its holder, jogging the machine to line up with the holder, and picking up the hopper. He wrote the tool change instructions for each hopper\u2019s pickup and return based on these positions, before having to leave for the night. Unfortunately, the next day Charles was unable to make it back to the lab due to COVID protocol, so I took over testing his work, with a little help from Graham Smith. With Charles\u2019s tool changing code as a starting place, we began altering each position value little by little until we had a completely successful automated tool change, shown in the video below.</p>"},{"location":"Projects/PizzaPizza/#compilation-of-gcode-parts","title":"Compilation of GCODE Parts","text":"<p>The final step in our machine gcode was to compile all of these individual sections together. I began in an updated smaller version of the circle file (so we could clear the machine hoppers, we couldn\u2019t use as big of a circle), where I began by copying in the servo closed command at the start of the code, ensuring no sauce and cheese leaks before called on. Next, I included the line\u2026</p> <pre><code>G28\n</code></pre> <p>which homes the machine on all 3 axes, to their corresponding endstops. From here I copied in the tool change gcode to pick up the sauce hopper, before copying in the generated smaller circle gcode. Inside this generated circle, I copied in the servo half-open line at the point when the machine reaches the center of the crust and is beginning to spiral out and also included the servo close line when the last spiral point was hit. The final piece to this first sauce code was the hopper return code, which I copied in at the very end of the generated gcode, and then included another\u2026</p> <pre><code>G28\n</code></pre> <p>to rehome the machine. I copied the entirety of this sauce code below the last line as a starting place for the cheese gcode. I replaced all sauce hopper tool changes and servo control lines, with their corresponding cheese hopper lines, and finally, the machine gcode was complete!</p> <p>Of course, after all this work on a pizza-preparing machine, the only logical test for the machine would be preparing a pizza. We set up our CNC by covering the entire work area and all parts that could be covered with a plastic trash bag, as I didn\u2019t want to get sauce on our newly working machine. From here, we loaded the two hoppers with tomato sauce and some shredded cheese, confirmed everything looked right, and then ran the final pizza preparing gcode, and\u2026</p> <p>\u2026 it worked!! The pizza preparing gcode worked through both of its tool changes, creating spirals of sauce and cheese on our pizza crust. Unfortunately, there were a couple of small issues in the run-through, one being not enough sauce put in our sauce hopper, so upon its tool docking, the hopper wasn\u2019t heavy enough to stay in the holder, and the other being a sticky cheese. We had left our cheese and sauce out in our lab for almost two days before the test, and not only did this cause the cheese to smell, but also left us with a cheese that would not stop sticking to itself, proving an issue when trying to get the cheese to fall from the hopper, however, the cheese fell through the hopper hole with a little convincing, and finally we had prepared a pizza.</p>"},{"location":"Projects/ProjectPortfolioSite/","title":"Project Portfolio Site","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/ProjectPortfolioSite/#project-portfolio-site","title":"Project Portfolio Site","text":"Teddy Warner| Summer, 2021 |  6-7 minutes <p>The behind the scenes of the site you are on right now :)</p> <p>This site relies on MKdocs, a static site generator is written in python to create the content of the site, as well as the MKdocs Material Theme for customization. I used this same static site generator to create my Fab Academy Documentation Site, however, that site runs strictly on the MKdocs Material Theme without custom alterations. This site relies on the same structure as the prior Fab Academy Documentation Site but includes experiments with entirely custom components, and an altered MKdocs Material Theme. In addition to all that, it\u2019s also built and hosted through my personal GitHub Pages repo, under my personal domain. </p>"},{"location":"Projects/ProjectPortfolioSite/#repo-setup-and-cloning","title":"Repo Setup and Cloning","text":"<p>To start the site I created a new GitHub Pages repo on my GitHub and cloned in some of my site files from my prior Fab Academy Documentation Site (the cloned files were just so site setup files, as well as a bit of content on my Fab Academy final project to be displayed on this site). I then pulled this repo to my local system folder with the command</p> <pre><code>git clone REPO-HERE # (1)\n</code></pre> <ol> <li>Replace the text <code>REPO-HERE</code> with your site repo\u2019s Clone with SSH link. This can be found under the Clone button in most Git web interfaces (i.e. Gitlab, Github, etc.).</li> </ol> Do I Need to Clone my Repo Locally? <p>Modern Hosting Platforms such as GitHub or GitLab allow for Repo editing to take place directly in the browser, and thus technically speaking, one does not need to pull their site Repo locally. However, browser editing eliminates the possibility of locally hosting, and thus one cannot view changes before pushing publically. Despite this, If you\u2019d still like to work in a Browser-based editor, you may skip the SSH Setup and Site Publishing sections, and follow an editing and pushing workflow for your specific browser-based editor.</p>"},{"location":"Projects/ProjectPortfolioSite/#ssh-setup","title":"SSH setup","text":"<p>To clone a Git repository locally, an SSH key must be generated on your computer and then attached to your GitHub account. GitHub has really good documentation on creating a new SSH key and attaching it to your Git Web Interface (Github, Gitlab, etc.). </p> <p>The process for generating and attaching a new SSH key to your Git Web Interface is relatively pain-free when following this documentation and using the command written above. My process involved running these commands \u2026</p> <pre><code>ssh-keygen -t ed25519 -C \"&lt;Your-SSH-Name-Here&gt;\" # (1)\n\nGenerating public/private ed25519 key pair.\nEnter file in which to save the key (/home/user/.ssh/id_ed25519): # (2)\n\nEnter passphrase (empty for no passphrase): # (3)\nEnter the same passphrase again:\n\ncat ~/.ssh/id_ed25519.pub | clip # (4)\n</code></pre> <ol> <li> <p>This generates a new SSH key on your computer.</p> </li> <li> <p>Click enter to confirm location.</p> </li> <li> <p>Enter a passphrase for your SSH key, you will need this password whenever you attempt to push your site.</p> </li> <li> <p>This copies your new SSH key to clipboard. Replace <code>id_ed25519.pub</code> with your filename. For example, use <code>id_rsa.pub</code> for RSA.</p> </li> </ol> <p>Once copied to the clipboard, you can paste the newly generated SSH key in your SSH key settings in your Git Web Interface, to link your computer and your Git Web Interface. Now you can finally clone your site Repository locally as discussed above.</p>"},{"location":"Projects/ProjectPortfolioSite/#mkdocs-material-install-site-building","title":"Mkdocs Material Install &amp; Site Building","text":"<p>Requirements</p> <ul> <li>Latest Version of Python Be Sure Your Python Installation is Installed to PATH in the setup wizard</li> <li>Latest Version of Git</li> </ul> <p>Open your cloned GitHub Pages repo in your code editor of choice, my personal favorite source-code editor is Visual Studio Code, so naturally, I used it. In a new terminal in the clone site folder, run the command</p> <p><pre><code>pip install mkdocs-material\n</code></pre> This will install all dependencies needed to run a static site with MKdocs, as well as the MKdocs Material Theme.</p> Note for Fab Academy Students <p>The MKdocs Material theme is paired with the mkdocs-git-revision-date-localized-plugin by default in your Fab Academy student repo. This plugin enables displaying the date of the last git modification of a page at the bottom of each page. To build your static site, this plugin must be installed in your local site folder with the line below \u2026</p> <pre><code>pip3 install mkdocs-git-revision-date-localized-plugin\n</code></pre> <p>However, one may opt to not use it via the removal of the line </p> <pre><code>- git-revision-date-localized\n</code></pre> <p>found under the <code>plugins</code> section of your sites mkdocs.yml file.</p> <p>Following this setup, I build my static site locally with the command in my site folders terminal</p> <pre><code>mkdocs serve\n</code></pre> <p>and followed the link given in my computer\u2019s web browser. You should get an output like this after the mkdocs serve command \u2026</p> <pre><code>INFO     -  Documentation built in X.XX seconds\nINFO     -  [XX:XX:XX] Serving on http://YOUR-LOCAL-SITE/\n</code></pre>"},{"location":"Projects/ProjectPortfolioSite/#auto-site-building","title":"Auto Site Building","text":"<p>GitHub Actions</p> <p>The easiest way for your static site to be built in GitHub pages upon a push is through GitHub Actions allowing for an automated workflow to run to build and pipeline your static site publicly. </p> <p>At the root of your repository, create a new GitHub Actions workflow, e.g. <code>.github/workflows/ci.yml</code>, and copy and paste the following contents:</p> <pre><code>name: ci # (1)\non:\n  push:\n     branches: # (2)\n      - master\n       - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n       - uses: actions/checkout@v2\n       - uses: actions/setup-python@v2\n         with:\n          python-version: 3.x\n       - run: pip install mkdocs-material # (3)\n       - run: mkdocs gh-deploy --force\n</code></pre> <ol> <li> <p>You can change the name to your liking.</p> </li> <li> <p>At some point, GitHub renamed <code>master</code> to <code>main</code>. If your default branch is named <code>master</code>, you can safely remove <code>main</code>, vice versa.</p> </li> <li> <p>This is the place to install further MkDocs plugins or Markdown extensions with <code>pip</code> to be used during the build.</p> </li> </ol> <p>For my site setup, I added the line \u2026</p> <pre><code>- run: pip install mkdocs-git-revision-date-localized-plugin\n</code></pre> <p>\u2026 to install the Git Revision date plugin to my site, allowing for the date each page was updated to be displayed under all of the contents of the page.</p>"},{"location":"Projects/ProjectPortfolioSite/#site-customisation","title":"Site Customisation","text":"<p>The basic setup and customization of your static site are covered wonderfully on the Mkdocs Material Theme Setup Documentation. However, following this basic theme setup, your site can be altered farther by extending the Material Theme -  Witch can be read about here. All of my overrides can be found in this site\u2019s GitHub repo.</p> Git Pull <p>When working with other developers in a Git Repo, the Git Pull command is necessary to keep your local branch up to date with others\u2019 work. Running the line \u2026</p> <pre><code>git pull\n</code></pre> <p>will pull in any pushed changes to your repository, allowing you to merge work/changes with work from other branches.</p> <p>After working on teddywarner.org for a couple of months, I began to develop a project template page that accumulates different front-end HTML, CSS &amp; Markdown aspects I use on my pages, which can be found via the button below. </p> <p> Project Page Template</p> <p>Here I\u2019ve also compiled a bit of a mkdocs markdown cheat sheet with 10 sections for customization, formatting, or additional flair. Again, the Mkdocs Material Theme Setup Documentation covers the theme-specific markdown at length and is a nice resource while setting up specific theme-specific bits. This section compiles theme-specific markdown with overall markdown features &amp; all of the markdowns behind it can be found in the following sections, or on this page source - linked below.</p> <p> Project Portfolio Site Source Code</p>"},{"location":"Projects/ProjectPortfolioSite/#1-markdown-meta-data","title":"1. Markdown Meta Data","text":"<pre><code>markdown_extensions:\n  - meta\n</code></pre> <pre><code>---\ntitle: PROJECT-TITLE\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\ntemplate: custom.html\nhide:\n  - navigation\n  - toc\n---\n</code></pre>"},{"location":"Projects/ProjectPortfolioSite/#2-basic-syntax","title":"2. Basic SyntaxHeading 3","text":"Image &amp; CaptionHeadingsHyperlinkBlockquote <p><pre><code>![alt text](imageURL.jpg){: align=right/left width=\"100%\"}\n  &lt;figcaption&gt;Caption&lt;/figcaption&gt;\n</code></pre> Caption Example </p> <pre><code># Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n</code></pre> <p> Heading 1 Heading 2 Heading 4 Heading 5 Heading 6 </p> <p><pre><code>[Hyperlink Example](URl)\n</code></pre> Hyperlink Example </p> <pre><code>&gt; blockquote\n</code></pre> <p>Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo.</p>"},{"location":"Projects/ProjectPortfolioSite/#3-text-formatting","title":"3. Text Formatting","text":"<pre><code>markdown_extensions:\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n</code></pre> <ul> <li> <p>Bold Text - <code>**bold text**</code></p> </li> <li> <p>Italicized Text - <code>*italicized text*</code></p> </li> <li> <p>Strikethrough - <code>~~Strikethrough~~</code></p> </li> <li> <p>Subscript - H<sub>2</sub>O - <code>H~2~O</code></p> </li> <li> <p>Superscript - X<sup>2</sup> - <code>X^2^</code></p> </li> </ul>"},{"location":"Projects/ProjectPortfolioSite/#4-buttons","title":"4. Buttons","text":"<pre><code>markdown_extensions:\n  - attr_list\n</code></pre> <pre><code>[Solid Button :fontawesome-solid-download:](URL){ .md-button .md-button--primary}\n[Outline Button](URL){ .md-button}\n</code></pre> <p>Solid Button  Outline Button</p>"},{"location":"Projects/ProjectPortfolioSite/#5-different-list-styles","title":"5. Different List Styles","text":"<pre><code>markdown_extensions:\n  - def_list\n  - pymdownx.tasklist:\n      custom_checkbox: true\n</code></pre> Unordered ListOrdered ListTask ListDefinition List <p>\u201cUnordered lists can be written by prefixing a line with a <code>-</code>, <code>*</code> or <code>+</code> list marker, all of which can be used interchangeably. Furthermore, all flavors of lists can be nested inside each other:\u201d <sup>2</sup></p> <pre><code>- Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    * Nullam dignissim ultrices urna non auctor.\n- Nam vulputate tincidunt fringilla.\n    * Nam vulputate tincidunt fringilla.\n    * Nullam dignissim ultrices urna non auctor.\n- Nullam dignissim ultrices urna non auctor.\n    * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n</code></pre> <p>Result -</p> <ul> <li>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.<ul> <li>Nullam dignissim ultrices urna non auctor.</li> </ul> </li> <li>Nam vulputate tincidunt fringilla.<ul> <li>Nam vulputate tincidunt fringilla.</li> <li>Nullam dignissim ultrices urna non auctor.</li> </ul> </li> <li>Nullam dignissim ultrices urna non auctor.<ul> <li>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.</li> </ul> </li> </ul> <p>\u201cOrdered lists must start with a number immediately followed by a dot. The numbers do not need to be consecutive and can be all set to <code>1.</code>, as they will be re-numbered when rendered:\u201d <sup>3</sup></p> <pre><code>  1.  Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n      sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n      nulla. Vivamus a pharetra leo.\n\n      1.  Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet\n          quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a\n          ultricies libero efficitur sed.\n\n      2.  Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet\n          rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.\n\n          1.  Mauris dictum mi lacus\n          2.  Ut sit amet placerat ante\n          3.  Suspendisse ac eros arcu\n</code></pre> <p>Result -</p> <ol> <li> <p>Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis       sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis       nulla. Vivamus a pharetra leo.</p> <ol> <li> <p>Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet       quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a       ultricies libero efficitur sed.</p> </li> <li> <p>Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet       rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.</p> <ol> <li>Mauris dictum mi lacus</li> <li>Ut sit amet placerat ante</li> <li>Suspendisse ac eros arcu</li> </ol> </li> </ol> </li> </ol> <pre><code>- [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n- [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [ ] Praesent sed risus massa\n- [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n</code></pre> <p>Result -</p> <ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul> <pre><code>`Lorem ipsum dolor sit amet`\n\n:   Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\n    tellus non sem sollicitudin, quis rutrum leo facilisis.\n\n`Cras arcu libero`\n\n:   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\n    ut eros sed sapien ullamcorper consequat. Nunc ligula ante.\n\n    Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    Nam vulputate tincidunt fringilla.\n    Nullam dignissim ultrices urna non auctor.\n</code></pre> <p>Result -</p> <code>Lorem ipsum dolor sit amet</code> <p>Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis.</p> <code>Cras arcu libero</code> <p>Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante.</p> <p>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.</p>"},{"location":"Projects/ProjectPortfolioSite/#6-content-tabs-code-styling-annotations","title":"6. Content Tabs, Code Styling &amp; Annotations","text":"<pre><code>markdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.superfences\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true \n</code></pre> <pre><code>theme:\n  features:\n    - content.code.annotate \n</code></pre> YAMLC++Python YAML EXAMPLE<pre><code>theme:\n  features:\n    - content.code.annotate # (1)\n</code></pre> <ol> <li> I\u2019m a code annotation! I can contain <code>code</code>, formatted     text, assets/images, \u2026 basically anything that can be expressed in Markdown.</li> </ol> C++ EXAMPLE<pre><code>void setup() {\n  pinMode(0, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(0, HIGH); \n  delay(500);\n  digitalWrite(0, LOW); \n  delay(500); \n}\n</code></pre> PYTHON EXAMPLE<pre><code>import tensorflow as tf\n</code></pre>"},{"location":"Projects/ProjectPortfolioSite/#7-footnotes","title":"7. Footnotes","text":"<pre><code>markdown_extensions:\n  - footnotes\n</code></pre> <pre><code>Here's a sentence with a footnote. [^3]\n\n[^3]: This is the footnote. \n</code></pre> <p>Here\u2019s a sentence with a footnote. <sup>1</sup></p>"},{"location":"Projects/ProjectPortfolioSite/#8-formatted-tables","title":"8. Formatted Tables","text":"<pre><code>markdown_extensions:\n  - tables\n</code></pre> <pre><code>| Method      | Description                          |\n| ----------- | ------------------------------------ |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"Projects/ProjectPortfolioSite/#9-admonitions","title":"9. Admonitions","text":"<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre> <p>NOTE EXAMPLE</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>INFO EXAMPLE</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>ABSTRACT EXAMPLE</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> TIP EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> SUCCESS EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> QUESTION EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> WARNING EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> FAILURE EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> DANGER EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> BUG EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> QUOTE EXAMPLE <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"Projects/ProjectPortfolioSite/#10-icons-emojis","title":"10. Icons &amp; Emojis","text":"<pre><code>markdown_extensions:\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n</code></pre> <p>Icon &amp; Emoji Search Engine </p> <pre><code>:fontawesome-regular-laugh-wink:\n</code></pre> <p></p> <p><pre><code>:smile: \n</code></pre> </p>"},{"location":"Projects/ProjectPortfolioSite/#site-publishing","title":"Site Publishing","text":"<p>Finally, after any changes are made to your site, you can merge your local changes back to your GitHub Pages repo to be built and published with the commands \u2026</p> <pre><code>git add . # (1)\ngit commit -m \"Updated Site\" # (2)\ngit push # (3)\n</code></pre> <ol> <li> <p>Stages all new changes made to your site.</p> </li> <li> <p>Gives your push a title that will be visible on GitHub</p> </li> <li> <p>Pushes changes to your GitHub - when prompted, enter your SSH password.</p> </li> </ol> <p>Congrats!</p> <p>You now have built your very own static site with MKdocs and its Material Theme.</p> <p>Wooo   as of 12/01/2021, teddywarner.org is now 100 Commits old!! </p> <p>200 Commits  - 05/02/2022! </p> <p>\u2026 and 300 Commits!  - 06/28/2023! </p> <p>400 Commits  - 09/18/2024! </p> <ol> <li> <p>This is the footnote.\u00a0\u21a9</p> </li> <li> <p>https://squidfunk.github.io/mkdocs-material/reference/lists/#configuration\u00a0\u21a9</p> </li> <li> <p>https://squidfunk.github.io/mkdocs-material/reference/lists/#configuration\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/Quotes/","title":"Quote Receipts","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/Quotes/#quote-receipts","title":"Quote Receipts","text":"Teddy Warner| Fall, 2025 |  19\u201324 minutes QUOTE RECEIPT 2025-10-04 21:48:01 \"Did I really say that?\" Why yes, you did. -Teddy <p>I have some really wonderful friends. They, like I, say many silly things. </p> <p>I wanted some means of capturing all of these quotes for later reference. Or to keep as nice souvenirs of thought.</p> <p>My roommate and I have been going all in on the apartment projects (AIPhone, Cathode Ray Doorbell, StairGuitar\u2122, etc. - I\u2019ll do write-ups on some of these at some point in the future), and I figured to stay in the same vein that my weekend project should attempt to solve my quote attribution problem. I also happened to have an 80mm Thermal Receipt Printer lying around from another project I never got around to finishing.</p> <p>And boom, I now knew how I would be spending my Saturday morning.</p>"},{"location":"Projects/Quotes/#thats-a-quote","title":"\u201cThat\u2019s a Quote.\u201d","text":"<p>The general premise of this build is pretty easy: people in my apartment say silly / interesting / funny things all the time. Upon hearing one of these silly / interesting / funny things, a user should be able to print said thing with little imposition. As such, we\u2019ll need a locally hosted website, of course - A user will hear a quote, open said local website, and then a \u201cquote receipt\u201d will be generated and printed to memoralize that silly / interesting / funny moment for all of eternity.</p> <p>This user flow demands a few things: first, a locally hosted webpage where a user can upload a quote. It\u2019s probably important that this remains local to our apartment network, as I think it provides a nice scope for what quotes are fit to be printed (and so the gimmick doesn\u2019t burn out too quickly). Also, this makes development easier. Second, a printer capable of quickly printing these \u201cquote receipts\u201d. I\u2019ll be fitting this printer with a Raspberrry Pi 5 to handle the webserver hosting / printing.</p>"},{"location":"Projects/Quotes/#receipt-dot-local","title":"Receipt [dot] Local","text":"<p>To start, lets take on this local webserver! For the sake of simplicity, I\u2019ll be sticking to some skeuomorphism and designing a webform to look like a receipt. I started by flashing a fresh copy of Raspberry Pi OS Lite (64-bit) onto an SD card and updating the WiFi credentials. </p> <p>Then I SSH\u2019ed into the fresh RPI OS instance and got to work.</p> <pre><code># SSH into your Pi\nssh pi@raspberrypi.local # Default password is usually 'raspberry'\n\n# Update system\nsudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> <p>A few config bits first:</p> <pre><code># Set timezone\nsudo raspi-config\n\n# Navigate to: Localization Options &gt; Timezone &gt; Select yours\n\n# Change default password (recommended)\npasswd\n</code></pre> <p>Set Hostname to \u2018receipt\u2019 or whatever tickles your fancy, but this allows users to go to \u2018receipt.local\u2019 to upload their quote.</p> <pre><code># Set hostname\nsudo hostnamectl set-hostname receipt\n\n# Update hosts file\nsudo nano /etc/hosts\n\n# Change the line: 127.0.1.1 raspberrypi\n# To: 127.0.1.1 receipt\n# Save: Ctrl+O, Enter, Ctrl+X\n\n# Reboot to apply\nsudo reboot\n</code></pre> <p>After reboot, reconnect with:</p> <pre><code>ssh pi@receipt.local\n</code></pre> <p>Then install Dependencies   <pre><code># Install system packages\nsudo apt install -y python3-pip python3-dev python3-pil libusb-1.0-0-dev avahi-daemon\n\n# Install Python libraries (both user and system-wide for sudo)\npip3 install flask python-escpos pyusb pillow --break-system-packages\nsudo pip3 install flask python-escpos pyusb pillow --break-system-packages\n\n# Enable and start mDNS service\nsudo systemctl enable avahi-daemon\nsudo systemctl start avahi-daemon\n\n# Reboot to ensure everything loads properly\nsudo reboot\n</code></pre></p> <p>Plug in USB thermal printer, run <code>lsusb</code> to get vendor/product ID.</p> <pre><code>lsusb\n</code></pre> <p>Output example:</p> <pre><code>Bus 001 Device 005: ID 0483:5720 STMicroelectronics\n</code></pre> <p>Note: <code>0483:5720</code> \u2192 Vendor=<code>0x0483</code>, Product=<code>0x5720</code></p> <pre><code># Get USB endpoint addresses\nlsusb -v -d 0483:5720 | grep -A 5 \"bEndpointAddress\"\n</code></pre> <p>Output example:</p> <pre><code>bEndpointAddress     0x03  EP 3 OUT\n...\nbEndpointAddress     0x81  EP 1 IN\n</code></pre> <p>Note your values: Vendor ID: <code>0x0483</code>, Product ID: <code>0x5720</code>, OUT Endpoint: <code>0x03</code>, IN Endpoint: <code>0x81</code></p> <p>Then we\u2019ll create a very minimal project structure - I\u2019m keeping this build to two files: a frontend HTML template and a simple Python backend.</p> <pre><code># Create project directory\nmkdir -p ~/receipt-printer/templates\ncd ~/receipt-printer\n\n# Create app.py\nnano app.py\n</code></pre> <p>Paste this content into the new <code>app.py</code> file (update with YOUR vendor/product/endpoint IDs):</p> <pre><code>from flask import Flask, render_template, request, jsonify\nfrom escpos.printer import Usb\nfrom datetime import datetime\nimport textwrap\n\napp = Flask(__name__)\n\n# UPDATE THESE WITH YOUR PRINTER'S VALUES\nVENDOR_ID = 0x0483      # Your vendor ID\nPRODUCT_ID = 0x5720     # Your product ID\nOUT_EP = 0x03           # Your OUT endpoint\nIN_EP = 0x81            # Your IN endpoint\n\ndef print_quote(quote, author=\"Anonymous\"):\n    try:\n        # Initialize printer with correct endpoints\n        p = Usb(VENDOR_ID, PRODUCT_ID, out_ep=OUT_EP, in_ep=IN_EP)\n\n        # Header\n        p.set(align='center', bold=True, width=2, height=2)\n        p.text(\"QUOTE RECEIPT\\n\")\n        p.set(align='center', bold=False, width=1, height=1)\n        p.text(\"=\" * 32 + \"\\n\")\n        p.text(f\"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\\n\")\n        p.text(\"=\" * 32 + \"\\n\\n\")\n\n        # Quote body\n        p.set(align='left', bold=False)\n        wrapped = textwrap.fill(f'\"{quote}\"', width=32)\n        p.text(wrapped + \"\\n\\n\")\n\n        # Attribution\n        p.set(align='right', bold=False)\n        p.text(f\"-- {author}\\n\\n\")\n\n        # Footer\n        p.set(align='center', underline=1)\n        p.text(\"CERTIFIED STUPID\\n\")\n        p.set(underline=0)\n        p.text(\"No refunds. No context.\\n\")\n        p.text(\"Memories printed. Dignity sold.\\n\\n\")\n\n        # QR code (optional)\n        p.qr(\"https://receipt.local\", size=6, center=True)\n        p.text(\"\\n\")\n\n        # Cut\n        p.cut()\n        p.close()\n\n        return True\n\n    except Exception as e:\n        print(f\"Print error: {e}\")\n        return False\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@app.route('/print', methods=['POST'])\ndef print_receipt():\n    data = request.json\n    quote = data.get('quote', '').strip()\n    author = data.get('author', 'Anonymous').strip()\n\n    if not quote:\n        return jsonify({'success': False, 'error': 'Quote cannot be empty'}), 400\n\n    success = print_quote(quote, author)\n\n    if success:\n        return jsonify({'success': True, 'message': 'Receipt printed!'})\n    else:\n        return jsonify({'success': False, 'error': 'Printer error'}), 500\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=80, debug=False)\n</code></pre> <p>Save: <code>Ctrl+O</code>, <code>Enter</code>, <code>Ctrl+X</code></p> <pre><code># Create frontend\nnano templates/index.html\n</code></pre> <p>Paste this:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Quote Receipt Printer&lt;/title&gt;\n    &lt;style&gt;\n        * { \n            margin: 0; \n            padding: 0; \n            box-sizing: border-box; \n        }\n\n        body {\n            font-family: 'Courier New', 'Courier', monospace;\n            background: #ffffff;\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 20px;\n        }\n\n        .receipt {\n            background: #fafafa;\n            border: 1px dashed #999;\n            padding: 30px 20px;\n            max-width: 380px;\n            width: 100%;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        }\n\n        .header {\n            text-align: center;\n            font-size: 1.8em;\n            font-weight: bold;\n            letter-spacing: 2px;\n            margin-bottom: 15px;\n        }\n\n        .separator {\n            text-align: center;\n            margin: 10px 0;\n            color: #666;\n        }\n\n        .timestamp {\n            text-align: center;\n            font-size: 0.9em;\n            color: #666;\n            margin: 10px 0;\n        }\n\n        .quote-section {\n            margin: 20px 0;\n        }\n\n\n        textarea {\n            width: 100%;\n            padding: 10px;\n            border: none;\n            border-bottom: 1px solid #999;\n            background: transparent;\n            font-family: inherit;\n            font-size: 1em;\n            resize: none;\n            min-height: 80px;\n            outline: none;\n        }\n\n        textarea::placeholder {\n            color: #aaa;\n        }\n\n        .author-section {\n            text-align: right;\n            margin: 15px 0;\n        }\n\n        input {\n            width: 200px;\n            padding: 8px;\n            border: none;\n            border-bottom: 1px solid #999;\n            background: transparent;\n            font-family: inherit;\n            font-size: 0.95em;\n            text-align: right;\n            outline: none;\n        }\n\n        input::placeholder {\n            color: #aaa;\n        }\n\n        .footer {\n            text-align: center;\n            margin-top: 20px;\n            padding-top: 15px;\n            border-top: 1px dashed #999;\n        }\n\n        .footer-title {\n            text-decoration: underline;\n            font-weight: bold;\n            margin-bottom: 8px;\n        }\n\n        .footer-text {\n            font-size: 0.85em;\n            color: #666;\n            line-height: 1.4;\n        }\n\n        button {\n            width: 100%;\n            padding: 15px;\n            margin-top: 20px;\n            background: #000;\n            color: #fff;\n            border: none;\n            font-family: inherit;\n            font-size: 1em;\n            font-weight: bold;\n            cursor: pointer;\n            letter-spacing: 1px;\n            transition: background 0.2s;\n        }\n\n        button:hover {\n            background: #333;\n        }\n\n        button:active {\n            background: #555;\n        }\n\n        button:disabled {\n            background: #999;\n            cursor: not-allowed;\n        }\n\n        .message {\n            margin-top: 15px;\n            padding: 12px;\n            text-align: center;\n            font-size: 0.9em;\n            border-radius: 3px;\n        }\n\n        .success {\n            background: #d4edda;\n            color: #155724;\n            border: 1px solid #c3e6cb;\n        }\n\n        .error {\n            background: #f8d7da;\n            color: #721c24;\n            border: 1px solid #f5c6cb;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"receipt\"&gt;\n        &lt;div class=\"header\"&gt;QUOTE RECEIPT&lt;/div&gt;\n        &lt;div class=\"separator\"&gt;================================&lt;/div&gt;\n        &lt;div class=\"timestamp\" id=\"timestamp\"&gt;&lt;/div&gt;\n        &lt;div class=\"separator\"&gt;================================&lt;/div&gt;\n\n        &lt;form id=\"quoteForm\"&gt;\n            &lt;div class=\"quote-section\"&gt;\n                &lt;textarea \n                    id=\"quote\" \n                    placeholder='\"Enter quote here...\"'\n                    required\n                &gt;&lt;/textarea&gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"author-section\"&gt;\n                &lt;input \n                    type=\"text\" \n                    id=\"author\" \n                    placeholder=\"-- Anonymous\"\n                &gt;\n            &lt;/div&gt;\n\n            &lt;div class=\"footer\"&gt;\n                &lt;div class=\"footer-title\"&gt;CERTIFIED STUPID&lt;/div&gt;\n                &lt;div class=\"footer-text\"&gt;\n                    No refunds. No context.&lt;br&gt;\n                    Memories printed. Dignity sold.\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;button type=\"submit\" id=\"submitBtn\"&gt;\n                PRINT RECEIPT\n            &lt;/button&gt;\n        &lt;/form&gt;\n\n        &lt;div id=\"message\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        // Update timestamp every second\n        function updateTimestamp() {\n            const now = new Date();\n            const formatted = now.getFullYear() + '-' + \n                String(now.getMonth() + 1).padStart(2, '0') + '-' + \n                String(now.getDate()).padStart(2, '0') + ' ' +\n                String(now.getHours()).padStart(2, '0') + ':' + \n                String(now.getMinutes()).padStart(2, '0') + ':' + \n                String(now.getSeconds()).padStart(2, '0');\n            document.getElementById('timestamp').textContent = formatted;\n        }\n        updateTimestamp();\n        setInterval(updateTimestamp, 1000);\n\n        const form = document.getElementById('quoteForm');\n        const submitBtn = document.getElementById('submitBtn');\n        const messageDiv = document.getElementById('message');\n\n        form.addEventListener('submit', async (e) =&gt; {\n            e.preventDefault();\n\n            const quote = document.getElementById('quote').value.trim();\n            const authorInput = document.getElementById('author').value.trim();\n            const author = authorInput || 'Anonymous';\n\n            if (!quote) {\n                showMessage('Quote cannot be empty', 'error');\n                return;\n            }\n\n            submitBtn.disabled = true;\n            submitBtn.textContent = 'PRINTING...';\n\n            try {\n                const response = await fetch('/print', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ quote, author })\n                });\n\n                const data = await response.json();\n\n                if (data.success) {\n                    showMessage('Receipt printed successfully', 'success');\n                    form.reset();\n                } else {\n                    showMessage(data.error || 'Printing failed', 'error');\n                }\n            } catch (error) {\n                showMessage('Network error', 'error');\n            } finally {\n                submitBtn.disabled = false;\n                submitBtn.textContent = 'PRINT RECEIPT';\n            }\n        });\n\n        function showMessage(text, type) {\n            messageDiv.textContent = text;\n            messageDiv.className = `message ${type}`;\n            setTimeout(() =&gt; {\n                messageDiv.textContent = '';\n                messageDiv.className = '';\n            }, 3000);\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Save: <code>Ctrl+O</code>, <code>Enter</code>, <code>Ctrl+X</code></p> <p>I\u2019m super happy with how the squedomorphic design came out here - Thermal Printers are somewhat limited in their output (due to binary color option) and as such I was pretty constrined when designing how I wanted the output reciept to look. Once i had a boilerplate from the backend, making this frontend match was easy.</p> <p></p> <p>To get our RPI app up and running with the printer, we need to set some permissions:</p> <pre><code># Add user to printer groups (replace 'pi' with your username if different)\nsudo usermod -a -G lp,dialout $USER\n\n# Create udev rule (UPDATE with YOUR vendor/product IDs)\necho 'SUBSYSTEM==\"usb\", ATTR{idVendor}==\"0483\", ATTR{idProduct}==\"5720\", MODE=\"0666\"' | \\\nsudo tee /etc/udev/rules.d/99-thermal-printer.rules\n\n# Reload udev\nsudo udevadm control --reload-rules\nsudo udevadm trigger\n\n# Reboot for permissions to take effect\nsudo reboot\n</code></pre> <p>\u2026 and then we can test! Just be sure the printer is plugged into power, 80mm Thermal paper is loaded (I used MPRT 5 Rolls 3-1/8\u201d x 230), and the printer is wired to the RPI via USB.</p> <pre><code># Reconnect after reboot\nssh pi@receipt.local\n\n# Navigate to project\ncd ~/receipt-printer\n\n# Test printer with YOUR endpoint values\npython3 &lt;&lt; 'EOF'\nfrom escpos.printer import Usb\ntry:\n    p = Usb(0x0483, 0x5720, out_ep=0x03, in_ep=0x81)\n    p.text('Test Print\\n')\n    p.cut()\n    print(\"\u2713 Printer working!\")\nexcept Exception as e:\n    print(f\"Error: {e}\")\nEOF\n</code></pre> <p>Then we can bring the whole thing together and test the web server.</p> <pre><code>sudo python3 app.py\n</code></pre> <p>You should see:</p> <pre><code>* Running on all addresses (0.0.0.0)\n* Running on http://127.0.0.1:80\n</code></pre> <p>Test from browser: <code>http://receipt.local</code></p> <p>Press <code>Ctrl+C</code> to stop when done testing.</p> <p>As a final step to prep for step 2: Printer Hacking, we\u2019ll set up this app to auto run upon boot.</p> <pre><code># Create systemd service (UPDATE 'User=' with your actual username)\nsudo nano /etc/systemd/system/receipt-printer.service\n</code></pre> <p>Paste (update username in User= and WorkingDirectory= lines):</p> <pre><code>[Unit]\nDescription=Quote Receipt Printer\nAfter=network-online.target avahi-daemon.service\nWants=network-online.target\n\n[Service]\nType=simple\nUser=pi\nWorkingDirectory=/home/pi/receipt-printer\nExecStart=/usr/bin/python3 /home/pi/receipt-printer/app.py\nRestart=always\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Save: <code>Ctrl+O</code>, <code>Enter</code>, <code>Ctrl+X</code></p> <pre><code># Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable receipt-printer.service\nsudo systemctl start receipt-printer.service\n\n# Check status\nsudo systemctl status receipt-printer.service\n\n# Test reboot\nsudo reboot\n</code></pre> <p>After reboot, http://receipt.local should be live automatically!</p> Here's the first print with the Quote Printer"},{"location":"Projects/Quotes/#printer-hacking","title":"Printer Hacking","text":"<p>What fun is a whimsical apartment project if it doesn\u2019t look inconspicuous! To start, I removed the bottom of my miemieyo Thermal Receipt Printer to get a better sense of the space we have to work with by removing the two screws under the printer, as well as the two within the paper tray.</p> <p></p> <p>Unsurprisingly the internals of this receipt printer hardly fill the printer cavity, so retrofitting with our updated internals should be no problem at all. While the base piece that came on the machine has a suprisingly perfect cut out to fit a Raspberry Pi (almost like they were asking for this quote printer to be built), I opted to redesign the base of the printer entirly to allow for proper mounting of the stock printer mainboard, as well as the Raspberry Pi 5 and the LM2596 Buck Converter I\u2019m using to power it.</p> <p>I printed this new base on my Prusa I3 MK3S+, cleaned it up, and then prepared the thermal printer for installation. This primarly involved unmounting and detaching all plugs from the mainboard to prepare to mount it to the new base. Additionally, I used some wire snippers to remove the old mainboard mounts (as pictured below)</p> <p> </p> <p>Then I started mounting components to the 3D printed baseplate, first the raspberry pi, then the buck converter.</p> <p> </p> <p>Before continuing with the mainboard mounting, I wired the - IN terminal of the buck converter to the 24V in connector on the printer mainboard and the + IN to the printer power switch(note polarity below), and then used the potentiometer on the buck converter to set the output voltage to 5V.</p> <p> </p> <p>I wired the +/- 5V output lines from the buck converter to the Raspberry Pi\u2019s GPIO, connected the printer mainboard to the Raspberry Pi via USB, and plugged in the printer mainboard\u2019s power (don\u2019t actually attach this to the wall yet, get everything mounted and closed up first) and then mounted the mainboard to the 3D printed baseplate (you\u2019ll need to plug in all the wires before mounting, its a tight fit).</p> <p></p> <p>I then reattached the printer mainboard wires, </p> <p></p> <p>\u2026 and attached the new base plate to the printer (wiggling all the wires into place to ensure nothing gets caught/clamped), reattached the screws in the paper tray, and finally, the screws under the printer. Amazing - the quote receipt printer is good to go!</p>"},{"location":"Projects/Quotes/#bom","title":"BOM","text":"<p>Building a quote receipt printer of your own is easy enough. Here\u2019s all you need:</p> Qty Description Price Link Notes 1 miemieyo Thermal Receipt Printer 80mm $65.99 Amazon 1 MPRT 5 Rolls Thermal Paper 3-1/8\u201d x 230\u2019 $15.99 Amazon 1 LM2596 Buck Converter $7.99 Amazon 1 Raspberry Pi 5 $79.95 Raspberry Pi Any Pi model should work - I happened to have a RPI5 8GB lying around Some spare wire \u221e Friends that say silly things Free Find My Friends"},{"location":"Projects/Quotes/#quotebook","title":"Quotebook","text":"<p>This thing is so awesome. I\u2019ve had some great fun printing out quotes this weekend and attached a few favorites below. I\u2019ll update this every once in a while as I log more silly things.</p> <p>Also, thermal printers are really wonderful pieces of technology. I was astonished by how quickly these things print, very low latency from silly quote being said to quote receipt in hand. To stress test, I decided to print the entire Bee Movie script.</p> <p>I hung the results like tinsel in my living room.</p> <p></p> <p>p.s. This \u201ci before e except after c\u201d shenanigans really throws me off. Apologies in advance for any \u201creciepts\u201d left in this piece lol.</p> CERTIFIED STUPID        No refunds. No context.       Memories printed. Dignity sold."},{"location":"Projects/SerialUPDI/","title":"UPDI Serial Programming","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/SerialUPDI/#updi-serial-programming","title":"UPDI Serial Programming","text":"Teddy Warner| Summer &amp; Winter, 2021 |  24-31 minutes <p>Many modern small chipsets rely on the Unified Program and Debug Interface (UPDI), a one-wire interface allowing for the changing of fuzes, burning of bootloaders, or uploading of sketches to any AVR Dx-series parts or any modern AVR Microcontrollers. Due to their reliance on the Unified Program and Debug Interface, these parts cannot be programmed with classic ISP style programmers, and thus a UPDI enabled programmer is required. Although UPDI is the only programming option in the case of these parts, the one-wire interface is superior to the four-wire of a classic ISP programmer and allows for quicker programming setup and less cluttered boards due to fewer programming pins. This USB-C UPDI programmer is built with a Ft232rl chip allowing for serial interfacing, and runs alongside the megaTinyCore library witch equips your IDE for serial UPDI programming via a portable python implementation.</p>"},{"location":"Projects/SerialUPDI/#megatinycore-documentation","title":"megaTinyCore Documentation","text":"<p>In short, the megaTinyCore library is \u201cAn Arduino core for the tinyAVR 0-series, 1-series, and now the 2-series\u201d<sup>1</sup>. The megaTinyCore project was created and maintained by SpenceKonde. As mentioned above, the library equips your IDE for UPDI programming via a portable python installation and can be used alongside a handful of different programmer types. The USB-C UPDI Serial programmer documented alter on this page is currently the optimal choice out of these options due to its low component requirement and faster speeds than other programmers. In addition to serial programmers, One can use a 328p based board as a programmer (i.e. an Arduino or any of its clones) via megaTinyCore\u2019s jtag2updi sketch, or a designated microchip programming board or and UPDI programming tool that mimicks any listed above. Dr. Adam Harris, a mentor of mine during my cycle of Fab Academy has a Simple Fab-jtag2UPDI Board project where a 328p based board is used alongside the jtag2UPDI sketch and is a great option when creating an In-Circuit programmer though the library. I manufactured this board during my Electronics Production and continued to use it for the next 16 weeks of the course.</p>"},{"location":"Projects/SerialUPDI/#package-installation","title":"Package Installation","text":"<p>Software Requirement</p> <p>Arduino 1.8.13 is recommended for use with the megaTinyCore library</p> <p>Recent updates to the megaTinyCore library have simplified the installation process significantly. The library relies upon a board package that can be installed via the board manager witch can be installed with 3 simple steps included below<sup>2</sup>.</p> <pre><code>http://drazzy.com/package_drazzy.com_index.json\n</code></pre> <ol> <li>File -&gt; Preferences, enter the above URL in Additional Boards Manager URLs</li> <li>Tools -&gt; Boards -&gt; Boards Manager\u2026</li> <li>Select megaTinyCore by Spence Konde and click \u201cInstall\u201d. For best results, choose the most recent version.</li> </ol>"},{"location":"Projects/SerialUPDI/#jtag2updi-programming","title":"jtag2UPDI Programming","text":"<p>As mentioned prior, jtag2updi is a sketch from the megaTinyCore library, allowing for the use of a 328p-based board (i.e. Arduino or a clone) as an In-Circuit programmer. To begin with, this programming approach, download the latest version of the jtag2udpi sketch via the button below (Code -&gt; Download Zip).</p> <p>Download the Latest jtag2udpi Sketch </p> <p>Extract the contents of this downloaded sketch folder by first unzipping the downloaded folder and next moving the contained sketch folder in the unzipped folder to a separate location. Finally, Rename this sketch folder to jtag2updi, leaving you with a folder similar to the one circled in red in the image below.</p> <p></p> <p>Inside of this jtag2updi folder, navigate to the jtag2UPDI.ino project - circled and highlighted below - and open it in your IDE. </p> <p></p> <p>This will open the jtag2updi project file system, leaving you with a blank jtag2updi sketch followed by multiple file tabs in your IDE (like shown in the picture below).</p> <p></p> <p>You can next upload this sketch to your 328p-based board of choice as you would any other sketch. </p> <p>Tip</p> <p>As a first test to confirm the successful upload of this sketch to your board, hook up an LED to pin 6 of the board. If the board is successfully programmed, the LED will be dimly lit as shown below. This simple test eliminates a potential error while troubleshooting a project, and confirms the programmer\u2019s working condition. </p> <p>Once a board is programmed with the jtag2updi project, it will act as a programmer until the next sketch is uploaded, unless the board\u2019s reset line is cut.</p>"},{"location":"Projects/SerialUPDI/#jtag2updi-usage","title":"jtag2UPDI Usage","text":"<p>To make use of a jtag2updi enabled In-Circuit programmer board, prepare a sketch in your IDE to upload to your desired board. For documentation purposes, I\u2019ll be uploading the simple blink sketch included below to a super simple ATtiny 412 based LED board I made in week 4 of my Fab Academy cycle and documenting it for use with the Arduino IDE.</p> <pre><code>void setup() {\n  pinMode(0, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(0, HIGH); \n  delay(500);\n  digitalWrite(0, LOW); \n  delay(500); \n}\n</code></pre> <p>To upload code to your board via your jtag2updi enabled In-Circuit programmer board \u2026</p> <ol> <li>Wire your board to your jtag2updi In-Circuit Programmer board - UPDI pin of the board to pin 6 of jtag2updi In-Circuit Programmer board with an inline 100-470 ohm resistor running between the UPDI pin and the In-Circuit Programmer, VCC to VCC, and GND to GND</li> <li>Under the Tools menu in the Arduino IDE, change your board to your board\u2019s chipset by navigating to the megaTinyCore board menu via Tools -&gt; Board -&gt; megaTinyCore and then selecting your chip group from the list. </li> <li>Next, specify your chip type under the Chip menu via Tools -&gt; Chip. </li> <li>For use with you jtag2updi In-Circuit Programmer board, change the programmer option to Tools\u2013&gt;Programmer \u2013&gt; jtag2updi</li> <li>Change your COM port to connect via serial to your In-Circuit Programmer board if not already connected</li> <li>Finally, upload your sketch via the Upload Using Programmer button found under the IDE\u2019s Sketch menu - Not with the normal upload button (this will override your programmers jtag2updi sketch if done).</li> </ol> <p>Example</p> <p>Following these steps on my simple ATtiny 412 board yielded the 1/2 second blink example below.   </p> <p>Congrats!</p> <p>You can now program any modern AVR Microcontrollers via UPDI and a jtag2updi enabled 328p-based board. </p>"},{"location":"Projects/SerialUPDI/#serial-programming","title":"Serial Programming","text":"<p>Serial UPDI Programming with megaTinyCore</p> <p>Version 2.2.0 of the megaTinyCore library brings the implementation of a portable python implementation. This installation, based on pymcuprog, allows for a programming speed increase by a factor of 20 when compared to the prior jtag2udpi programming style. With this performance increase in addition to a smaller &amp; cheaper hardware list, Serial UDPI programming with the megaTinyCore library is the most optimal form of programming I\u2019ve used on my boards to date.</p> <p>The serial programming style relies on this prior mentioned portable python installation alongside a USB-Serial adapter acting as the programmer in this case. Though this section of the page will document this programming style via a pre-made USB-Serial adapter (in this case an FTDI chip) and some other hardware bits, please note the USB-C UPDI Serial Programmer board documented later on this page - this board is a set hardware piece for this Serial UPDI programming style, and provides a permanent hardware programming board. To engage the Serial UPDI programming method without a board like this you\u2019ll need the required hardware\u2026</p> <ol> <li>A USB-Serial Adapter - I\u2019ll be using an FTDI FT232 for this documentation, but boards based on the CH340G or the CP210 chips work great as well</li> <li>Some Jumper Wires</li> <li>A Schottky Diode - I tacked some leads to an SMD package (as shown below), but if you can get your hands on a through-hole package, that works great as well.      </li> <li> <p>A 470-ohm Resistor - If creating a UPDI programmable board, incorporate this resistor into your schematic using the pinout below, running the 470-ohm resistor inline to the UPDI pin. Any value between 100 and 1k ohms will do here, but 470 is the optimal value.</p> Target Board Programming Headers<pre><code>      __________________\n-----| UPDI---\\/\\/------&gt;\n-----| Gnd    470 ohms (100 ~ 1k)\n-----| Vcc\n    |__________________\n</code></pre> </li> </ol> <p>If not creating your own board, and there\u2019s no inline UPDI resistor, you\u2019ll need to include this resistor externally. With that said, wiring between your serial adapter and the target device is diagrammed in the schematics below.</p> <ul> <li>VCC of Adapter to VCC of Target</li> <li>GND of Adapter to GND of Target</li> <li>Schottky Diode between the Rx &amp; Tx of Serial Adapter (Cathode to Tx)</li> <li>Rx of Adapter to UPDI of Target - Here include the 470 ohms resistor as needed </li> </ul> Ideal - internal resistor in the adapter - not more than 1k<pre><code>--------------------                                 To Target device\n                DTR|                                  __________________\n    internal    Rx |--------------,------------------| UPDI---\\/\\/------&gt;\n  Tx---/\\/\\/\\---Tx |-------|&lt;|---'          .--------| Gnd    470 ohms (100 ~ 1k)\n    resistor    Vcc|---------------------------------| Vcc\n  typ. 1k       CTS|                     .`          |__________________\n                Gnd|--------------------'             If you make a 3-pin connector, use this pinout\n--------------------\n\nor\n\n--------------------                                 To Target device\n                DTR|     External 470 ohms (100 ~ 1k) __________________\n    internal    Rx |--------------,--\\/\\/------------| UPDI-------------&gt;\n  Tx---/\\/\\/\\---Tx |-------|&lt;|---'          .--------| Gnd\n    resistor    Vcc|---------------------------------| Vcc\n  typ 1k        CTS|                     .`          |__________________\n                Gnd|--------------------'\n--------------------\n</code></pre> Or with no internal resistor on the adapter - as long as the target has one<pre><code>--------------------                                 To Target device\n                DTR|                                  __________________\n       no       Rx |--------------,------------------| UPDI---\\/\\/------&gt;\n    internal    Tx |-------|&lt;|---'          .--------| Gnd    470 ohms (100 ~ 1k)\n    resistor    Vcc|---------------------------------| Vcc\n                CTS|                     .`          |__________________\n                Gnd|--------------------'\n--------------------\n</code></pre> <p>I rigged up the second included schematic on a breadboard as unfortunately the blinky board I\u2019m programming doesn\u2019t have a valid inline resistor I can use. </p> <p> </p> Serial Programmer Setup on a Breadboard"},{"location":"Projects/SerialUPDI/#serial-programmer-usage","title":"Serial Programmer Usage","text":"<p>To program via your USB-Serial setup \u2026</p> <ol> <li>Navigate to the Tools -&gt; Programmer menu and select an iteration of the Serial-UPDI options (Based on upload speeds, the tinyAVR core offers 57600 baud, 230400 baud, and 460800 baud options - thus the different speed settings)</li> <li>Then, under Tools -&gt; Port select the port connected to your USB-Serial adapter, if not already selected</li> <li>Finally, upload your sketch via the Upload button and watch as your board is programmed at lightning speeds!</li> </ol> <p>Note - this serial programmer setup does not give you a serial monitor</p> <p>You\u2019ll need to connect a serial adapter the normal way for that. The later documented USB-C UPDI Serial Programmer &amp; ftdi2updi boards provide a switching feature between a serial programming and serial monitoring mode, allowing for all programming and monitoring work to be done without rework of connections. Be sure to check out the specific USB-C UPDI Serial Programmer usage section for use of this feature.</p> <p>Example</p> <p>For this example, I modified my prior used blink sketch to run a 5-second delay as opposed to the prior 0.5 seconds\u2026</p> <pre><code>void setup() {\n  pinMode(0, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(0, HIGH); \n  delay(5000);\n  digitalWrite(0, LOW); \n  delay(5000); \n}\n</code></pre> <p>I uploaded this via the three-step process listed above, yielding the successful results below.</p> <p> </p> <p>Congrats!</p> <p>You can now program any modern AVR Microcontrollers via UPDI with a simple USB-Serial adapter with a speed increase by a factor of twenty when compared with the prior jtag2updi method.</p>"},{"location":"Projects/SerialUPDI/#updi-serial-programmer-manufacturing","title":"UPDI Serial Programmer Manufacturing","text":"<p>I made countless PCBs during my cycle of the Fab Academy, one of the first being a tool to program the rest, an In-Circuit Programmer. Being one of the first boards I fabricated myself, from the PCB milling to soldering &amp; stuffing, I hadn\u2019t yet taken up the practice of designing my boards, and for this assignment, fabricated the In-Circuit Programmer design of one of my mentors, Dr. Adam Harris. This board is a specialized Arduino-like board, running on an ATMega 328p with a programmer sketch provided by the megaTinyCore library. </p> <p>Project Origins</p> <p>The In-Circuit Programmer I fabricated in Fab Academy\u2019s operation is great, but due to new updates in the megaTinyCore library, the process can be optimized for faster speeds, and the board size and component requirements can be reduced. This board marks my first steps into the world of multi-layered PCB design and fabrication, a process I\u2019m super pumped to pick up and apply to future projects.</p> <p>The USB-C UPDI Programmer is a specialized piece of hardware for use with the prior discussed serial programming method and has a couple of advantages over rigging a programmer up on a breadboard. A permanent piece of the hardware enables the serial programming method to require a bit less setup, once the board has been made. Following that, this board includes \u201cmodes\u201d, allowing switching between serial programming and monitoring functions. When rigging a serial programmer up via a USB-serial adapter as documented prior, you cannot monitor serial from the board at the same time, but instead are required to require the board to the USB-serial adapter. The switching of \u201cmodes\u201d on this programmer eliminates this extra hassle, handling all the required connections at the flip of a switch located on the board\u2019s underside.</p>"},{"location":"Projects/SerialUPDI/#usb-c-updi-design","title":"USB-C UPDI Design","text":"<p>It was this elimination of hassle that pushed me to create this piece of hardware, yielding a simple workflow when serial programming. The USB-C UPDI Serial Programmer is based on the FT232RL<sup>3</sup> IC, handling the USB protocol and USB to serial data transfer on the programmer. </p> <p>The FT232RL is broken out following the same wiring principals diagrammed in the prior serial programming documentation, converting the IC\u2019s Rx and Tx lines to a UPDI line, routed to a programming pin. Just before this Rx and Tx junction, a Double-Pole Double-Through switch allows for the switching of this conversion to UPDI to straightforward Rx and Tx lines, routed each to their corresponding pin. Thus, the programmer board includes a UPDI, Rx, and Tx output pin, in addition to a VCC and GND line. This 5 pin programming pinout can be mimicked on any board containing a AVR Microcontroller, allowing for programming and monitoring functions to be switched without reworking connections between the programmer and board.</p> <p> </p> USB-C UPDI Programmer Eagle Schematic <p>Then came the nesting process. Being my first double-sided board in Eagle, it took some work to get used to the use of vias between sides, but eventually, I worked out the process of changing Via\u2019s drill class through Eagle\u2019s Change -&gt; Drill tool. I ended up using 0.6mm rivets for this board\u2019s vias, using 8 on the board in total. I nested bards on the board, including both the FT232RL and the USB-C female adapter on the top side, along with some smoothing capacitors, and on the bottom, the UPDI programming component array, as well as the DPDT switch.</p> <p></p> <p></p> <p> </p> USB-C UPDI Programmer Eagle Board <p>The nesting of the two highest pinout parts on the board\u2019s topside inspired my next experiment with this board, Solder Paste Stencil making. Although I feel pretty confident in my SMD soldering skills, soldering pads this small wouldn\u2019t only be a hassle, it would also be tedious time waste, and thus I settled on a solder paste stencil approach for the boards topside, while hand soldering the bottom half. I exported the Tcream layer of my programmer board from Eagle as a .pdf for cutting of the stencil from cardstock on a Epliog Fusion Pro 48 laser.</p> <p> </p> Tcream board layer in Eagle <p>Bill of Matierals - USB-C UPDI</p> Qty. Part Cost URL x1 SMD DPDT Switch $1.50 link x1 CDBM1100-G $0.39 link x1 470 ohm SMD Resistor $0.10 link x1 1.5k ohm SMD Resistor $0.10 link x1 100nf SMD Cap $0.18 link x1 1uf SMD Cap $0.10 link x1 DX07S016JA1R1500 $1.59 link x1 FT232RL $4.19 link x11 Header Pins $0.14 link x1 Copper PCB Blank $0.70 link <p>Total Cost- $8.99</p>"},{"location":"Projects/SerialUPDI/#ftdi2updi-design","title":"ftdi2updi Design","text":"<p>In addition to the prior USB-C UPDI Serial Programmer board, I created an alternative hardware programmer that makes use of a pre-existing FTDI chip, enabling it with the same switching functions feature as the prior board. This provided a workaround to 2021\u2019s silicone shortage, as due to backed-up supply chains, I wasn\u2019t able to get my hands on the FT232RL right away.</p> <p>The board\u2019s schematic is a cloned iteration of the prior programmer, but with the USB-C &amp; FT232RL components removed, and replaced with headers for connection to an FTDI adapter, yielding the schematic below.</p> <p> </p> First Iteration ftdi2updi Programmer Eagle Schematic <p>I was compelled to expand on the original shape of an FTDI serial adapter for this board, as it expands on the functionality of the adapter itself. I used Inkscape to create the board shape, allowing for meshing with an FTDI serial adapter, with the board aligning two of the sides of the adapter and then imported this board shape into Eagle via an ulp as documented on my Fab Academy Final Project page. I then nested the components on both sides of the board, aligning the FTDI connection pins allowing for proper seating of the FTDI serial adapter with the board.</p> <p></p> <p></p> <p> </p> First Iteration ftdi2updi Programmer Eagle Board <p>Bill of Matierals - ftdi2updi</p> Qty. Part Cost URL x1 SMD DPDT Switch $1.50 link x1 CDBM1100-G $0.39 link x1 470 ohm SMD Resistor $0.10 link x11 Header Pins $0.14 link x1 Copper PCB Blank $0.70 link x1 FTDI Serial Adapter $14.95 link <p>Total Cost (W/out FTDI)- $2.83 </p> <p>Final Cost- $17.78</p>"},{"location":"Projects/SerialUPDI/#fabrication-testing","title":"Fabrication &amp; Testing","text":""},{"location":"Projects/SerialUPDI/#ftdi2updi","title":"ftdi2updi","text":"<p>I milled my boards with a Bantam PCB mill and its Bantam Tools Desktop Milling Machine Software. The software handles all toolpath generation from my Eagle board file, and conveniently, when paired with Bantam\u2019s PCB placement bracket, also handles the double-sided board milling process via a toggle switch in the interface. I followed the same milling process I have documented on my week 4 Fab Academy page, however after the top-side traces and holes were milled, I flipped the copper stock, aligning to the right-hand corner of the PCB alignment bracket as opposed to the left, and toggled the board to its bottom side in the Bantam Tools Desktop Milling Machine Software. With the stock realigned, I repeated the same milling process for the bottom side of the board. This whole process is showcased in this view from Bantam.</p> <p>I used a 0.005\u201d PCB engraving bit for the ftdi2updi\u2019s traces, and a 1/32\u201d for its holes and outlines, yielding the milled results below.</p> <p> </p> <p>After the milling, I washed off my board with some soap and water. The Bantam Tools Desktop Milling Machine Software makes the milling of double-sided boards super straightforward, not much harder than a single-sided PCB, however, the boards require the extra step of riveting vias between both sides of the board before soldering. This article on PCB Rivets from the Fab Docs walks through the process down into a couple of steps.</p> <p>First the via has to be inserted into its corresponding hole, I used 0.6mm vias here. Then I used a V-Shaped nail to chamfer the top of the via and finally pressed it flush with a flat press, each step shown in the three assets/images below.</p> <p> </p> <p>Finally, to ensure a proper connection, I soldered over each side of the via and repeated this process for all four of the board\u2019s vias.</p> <p> </p> <p>I finished the stuffing and soldering of this board, a simple enough process due to the small component size. </p> <p>Note</p> <p>The board that is being documented here is an early iteration of the ftdi2updi and contains an extra resistor, and thus your final board may not look exactly like the ones on this page until the Programmer Usage section.</p> <p> </p> <p>I ran two tests on the ftdi2updi, one proving each of the board\u2019s functions. </p> <p>Programming Test</p> <p>Beginning with its programming function, I uploaded a modified version of the same blink test sketch used above to my simple LED board \u2026</p> <pre><code>void setup() {\n  pinMode(0, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(0, HIGH); \n  Serial.println('ON')\n  delay(5000);\n  digitalWrite(0, LOW); \n  Serial.println('OFF')\n  delay(5000); \n}\n</code></pre> <p>I uploaded this via the Programmer Usage process documented in the corresponding section below. The first upload was successful at a medium (230400) baudrate. Then I uploaded the test, and repeated it at the highest (TURBO 4.5v + 460800) baudrate, yielding the successful results below. </p> <p> </p> <p>Note</p> <p>The ftdi2updi serial adapter meshing headers were reversed in this iteration, and thus I attached the serial adapter upsidedown for this test, the proper orientation as outlined in the following Programmer Usage section.</p> <p>Serial Monitoring Test</p> <p>Next, I switched the programmer to its monitoring mode and hooked it up to Arduino RX &amp; TX pins, shown below. Unfortunately, my simple LED board doesn\u2019t have serial communication pins, and thus this Arduino was my next best testing option.</p> <p></p> <p>I uploaded this super simple serial print sketch to the Arduino \u2026</p> <pre><code>void setup(){\n  Serial.begin(9600);\n}\n\nvoid loop(){\n  Serial.println(\"Hello World\");\n  delay(5000);\n}\n</code></pre> <p>and then opened the Arduino IDE\u2019s serial monitor on my ftdi2updi port, which successfully read the serial output printed, shown below - and also was able to transmit via serial, shown by the Arduinos receiving LED. </p> <p> </p> <p>Although this first iteration of the ftdi2updi worked, there were a couple of design flaws (Noted above) I\u2019ve flatted out in later versions including - a reversed FTDI header, oversized vias, an unnecessary 1k resistor, and improper meshing with an existing FTDI serial adapter. The final version of this programmer (and its CAM files) can be accessed in the repo linked by the download button at the bottom of the Fabrication &amp; Testing section. Use this version as refrence whilst fabricating your own board.</p> <p>I ordered a couple of these final iteration boards from a PCB fab \u2026</p> <p> </p> <p>Which turned out incredible. The Gerber files for these boards are included in the Repo linked via the download button at the bottom of the Fabrication &amp; Testing section, along with an Eagle board file with silkscreen decals instead of milled ones. I soldered the components to this board, a process made even easier by the already plated vias, and lack of need to insert my own.</p> <p> </p> ftdi2updi Front and Back <p>Download the FTDI2UPDI Files </p>"},{"location":"Projects/SerialUPDI/#usb-c-updi","title":"USB-C UPDI","text":"<p>Pending Compleation</p> <p>As mentioned prior, due to 2021\u2019s supply chain limitations, I cannot currently get my hands on an FT232RL, and thus, for now, the fabrication &amp; testing sections will only include my ftdi2upid board. This section will be updated by future me once I can get an FT232RL.</p> <p>This USB-C UPDI Programmer Board is not yet complete</p> <p>Although you can download its files, the board is still in development and may not function properly. Again, this section will be updated upon its completion.</p> <p> </p> <ul> <li>Process Type - Vector</li> <li>Speed - 100.0%</li> <li>Power - 19.0%</li> <li>Frequency - 6.0%</li> </ul> <p></p> <p></p> <p> </p> <p> </p> <p> </p> <p>Download the USB-C UPDI Files </p>"},{"location":"Projects/SerialUPDI/#programmer-usage","title":"Programmer Usage","text":"<p>Serial programming with the megaTinyCore library is incredibly straightforward, and when pair with the switching functionality of both of my hardware programmers, the process is streamlined. I\u2019ll be using a final iteration ftdi2updi board for this Programmer Usage documentation, however, these steps will work for either programmer style included on this page, regardless of fabrication technique.</p> <p>Both Serial UPDI programmers rely on the prior documented megaTinyCore library, which must be installed for programmer usage. This process is outlined in the Package Installation section of this page.</p>"},{"location":"Projects/SerialUPDI/#programming","title":"Programming","text":"<p>To use the UPDI programming function, toggle the programmers switch to UPDI as shown below, and then connect UPDI and GND lines to their corresponding pins. Here you can also run a VCC line to your target board, which provides 5v, shown in the wiring below. </p> <p>Note</p> <p>Connecting serial data lines here is totally ok, as the switch disconnects them from communication when in programming mode. The wiring shown here is just the required connections for UPDI programming.</p> <p> </p> Switched to Progamming Mode <p> </p> Minimum Wiring for UPDI Programming <p>Once connections are made between the programmer and the target board, you must configure your target board in your IDE. For this documentation, I\u2019ll continue using the Arduino IDE, however other IDEs with the megaTinyCore installed can be used for this (I may do some tests with PlatformIO in the future, and will update this page accordingly). </p> <p>First, you must select your target board\u2019s microcontroller by navigating to \u2026</p> <pre><code>Tools &gt; Board &gt; megaTinyCore\n</code></pre> <p>and then selecting your microcontroller from the list, shown in the image below.</p> <p></p> <p>Next, connect your programmer to your computer via a serial cable and, select your serial port by navigating to \u2026</p> <pre><code>Tools &gt; Port\n</code></pre> <p>and then select the serial port your programmer board is connected to (In my case this port was COM11 - shown below). If you\u2019re on windows, you can find this connection on Device Manager before your selection in the IDE.</p> <p></p> <p>Finally, select your programming style. For all programmers documented on this page, the Serial UPDI w/ 4.7k resistor or diode series of styles are used, and you can select between three baudrate/speed options (highlighted in the image below) \u2026</p> <ul> <li>SLOW (57600 baud)</li> <li>(230400 baud)</li> <li>(TURBO 4.5v + 460800 baud)</li> </ul> <p></p>"},{"location":"Projects/SerialUPDI/#monitoring","title":"Monitoring","text":"<p>To use the serial monitoring function, toggle the programmers switch to Serial as shown below, and then connect Transmitting and Receiving Data lines as well as GND to their corresponding pins. Keep in Mind RX and TX lines must be switched between the programmer board and the target, with Transmitting of one going to Receiving of the other and vise versa. Here, as prior, you can also run a VCC line to your target board, which provides 5v. </p> <p>Note</p> <p>Connecting the UPDI line here is totally ok, as the switch disconnects it from communication when in monitoring mode. The wiring shown here is just the required connections for Serial monitoring.</p> <p> </p> Switched to Monitoring Mode <p> </p> Minimum Wiring for Serial Monitoring <p>To begin serial monitoring through the programmer in the Arduino IDE, first, ensure your programmer is connected to your computer via a serial cable, and the proper boart is selected in the IDE (as done in the prior programming section - and highlighted below). Then navigate to \u2026</p> <pre><code>Tools &gt; Serial Monitor \n</code></pre> <p>as selected in the picture below</p> <p></p> <p>This will open the IDE\u2019s serial terminal, where incoming serial data is printed, and outgoing data can be transmitted via the input at the top of the window. I wired a programmer to a simple \u201cHello World\u201d printing Arduino, yielding the received results below.</p> <p></p> <p>Congrats!</p> <p>You now know the methods to UPDI programming with the megaTinyCore library, and may have a cool hardware programmer to show for it .</p> <ol> <li> <p>https://github.com/SpenceKonde/megaTinyCore\u00a0\u21a9</p> </li> <li> <p>https://github.com/SpenceKonde/megaTinyCore/blob/master/Installation.md\u00a0\u21a9</p> </li> <li> <p>https://drive.google.com/file/d/1sXxm9A5GLxVPGFNDkNBzLakp-TWlVKT2/view\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/VonNiemannProbe/","title":"Von Niemann Probe","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/VonNiemannProbe/#von-niemann-probe","title":"Von Niemann Probe","text":"Teddy Warner| Winter, 2023 |  46\u201358 minutes <p>An AVR-based Bluetooth telegraphing shoe insole that lets you play chess in the way Hans Niemann has been accused!</p> <p>Project Sponsor</p> <p> The development of the Von Niemann Probe was made possible by PCBWay, who provided the fabrication of the probe\u2019s main board and nylon insole. Be sure to check out PCBWay.com for all your PCB prototyping, assembly, design, CNC, and 3D printing needs! Thank you to the wonderful folks at PCBWay for sponsoring this project!</p> <p>On September 4, 2022, 19-year-old rising chess superstar, Grandmaster Hans Moke Niemann, shocked the chess world when he ended the 8-time World Champion, and arguably the greatest player in world history, Magnus Carlsen\u2019s unprecedented 53-game win streak at the Sinquefield Cup in St. Louis, Missouri. Niemann added insult to injury by accomplishing this as the lowest-ranked player in the tournament while playing with the black pieces, which possess a slight, but crucially important, disadvantage at the highest levels of competition. </p> <p>Soon after his loss, Carlsen withdrew from the Sinquefield Cup without explanation, a bizarre occurrence due to the remaining six rounds in the tournament. While chess enthusiasts on the internet grappled with possible reasons for Carlsen\u2019s withdrawal, Carlsen posted the tweet below, depicting Portuguese football manager Jos\u00e9 Mourinho saying \u201cIf I speak I am in big trouble\u201d, a brief innuendo to the accusations to come.</p> <p>I've withdrawn from the tournament. I've always enjoyed playing in the @STLChessClub, and hope to be back in the future https://t.co/YFSpl8er3u</p>\u2014 Magnus Carlsen (@MagnusCarlsen) September 5, 2022 <p>I've withdrawn from the tournament. I've always enjoyed playing in the @STLChessClub, and hope to be back in the future https://t.co/YFSpl8er3u</p>\u2014 Magnus Carlsen (@MagnusCarlsen) September 5, 2022 <p>Carlsen\u2019s message drove many chess fans around the globe quickly began to lob accusations of foul play at Niemann, who has had a history of cheating in online games, and speculate on how he could have cheated in an over-the-board match. A theory that Niemann used a wearable device to relay computer-generated moves was quickly popularized and became incredibly popular amongst chess fans and the broader internet. Despite the internet\u2019s suspicions, no clear accusations were placed, nor did any solid evidence surface. Yet, on September 8th, 2022, Chess.com released the tweet seen below, confirming it had removed Hans Moke Niemann from its user base for cheating.</p> <p>pic.twitter.com/sFMrmocLcS</p>\u2014 Chess.com (@chesscom) September 8, 2022 <p>pic.twitter.com/sFMrmocLcS</p>\u2014 Chess.com (@chesscom) September 8, 2022 <p>These direct allegations from Chess.com spurred further allegations against Niemann, as well as his confession to cheating on two separate occasions, both in online games, once at age 12 and another at 16. Yet, Niemann denied ever cheating over the board, even offering to \u201cstrip fully naked\u201d<sup>1</sup> or \u201cto play in a closed box with zero electronic transmission\u201d<sup>1</sup> to prove his innocence. </p> <p>To only further the drama, on Monday, September 26, 2022, the pair were re-matched in an online tournament in which Carlsen resigned after playing a single move. Later that night, Carlsen released his open accusations against Niemann claiming he believes that \u201cNiemann has cheated more \u2014 and more recently \u2014 than he has publicly admitted.\u201d<sup>2</sup> Carlsen claims he derived his initial suspicions form Niemann\u2019s rapid rise through the chess ranks. For reference, Niemann surged from being approximately 800 in the world, to within the top 50 over the 20 months leading up to the Sinquefield Cup. GM Hikaru Nakamura describes this rise as \u201cunprecedented\u201d<sup>3</sup> and Chess.com claims that Niemann is the \u201cfastest rising top player \u2026 in modern recorded history\u201d<sup>4</sup>, yet others find it comparable to top junior ranked players. Carlsen outline in his formal accusation (found in the tweet below) that Niemann \u201cwasn\u2019t tense or even fully concentrating\u201d<sup>2</sup> while outplaying him using the black pieces \u201cin a way I think only a handful of players can do\u201d<sup>2</sup> during the tournament.</p> <p>My statement regarding the last few weeks. pic.twitter.com/KY34DbcjLo</p>\u2014 Magnus Carlsen (@MagnusCarlsen) September 26, 2022 <p>My statement regarding the last few weeks. pic.twitter.com/KY34DbcjLo</p>\u2014 Magnus Carlsen (@MagnusCarlsen) September 26, 2022 <p>The implications of such an unprecedented accusation against a player at the GM (Grandmaster) level are highly slanderous. Grandmaster Nigel Short notes that cheating at this level of chess is exceptionally rare, as any proven allegations would end a player\u2019s career. GM Short told the BBC \u201cI think in the absence of any evidence, statement or anything, then this is a very unfortunate way to go about things. It\u2019s death by innuendo.\u201d<sup>3</sup> Furthering GM Short\u2019s skepticism, Professor Kenneth Regan, widely considered to be the world\u2019s leading expert on chess cheating, took it upon himself to analyze Niemann\u2019s games and found no evidence of cheating. </p> <p>Naturally, Niemann isn\u2019t taking kindly to these slanderous accusations, and has filed a federal lawsuit accusing Carlsen of \u201cmaliciously colluding with others to defame [him] and ruin his career.\u201d<sup>5</sup> Niemann is after at least $100 Million in damages from defendants Carlsen, his company Play Magnus Group, the online platform Chess.com and its leader, Danny Rensch, as well as grandmaster Hikaru Nakamura. The court filing, found below, accuses GM Nakamura and Chess.com of bolstering Carlsen\u2019s \u201cegregious\u201d claims through their platforms.</p> <p>Niemann\u2019s counterattack hasn\u2019t ended in his pursuit of reparations, Niemann claims Carlsen couldn\u2019t handle losing to him, implying through his court filing that Carlsen\u2019s actions further support his notorious \u201cinability to cope with defeat.\u201d<sup>6</sup> The court filing states that Carlsen\u2019s actions were taken in an attempt to solidify his status as \u201cking of chess\u201d<sup>6</sup> so he could complete his company\u2019s buyout by Chess.com - a $82.9 million acquisition.<sup>7</sup> </p> <p>Niemann\u2019s victory over the world champion, \u201cshould have propelled Niemann\u2019s career to the next level and allowed him to continue realizing his enormous potential as the next great American chess player.\u201d<sup>6</sup> Yet, \u201cUnbeknownst to Niemann at the time, Defendants would do whatever it took to ensure that this would never happen.\u201d<sup>6</sup></p> <p>It\u2019s worth mentioning again that Niemann has publically admitted to cheating with aid from electronic devices in online matches, once at age 12 and again at age 16. Niemann referred to one of these instances as \u201can absolutely ridiculous mistake\u201d<sup>8</sup>, while maintaining that he had never cheated in a tournament with prize money. </p> <p>A couple of weeks after their initial accusations, Chess.com released a formal, 72-page report (found below) outlining an investigation into Niemann\u2019s play, and alleging that Niemann has likely cheated with electronic aid in more than 100 games, and as recently as 2020, including in matches where money was on the line. The magnitude of Niemann\u2019s alleged cheating scandal, as presented in Chess.com\u2019s report, proves to be much larger and longer-lasting than Niemann publically admitted. Chess.com\u2019s investigation relied on a variety of analytical tools to compare the moves of Niemann to those recommended by chess engines, and noted \u201cmany remarkable signals and unusual patterns in Hans\u2019 path as a player.\u201d<sup>4</sup> The site claims that \u201cwhile [they] don\u2019t doubt that Hans is a talented player, we note that his results are statistically extraordinary\u201d<sup>4</sup>, and their investigation into Niemann\u2019s gameplay has uncovered \u201cblatant cheating\u201d.<sup>4</sup> The report states that Niemann privately confessed to these allegations and that his Chess.com account was subsequently closed in 2020.</p> <p>In a private letter to Niemann, Chess.com\u2019s Chief Chess Officer, Danny Rechsch writes \u201cWe are prepared to present strong statistical evidence that confirms each of those cases above, as well as clear \u2018toggling\u2019 vs \u2018non-toggling\u2019 evidence, where you perform much better while toggling to a different screen during your moves\u201d.<sup>4</sup> While the report outlines that Chess.com has historically treated bans as a private matter, the ongoing accusations and Niemann\u2019s ban from the site\u2019s Global Championship spurred the platform to provide the investigation that provided justification for their decisions. </p> <p>While this evidence against Niemann appears to be overwhelming, it\u2019s important to remember that the Sinquefield Cup is an over-the-board tournament. Cheating online and over the board are two entirely separate entities, no amount of online cheating in the world provides sufficient reason to accuse Hans of over-the-board cheating, as the act itself is a different task that would require extreme preparation to achieve. Thus, in face of a lack of evidence to support over-the-board cheating allegations against Niemann, the Von Niemann Probe was born. In an attempt to further the investigation into this scandal, we developed an AVR-based Bluetooth telegraphing shoe insole to test the feasibility of creating and using an over-the-board chess cheating aid.</p> <p>Cheating in Chess</p> <p>Cheating in chess, whether online or over the board, is wrong and ruins the game for everyone. This project has been published to showcase the possibility of such a device\u2019s existence/use, and should not be recreated with the intent of using it for genuine foul play.</p> <p>Name Orgins</p> <p>The Von Niemann Probe is named after a theoretical self-replicating space probe known as the Von Neumann Probe, named after legendary 20th century Hungarian-American mathematician John Von Neumann. The Von Neumann Probe is regarded as the optimal way to explore the cosmos, as it can mine asteroids and leverage the exponential growth of its progeny to more efficiently visit star systems. And, coincidentally, probes are also medical devices that can be used to explore one\u2019s bowels. Thus, we settled on naming our device the Von Niemann Probe.</p> <p>Von Niemann Probe Repository </p>"},{"location":"Projects/VonNiemannProbe/#telegraph-design","title":"Telegraph Design","text":""},{"location":"Projects/VonNiemannProbe/#pcb-design-integration","title":"PCB Design &amp; Integration","text":"<p>At the heart of the Von Niemann Probe lies an AVR ATtiny 412-based Bluetooth telegraph. This PCB is capable of interpreting Bluetooth serial data from our chess engine (see Step 3), and translating the signal to pulses of a vibration motor. Before starting any PCB design work in Autodesk EAGLE, I took some time to write out these expectations for the systems operating principle and then began the PCB schematic. The VNP mainboard is a barebones ATtiny 412 setup, including voltage regulation and smoothing capacitors, as well as headers for connection to a Bluetooth module, vibration motor, and battery power.</p> <p>The schematic includes headers for an HC-06, with serial connections to the ATTiny 412, and a shared power line with both the IC and Vibration Motor. This vibration motor is wired both to common GND on the PCB, as well as to Digital Pin 2, allowing the IC to pulse the motor to convey moves in morse code.</p> <p></p> <p>With this schematic done, I moved on to generating my final board file. The PCB is built around the rectangular nature of the HC-06 Bluetooth module - one of these modules is placed in the center of the PCB, allowing for an as-compact-as-possible footprint ideal for fitting in the VNP\u2019s discrete insole body (see Step 2). Just above the HC-06 module lies the ATtiny 412 circuit and UPDI programming pins, as well as a cutout and mounting points for the telegraph\u2019s vibration motor. The entire PCB is designed to be mounted inside the VNP insole with M3 screws and has been designed to maintain a large, shared surface area with the 3D-printed insole to ensure the transfer of vibration from the telegraph.</p> <p></p>"},{"location":"Projects/VonNiemannProbe/#parametric-shoe-insole","title":"Parametric Shoe Insole","text":"<p>To prove the feasibility of the accusations placed against Hans Niemann, the Von Niemann Probe (VNP) must be robust enough to see consistent use, while remaining discrete enough to not be detected. With this in mind, we selected to place our Bluetooth telegraph inside the body of a parametric shoe insole. The VNP was designed in Autodesk\u2019s Fusion 360, and makes heavy use of the software\u2019s Parametric Engine, allowing a custom insole to be generated for all foot sizes. Using the shoe size standards found in the table below, an insole may be generated to fit your exact foot dimensions. Note - the sizes included in the table below are Mens, as that is the style of shoe both Jack and I wear - be sure to convert your shoe size accordingly.</p> <p></p> US Size UK Size European Size Japanese Size Length (S<sub>L</sub>) Width (S<sub>MW</sub>) 6 5.5 39 25 23.5cm 8.9cm 6.5 6 39/40 25.5 24.1cm 9cm 7 6.5 40 26 24.4cm 9.2cm 7.5 7 40/41 26.5 24.8cm 9.4cm 8 7.5 41 27 25.4cm 9.5cm 8.5 8 41/42 27.5 25.7cm 9.7cm 9 8.5 42 28 26cm 9.8cm 9.5 9 42/43 28.5 26.7cm 10cm 10 9.5 43 29 27cm 10.2cm 10.5 10 43/44 29.5 27.3cm 10.3cm 11 10.5 44 30 28.9cm 10.5cm 11.5 11 44/45 31 28.3cm 10.6cm 12 11.5 45 32 28.6cm 10.8cm 12.5 12 45/46 29.2cm 11cm 13 12.5 46 29.5cm 11.1cm 13.5 13 46/47 30.2cm 11.3cm 14 13.5 47 31cm 11.4cm 14.5 14 47/48 31cm 11.6cm 15 14.5 48 31.4cm 11.7cm <p></p> <p>A custom insole will be generated after updating the model with your foot Length (S<sub>L</sub>) &amp; Width (S<sub>MW</sub>) via Fusion\u2019s Change Parameters tool. Paste in your foot length (S<sub>L</sub>) in the InsoleLegnth expression input, and repeat with your foot width (S<sub>MW</sub>) and the InsoleWidth expression input.</p> <p></p> <p>After establishing the model\u2019s parameters and extruding a basic shape, I drafted the insole\u2019s outer edge to allow the insole to fit the angled inner walls of shoes, before using Fusion 360\u2019s Surface workspace to ad a 3D profile to the top of the insole.</p> <p> </p> <p>The insole consists of two main parts, the body which is the bulk of the insole itself, and the lid, which screws to the bottom of the body, covering the electronics compartment. The body of the insole consists of mounting points for the main PCB, as well as a 1000mah LiPo battery, a USB-C LiPo charging board, a power switch, and a 3.3v to 5v boost converter. The lid not only hides the VNP\u2019s electronics system from sight but also redistributes the load placed upon the insole when a user is standing on it.  </p> <p></p>"},{"location":"Projects/VonNiemannProbe/#chess-engine","title":"Chess Engine","text":"<p>The Von Niemann Probe is useless without a competent artificial intelligence running the show behind the scenes, obviously requiring a hefty amount of code to get it to work properly. I decided to build the brains around Stockfish, a famous chess engine that already has a functioning Python integration and also happens to be the highest-rated engine at the time of writing. For reference, the engine plays at a 4000 level, while the current highest-rated player, Magnus Carlsen, is currently sitting at about 3200. Safe to say, Stockfish is more than sufficient for the players our insole will encounter who are obviously considerably worse than Carlsen.</p> <p>Python Dependencies</p> <p>Various Python dependencies are needed to run the chess engine script, but overall the installation is pretty lightweight. Install commands for all Python dependencies are below, any release past Python 3.7 will work.</p> <pre><code>pip install regex\npip install python-chess\n</code></pre>"},{"location":"Projects/VonNiemannProbe/#downloading-configuring-stockfish","title":"Downloading &amp; Configuring Stockfish","text":"<p>First, I downloaded Stockfish and extracted it locally on my Windows PC. I used Version 15 in this project. A more current version can be downloaded from stockfishchess.org or use this permanent download link of the version that I used during development.</p> <p>Next, I researched the Stockfish Python module and integrated it into a continuous loop in Python that would allow it to play games repeatedly without requiring the relaunching of the code. The module is pretty simple to instantiate, but it does feature a few optional parameters that can regulate its strength and how much hardware it occupies locally.</p> <pre><code>stockfishPath = \"C:/\u2026\" #replace with the path to your Stockfish exe. \n#Note - the path may only contain forward slashes, no backslashes.\n</code></pre> <p>I began by adding a path variable to my Python program that stores the local path of the Stockfish installation. The path can be found by navigating to the folder that stores Stockfish and finding the .exe file inside of the folder. I then placed this path into the variable, making sure to replace the backslashes that windows copies with for forward slashes. The code will not run with backslashes.</p> <pre><code>fish = Stockfish(r\"{0}\".format(stockfishPath),\ndepth=18, parameters={\"Threads\": 4, \"Hash\": 256, \"UCI_LimitStrength\": \"false\"}) #stockfish object declaration, can regulate strength\n\nprint(\"WDL Accepted \" + str(fish.does_current_engine_version_have_wdl_option()))\n</code></pre> <p>I then configured Stockfish inside of the program. The above snippet instantiates stockfish, creating an object called \u201cfish\u201d that can be called using the Python Stockfish module.</p> <pre><code>print(\"Board State \" + fish.get_board_visual()) #prints unicode image of current board state\n</code></pre> <p>The Python Stockfish module also features a function that prints a Unicode display of the current board state! This proved very useful during debugging to follow along with games that are not being played physically.</p> <pre><code>while True:\n    isMate = False\n    print(\"side of stockfish:\")\n    fishSide = input()\n    playGame(fishSide)\n</code></pre> <p>I then created an infinite loop that takes the side of the player wearing the insole that launches one of two loops that allow games to be played inside of the playGame() function.</p> <pre><code>def playGame(side):\n    global legal; global legalMoves\n    global board; global isMate; global morseMove; \n    mate = False\n    turns = 0; i = 0\n    board = chess.Board()\n    print(\"fish playing as \" + side)\n</code></pre> <p>Several declarations occur at the top of the playGame() function regardless of what side Stockfish is on. These lines help keep track of legality and reset the state of the board in the two modules that track it. The importance of these modules is detailed later on in this section.</p> <pre><code>if side == \"white\":\n        while mate == False:\n            bestMove = fish.get_best_move(1000)\n            fish.make_moves_from_current_position([bestMove]);\n            chessMove = chess.Move.from_uci(bestMove) #create chessMove \n            print(\"whitefish plays \" + bestMove)\n</code></pre> <p>I decided to start by writing code for games for when the engine is generating moves for the white pieces. Stockfish will immediately generate a move in this case so this made early development a bit easier. The above snippet generates the optimal move from the starting position and plays it.</p> <pre><code>print(\"black move:\") #request player move\nmove = input()\n#The above lines request the move of the engine's opponent that is playing on the black pieces.\n</code></pre> <p>After black\u2019s move is input, one turn has passed, and now it is time for the engine to respond to the human player\u2019s move. But before that can happen, the program needs to check the legality of the Stockfish move. If the Stockfish module is passed an illegal move that cannot be played given a current board position, it crashes. So I needed to create a function to test the legality of moves before passing them to the Stockfish module to avoid this potential point of failure.</p>"},{"location":"Projects/VonNiemannProbe/#checking-move-legality","title":"Checking Move Legality","text":"<p>While the Python Stockfish module is robust and does have many useful features, it does not natively feature a function to check the legality of a move. As such, I decided to add the python-chess module to run a legality check on each move before passing it to Stockfish, prompting the user to enter another move if a move is not legal, preventing crashes due to misinput.</p> <pre><code>board = chess.Board(); #create chess board object\n</code></pre> <p>The above function call creates a Board object that allows for the calling of the many functions included in the python-chess module.</p> <p>The python-chess module features a board.is_legal() function that checks the legality of a formatted move object given the current state of a board object. It returns a boolean that reflects the legality of a move. However, it needs to be passed a chess.Move object which must be created using letters and numbers that can appear in chess moves. As such, any input that is incorrect, say \u201cn9z0\u201d would not create a move object and would trigger a crash. Therefore, it is necessary to verify that input only contains properly formatted characters that can actually exist in a chess move before trying to use the is_legal() function.</p> <pre><code>badChars = [\"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n\"9\", \"0\"] #chars that can't be in a legal chess move\n</code></pre> <p>I started by creating a dict that contains all of the characters that cannot appear in a legal chess move.</p> <pre><code>for char in move: #check if badChars exist in move\n        i = 0 #reset iterating var\n        while i &lt; len(badChars):\n            badChar = badChars[i]\n            if char == badChar:\n                print(char + ' is ILLEGAL')\n                noBadChars = False #set bool to reflect bad char\n            if char.isalpha() == True:\n                charCount += 1 #reflect that at least 1 char in string\n            if char.isdigit() == True:\n                numCount += 1 #reflect that at least one number in string\n            i += 1\n            #print(char + \"is legal\") #debug bad chars function\n</code></pre> <p>I then wrote some code to iterate through each character in a move received as input and verify that it contains only legal characters.</p> <pre><code>if len(move) != 4 and len(move) != 5: #solve edge case where small string doesn't break other rules\n    noBadChars = False;\n</code></pre> <p>I also added a quick check to verify that a move actually contains 4 characters. A move object cannot be created by any other number of characters, so this check is useful in preventing crashes due to misinput.</p> <pre><code>if noBadChars == True: #only creative move objects if correct formatting\n        myMove = chess.Move.from_uci(move)\n        legal = board.is_legal(myMove)\n        print(\"Legal? \" + str(legal))\n</code></pre> <p>If the user input does not contain any illegal characters and is 4 characters in length, then it can be made into a chess.Move object in the python-chess module and passed to the is_legal() function. The above snippet does precisely that.</p> <pre><code>if legal and noBadChars: #move can only happen if legal and doesn't contain illegal chars\n        fish.make_moves_from_current_position([move])\n        chessMove = chess.Move.from_uci(move)\n        board.push_san(move)\n        return #back to game loop\n</code></pre> <p>If the player\u2019s move is legal, then it is added to the games being tracked by python-chess and Stockfish. After the move is played, the program returns to the playGame() parent function and the game will continue with a move from Stockfish.</p> <pre><code>else:\n    print(\"illegal move, input new move:\")\n    newMove = input()\n    getPlayerMove(newMove)\n    return #back to game loop\n</code></pre> <p>If the move is not legal, the function getPlayerMove() function will recursively call back to itself until a legal move is received, at which point it will return to the playGame() parent function and the game will continue.</p>"},{"location":"Projects/VonNiemannProbe/#morse-code-translation","title":"Morse Code Translation","text":"<p>After getting the legality function to work, I began focusing on solving the core challenge of this project: sending the moves generated by Stockfish to a shoe insole. I initially wrote code to translate the moves into Morse Code, but quickly discovered that due to the short nature of chess moves I could save a lot of time by just pulsing a vibrating motor for each additional index in the alphabet or number line a certain character occupied.</p> <p>For example, a C in morse code is --, which would take 10 seconds to buzz assuming a dot length of 1 second where a 1:3 dot:dash ratio is established with a wait time of 1 dot between each character. This is standard. However, a simple *** of 0.1 second pulses with 0.05 second pauses in between accomplishes the same thing in much less time and is easily understood to be a C, because chess moves will always follow a character:number:character:number format. As such, I decided that this way would be faster and would not require me to learn 16 characters of Morse Code. Both encoding versions are in our Github repository for the project if for some reason you prefer Morse Code. For the sake of concision I am only going to include the code for the shorter encoding method that I described which is also the one that is used in all of our testing videos.</p> <pre><code>morseDict = { 'a':'.', 'b':'..',\n   'c':'...', 'd':'....', 'e':'.....',\n   'f':'......', 'g':'.......', 'h':'........',\n   '1':'.', '2':'..', '3':'...',\n   '4':'....', '5':'.....', '6':'......',\n   '7':'.......', '8':'........'}\n</code></pre> <p>I began by creating a dict of all of the dot values for each letter and number.</p> <pre><code>def toMorse(move): #convert move to morse code\n    ret = \"\" #empty morse conversion\n    newConvert = \"\" #empty mid-conversion string\n    for char in move:\n        #print(\"converting \" + char) #debug print\n        newConvert = morseDict[char] #take key of char index in morse dict\n        ret += newConvert + ' ' #add morse for new char to morse string\n    print(\"Morse-Converted Move: \" + ret)\n    return ret\n</code></pre> <p>The above function takes a move played by Stockfish and converts it to a format that is almost ready to be sent via Bluetooth to the insole.</p> <p>At this point the move \u201ce2e4\u201d would look like \u201d..... .. ..... ....\u201d meaning it is ready to be pulsed to the wearer of the device once it is sent to and received by the insole.</p>"},{"location":"Projects/VonNiemannProbe/#sending-moves-via-bluetooth","title":"Sending Moves Via Bluetooth","text":"<p>The job of the Python program each move ends with the sending of the optimal move to the user of the insole. This is accomplished by connecting the machine that the program is running on to the HC-05 or HC-06 Bluetooth module located in the device and sending the moves via a COM port.</p> <p>Whenever you connect to the Bluetooth module, it will take on a different COM port. This address can be found in Windows settings by searching \u201cDevice Manager\u201d or pressing \u229e+x and navigating to Device Manager. Once in this interface, navigate to \u201cBluetooth\u201d and find the Bluetooth module.</p> <pre><code>port = \"COM10\" #set bluetooth port\n</code></pre> <p>Once you find the port, change the value of the port string to whatever value your computer reflects. The Bluetooth module will have a couple of values that it takes on on your machine, so you might not have to change it every time you reconnect, but it is certainly best practice to check just to make sure. These modules can be pretty buggy sometimes, but usually just forgetting the device and reconnecting solves the problem!</p> <pre><code>ser = serial.Serial(port, 9600, timeout = 1)\nprint(\"serial opened\")\n</code></pre> <p>The above snippet establishes a connection to the Bluetooth module at 9600 baud using the pre-specified port and prints a confirmation. After this runs successfully, a game can be started and the moves will be sent to the shoe insoel automatically.</p> <pre><code>def sendMove(morse):\n    print(morse) #print morse move with spaces replaced with 9 - easier to parse on arduino side as empty bytes hard to work with\n    for char in morse:\n        tempChar = char.encode() #temporary placeholder set to current char in morse move\n        ser.write(tempChar) #send individual character of final morse message encoded in utf-8\n    print(\"sent move\")\n    return\n</code></pre> <p>The above function is responsible for sending the moves. During testing, I found that sending one byte at a time is easier to parse on the insole, so this function simply iterates through the converted string and sends each byte one by one. After all of the bytes are sent, it returns to the parent function and the game continues.</p> <pre><code>morse = re.sub(\"[ ]\", \"9\", morse)\n</code></pre> <p>I realized that spaces can behave weirdly when sent over Bluetooth using UTF-8, so instead of further researching the problem I simply set all of the spaces to a value that cannot appear in a chess move before sending them to the insole. 9\u2019s are simply treated as a constant delay in the C++ code that runs on the insole.</p> <p>At this point, the work of the Python function is complete. A player move has been input, checked for legality, and an engine move has been generated, converted, and sent to the insole. Once the player wearing the device makes the move on the board and the human player responds, this process will continue until Stockfish triumphs!</p> Bluetooth Interfacing Chess Engine<pre><code>    #(c) Teddy Warner &amp; Jack Hollingsworth - 2022\n\n    #This work may be reproduced, modified, distributed, performed, and displayed\n    #for any purpose, but must acknowledge Teddy Warner  &amp; Jack Hollingsworth.\n    #Copyright is retained and must be preserved. The work is provided as is;\n    #no warranty is provided, and users accept all liability.\n\n    #download stockfish from https://stockfishchess.org/files/stockfish_15_win_x64_avx2.zip\n\n    from stockfish import Stockfish #pip install stockfish\n    import chess #pip install python-chess\n    import time\n    import serial\n    import re #pip install regex\n\n    global board; global fish\n    global legal; global legalMoves\n    global moveAdjusted; global badChars\n    global isMate; global morseDict\n    global morseMove; global port \n    global stockfishPath\n\n    port = \"COM10\" #set bluetooth port\n\n    stockfishPath = \"C:/Users/jackh/Downloads/stockfish_15_win_x64_avx2/stockfish_15_win_x64_avx2/stockfish_15_x64_avx2.exe\" #replace with the path to your Stockfish exe. Note - the path may only contain forward slashes, no backslashes.\n\n    morseDict = { 'a':'.-', 'b':'-...',\n      'c':'-.-.', 'd':'-..', 'e':'.',\n      'f':'..-.', 'g':'--.', 'h':'....',\n      '1':'.----', '2':'..---', '3':'...--',\n      '4':'....-', '5':'.....', '6':'-....',\n      '7':'--...', '8':'---..'} #morse dict for all chars in chess moves, other characters not needed here\n\n    board = chess.Board(); #create chess board object\n\n    badChars = [\"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n    \"9\", \"0\"] #chars that can't be in a legal chess move\n\n    morseMove = \"\" #placeholder for morse code move, filled later\n\n    fish = Stockfish(r\"{0}\".format(stockfishPath), \n    depth=18, parameters={\"Threads\": 4, \"Hash\": 256, \"UCI_LimitStrength\": \"false\"}) #stockfish object declaration, can regulate strength\n    print(\"WDL Accepted \" + str(fish.does_current_engine_version_have_wdl_option()))\n    print(\"Board State \" + fish.get_board_visual()) #prints unicode image of current board state\n\n    ser = serial.Serial(port, 9600, timeout = 1) #open com port of hc-06 receiving, set to 9600 baud\n    print(\"serial opened\")\n\n    def playGame(side):\n        global legal; global legalMoves\n        global board; global isMate; global morseMove; \n        mate = False #checkmate state declaration\n        turns = 0; i = 0 #these could be the same, but easier to keep sep = SPAGHETTIOLI CODE MOMENT\n        board = chess.Board(); #declare chess board object in pychess module, for checking legality of moves\n        print(\"fish playing as \" + side)\n        if side == \"white\":\n            while mate == False: #if game not over, play continues\n                bestMove = fish.get_best_move(1000) #stockfish get best current move\n                fish.make_moves_from_current_position([bestMove]); \n                chessMove = chess.Move.from_uci(bestMove) #create chessMove object in pychess, push it to board on next line\n                board.push_san(bestMove) #make move in pychess to keep up with stockfish game\n                print(\"whitefish plays \" + bestMove)\n                morseMove = toMorse(bestMove) #call morse conversion of fish move\n                sendMove(morseMove) #call to move sending function, arg is stockfish best move\n                mate = board.is_checkmate() #returns state of checkmate\n                print(\"Checkmate: \" + str(mate)) #prints state of checkmate after every fish move\n                if mate == True:\n                    print(\"checkmate, stockfish victory!\")\n                    return\n                turns += 1\n                legalMoves = str(board.legal_moves) #convert list to string\n                print(\"black move:\") #request player move\n                move = input()\n                getPlayerMove(move)\n                mate = board.is_checkmate() #check if player has won\n                if mate == True:\n                  print(\"checkmate, player victory\")\n                  return\n                turns += 1\n                print(\"board after \" + str(turns) + \" moves:\")\n                print(fish.get_board_visual(False)) #shows board from player perspective (white)\n            print(\"\")\n            return #return to infinite loop\n        if side == \"black\":\n            legalMoves = str(board.legal_moves) #convert list to string\n            while mate == False:\n                print(\"white move:\")\n                move = input()\n                getPlayerMove(move)\n                mate = board.is_checkmate() #check if player has won\n                if mate == True:\n                  print(\"checkmate, player victory\")\n                  return\n                bestMove = fish.get_best_move(1000) #stockfish get best current move\n                fish.make_moves_from_current_position([bestMove]); \n                chessMove = chess.Move.from_uci(bestMove)\n                board.push_san(bestMove)\n                print(\"blackfish plays \" + bestMove)\n                morseMove = toMorse(bestMove) #get string of morse-converted move, not in use\n                sendMove(morseMove) #send morse move via bluetooth\n                mate = board.is_checkmate() #returns state of checkmate\n                print(\"Checkmate: \" + str(mate)) #prints state of checkmate after every fish move\n                if mate == True:\n                    print(\"checkmate, stockfish victory!\")\n                    return\n                turns += 1\n                print(\"board after \" + str(turns) + \" moves:\")\n                print(fish.get_board_visual()) #shows board from player perspective (black)\n            print(\"\")\n            return #return to infinite loop\n\n    def getPlayerMove(move):\n        global board; global moveAdjusted; global badChars; global morseMove\n        noBadChars = True #reset no bad chars bool\n        legal = False #reset illegal bool\n        charCount = 0; numCount = 0\n        for char in move: #check if badChars exist in move\n            i = 0 #reset iterating var\n            while i &lt; len(badChars):\n                badChar = badChars[i]\n                if char == badChar:\n                    print(char + ' is ILLEGAL')\n                    noBadChars = False #set bool to reflect bad char\n                if char.isalpha() == True:\n                    charCount += 1 #reflect that at least 1 char in string\n                if char.isdigit() == True:\n                    numCount += 1 #reflect that at least one number in string\n                i += 1\n                #print(char + \"is legal\") #debug bad chars function\n        if len(move) != 4 and len(move) != 5: #solve edge case where small string doesn't break other rules\n            noBadChars = False;\n        if charCount == 0 or numCount == 0:\n            print(\"numbers: \" + str(numCount))\n            print(\"chars \" + str(charCount))\n            noBadChars = False #change bool to reflect bad formatting\n        if noBadChars == True: #only creative move objects if correct formatting\n            print(move + \" is good format\")\n            myMove = chess.Move.from_uci(move) #create move object frmo current player move, used to check legality\n            legal = board.is_legal(myMove) #checks legality of desired move\n            print(\"Legal? \" + str(legal))\n        if legal and noBadChars: #move can only happen if legal and doesn't contain illegal chars\n            fish.make_moves_from_current_position([move])#plays legal player move in STOCKFISH\n            chessMove = chess.Move.from_uci(move) #load legal player move\n            board.push_san(move) #send player move to board tracker\n            print(\"player plays \" + move)\n            return #back to game loop\n        else:\n            print(\"illegal move, input new move:\")\n            newMove = input()\n            getPlayerMove(newMove)\n            return #back to game loop\n\n    def toMorse(move): #convert move to morse code\n        ret = \"\" #empty morse conversion\n        newConvert = \"\" #empty mid-conversion string\n        for char in move:\n            #print(\"converting \" + char) #debug print\n            newConvert = morseDict[char] #take key of char index in morse dict\n            ret += newConvert + ' ' #add morse for new char to morse string\n        print(\"Morse-Converted Move: \" + ret)\n        return ret\n\n    def sendMove(morse):\n        morse = re.sub(\"[ ]\", \"9\", morse)\n        print(morse) #print morse move with spaces replaced with 9 - easier to parse on arduino side as empty bytes hard to work with\n        for char in morse:\n            tempChar = char.encode() #temporary placeholder set to current char in morse move\n            ser.write(tempChar) #send individual character of final morse message encoded in utf-8\n        print(\"sent move\")\n        return\n\n    while True: #enables playing of inifinite games, playGame() returns to here after checkmate, resets all local values\n        isMate = False\n        print(\"good chess speaks for itself, welcome to Von Niemann Probe\")\n        print(\"side of stockfish:\") #request side of stockfish player\n        fishSide = input() #which side is hans niemann on?\n        playGame(fishSide) #initiate game with advantage player's side receiving hints based on other player's moves\n</code></pre> Bluetoothless Implemetation <p>Chess Engine<pre><code>#(c) Teddy Warner &amp; Jack Hollingsworth - 2022\n\n#This work may be reproduced, modified, distributed, performed, and displayed\n#for any purpose, but must acknowledge Teddy Warner  &amp; Jack Hollingsworth.\n#Copyright is retained and must be preserved. The work is provided as is;\n#no warranty is provided, and users accept all liability.\n\n#complete implementation without bluetooth sending, everything else works though so can easily be iterated upon\n\n#download stockfish from https://stockfishchess.org/files/stockfish_15_win_x64_avx2.zip\n\nfrom stockfish import Stockfish\nimport chess\nimport time\n\nglobal board; global fish\nglobal legal; global legalMoves\nglobal moveAdjusted; global badChars\nglobal isMate; global morseDict\nglobal morseMove; global stockfishPath\n\nstockfishPath = \"C:/Users/jackh/Downloads/stockfish_15_win_x64_avx2/stockfish_15_win_x64_avx2/stockfish_15_x64_avx2.exe\" #replace URL with the path to your Stockfish exe. Note - the path may only contain forward slashes, no backslashes.\n\nmorseDict = { 'a':'.-', 'b':'-...',\n  'c':'-.-.', 'd':'-..', 'e':'.',\n  'f':'..-.', 'g':'--.', 'h':'....',\n  '1':'.----', '2':'..---', '3':'...--',\n  '4':'....-', '5':'.....', '6':'-....',\n  '7':'--...', '8':'---..'} #morse dict for all chars in chess moves\n\nboard = chess.Board(); #create chess board object\n\nbadChars = [\"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n\"9\", \"0\"] #chars that can't be in a legal chess move\n\nmorseMove = \"\" #placeholder for morse code move, filled later\n\nfish = Stockfish(r\"{0}\".format(stockfishPath), \ndepth=18, parameters={\"Threads\": 4, \"Hash\": 256, \"UCI_LimitStrength\": \"false\"}) #stockfish object declaration, can regulate strength\nprint(\"WDL Accepted \" + str(fish.does_current_engine_version_have_wdl_option()))\nprint(\"Board State \" + fish.get_board_visual())\n\ndef playGame(side):\n    global legal; global legalMoves\n    global board; global isMate; global morseMove; \n    mate = False #checkmate state declaration\n    turns = 0; i = 0 #these could be the same, but easier to keep sep = SPAGHETTIOLI CODE MOMENT\n    board = chess.Board(); #declare chess board object in chess module\n    print(\"fish playing as \" + side)\n    if side == \"white\":\n        while mate == False: #if game not over, play continues\n            bestMove = fish.get_best_move(1000) #stockfish get best current move\n            fish.make_moves_from_current_position([bestMove]); \n            chessMove = chess.Move.from_uci(bestMove)\n            board.push_san(bestMove)\n            print(\"whitefish plays \" + bestMove)\n            morseMove = toMorse(bestMove) #call morse conversion of fish move\n            mate = board.is_checkmate() #returns state of checkmate\n            print(\"Checkmate: \" + str(mate)) #prints state of checkmate after every fish move\n            if mate == True:\n                print(\"checkmate, stockfish victory!\")\n                return\n            turns += 1\n            legalMoves = str(board.legal_moves) #convert list to string\n            print(\"black move:\") #request player move\n            move = input()\n            getPlayerMove(move)\n            turns += 1\n            print(\"board after \" + str(turns) + \" moves:\")\n            print(fish.get_board_visual(False)) #shows board from player perspective (white)\n        print(\"checkmate, stockfish victory\")\n        return #return to infinite loop\n    if side == \"black\":\n        legalMoves = str(board.legal_moves) #convert list to string\n        while mate == False:\n            print(\"white move:\")\n            move = input()\n            getPlayerMove(move)\n            bestMove = fish.get_best_move(1000) #stockfish get best current move\n            fish.make_moves_from_current_position([bestMove]); \n            chessMove = chess.Move.from_uci(bestMove)\n            board.push_san(bestMove)\n            print(\"blackfish plays \" + bestMove)\n            morseMove = toMorse(bestMove) #get string of morse-converted move, not in use\n            mate = board.is_checkmate() #returns state of checkmate\n            print(\"Checkmate: \" + str(mate)) #prints state of checkmate after every fish move\n            if mate == True:\n                print(\"checkmate, stockfish victory!\")\n                return\n            turns += 1\n            print(\"board after \" + str(turns) + \" moves:\")\n            print(fish.get_board_visual()) #shows board from player perspective (black)\n        print(\"checkmate, stockfish victory!\")\n        print(\"\")\n        return #return to infinite loop\n\ndef getPlayerMove(move):\n    global board; global moveAdjusted; global badChars; global morseMove\n    noBadChars = True #reset no bad chars bool\n    legal = False #reset illegal bool\n    charCount = 0; numCount = 0\n    for char in move: #check if badChars exist in move\n        i = 0 #reset iterating var\n        while i &lt; len(badChars):\n            badChar = badChars[i]\n            if char == badChar:\n                print(char + ' is ILLEGAL')\n                noBadChars = False #set bool to reflect bad char\n            if char.isalpha() == True:\n                charCount += 1 #reflect that at least 1 char in string\n            if char.isdigit() == True:\n                numCount += 1 #reflect that at least one number in string\n            i += 1\n            #print(char + \"is legal\") #debug bad chars function\n    if len(move) != 4 and len(move) != 5: #solve edge case where small string doesn't break other rules\n        noBadChars = False;\n    if charCount == 0 or numCount == 0:\n        print(\"numbers: \" + str(numCount))\n        print(\"chars \" + str(charCount))\n        noBadChars = False #change bool to reflect bad formatting\n    if noBadChars == True: #only creative move objects if correct formatting\n        print(move + \" is good format\")\n        myMove = chess.Move.from_uci(move) #create move object frmo current player move, used to check legality\n        legal = board.is_legal(myMove) #checks legality of desired move\n        print(\"Legal? \" + str(legal))\n    if legal and noBadChars: #move can only happen if legal and doesn't contain illegal chars\n        fish.make_moves_from_current_position([move])#plays legal player move in STOCKFISH\n        chessMove = chess.Move.from_uci(move) #load legal player move\n        board.push_san(move) #send player move to board tracker\n        print(\"player plays \" + move)\n        return #back to game loop\n    else:\n        print(\"illegal move, input new move:\")\n        newMove = input()\n        getPlayerMove(newMove)\n        return #back to game loop\n\ndef toMorse(move): #convert move to morse code\n    ret = \"\" #empty morse conversion\n    newConvert = \"\" #empty mid-conversion string\n    for char in move:\n        #print(\"converting \" + char) #debug print\n        newConvert = morseDict[char] #take key of char index in morse dict\n        ret += newConvert + ' ' #add morse for new char to morse string\n    print(\"Morse-Converted Move: \" + ret)\n    return ret\n\nwhile True: #enables playing of inifinite games, playGame() returns to here after checkmate\n    isMate = False\n    print(\"good chess speaks for itself, welcome to Von Niemann Probe\")\n    print(\"side of stockfish:\") #request side of stockfish player\n    fishSide = input() #laptop user input\n    playGame(fishSide)\n</code></pre> </p>"},{"location":"Projects/VonNiemannProbe/#telegraph-code","title":"Telegraph Code","text":"<p>Once a formatted move is sent to the shoe insole, it needs to use its vibrating motor to discretely tell its wearer what the best move is. As all of the major processing and translation is done in Python, all the ATTiny412 microcontroller in the insole does is receive a move via Bluetooth, parse it, and buzz it to the user, making its job considerably simpler.</p>"},{"location":"Projects/VonNiemannProbe/#c-setup-initialization","title":"C++ Setup &amp; Initialization","text":"<pre><code>#include &lt;SoftwareSerial.h&gt; //software serial library, native in base installation of ide\nSoftwareSerial HC06(0, 1); //HC06-TX Pin 10, HC06-RX to Arduino Pin 11\n</code></pre> <p>The HC-06 cannot use the normal serial pins, so the SoftwareSerial library is required. The above snippet imports the library and establishes a transmitting line on pin 0 and a receiving line on pin 1.</p> <pre><code>int buzzerPin = 2; //pin of buzzer/vibrating motor\nint dotLength = 200; //establish length of 1 dot\n</code></pre> <p>These lines establish the pin of the buzzer and specify the length of one dot. Because of the encoding method used here, it is not necessary to specify the length of a dash. The length of a dot is also used for pauses here, but another time could be added to further optimize the buzzing of moves.</p> <pre><code>void setup() {\n  HC06.begin(9600); //Baudrate 9600 , Choose your own baudrate\n  pinMode(buzzerPin, OUTPUT);\n}\n</code></pre> <p>These lines establish a connection between the Bluetooth module and the machine that is running the Python program. It also initializes the buzzer as an output.</p>"},{"location":"Projects/VonNiemannProbe/#receiving-transmitting-moves","title":"Receiving &amp; Transmitting Moves","text":"<p>Once the Bluetooth module is connected to the Python program and the buzzer is setup, the insole is ready to receive moves and buzz them on the internal vibrating motor.</p> <pre><code>void loop(){\n  if(HC06.available() &gt; 0)\n  {\n    char receive = HC06.read();\n    if(receive =='.'){\n      digitalWrite(buzzerPin, HIGH);\n      delay(dotLength); \n      digitalWrite(buzzerPin, LOW);\n      delay(dotLength);\n    }\n    if(receive =='9'){\n      digitalWrite(buzzerPin, LOW);\n      delay(dotLength * 2);\n    }\n    else {\n      digitalWrite(buzzerPin, LOW);\n      delay(5);\n    }\n  }\n}\n</code></pre> <p>The Python program sends bytes one at a time and they simply pile up in the stack on the ATTiny412. This allows us to interact with each byte one at a time and not touch the other ones until they are ready to be buzzed. This prevents the need for any local strings or storage for the moves, as each byte in a move is no longer necessary after it is buzzed once, which means that accessing these bytes just once is sufficient.</p> <p>The local char, receive, is set to each byte contained in the move, in the order that they are received. With our encoding method, each byte is either a \u201c.\u201d or a \u201c9\u201d or empty, so these are the only conditions necessary that will result in a buzz. Sometimes junk data is sent, so it is better to leave this final condition open-ended as an else statement instead of including another conditional checking for null bytes, as junk data would result in a crash in this case.</p> Telegraph Reciving<pre><code>    //(c) Teddy Warner &amp; Jack Hollingsworth - 2022\n\n    //This work may be reproduced, modified, distributed, performed, and displayed\n    //for any purpose, but must acknowledge Teddy Warner  &amp; Jack Hollingsworth.\n    //Copyright is retained and must be preserved. The work is provided as is;\n    //no warranty is provided, and users accept all liability.\n\n    #include &lt;Arduino.h&gt; //Arduino Parent Lib\n    #include &lt;SoftwareSerial.h&gt; //software serial library, native in base installation of ide\n\n    SoftwareSerial HC06(0, 1); //HC06-TX Pin 10, HC06-RX to Arduino Pin 11\n\n    int buzzerPin = 2; //pin of buzzer/vibrator\n    String fullString = \"\"; // \n    int dotLength = 1000; //establish length of 1 dot\n    int dashLength = 3 * dotLength; //establish proportion of dots to dashes\n\n    void setup() {\n      HC06.begin(9600); //Baudrate 9600 , Choose your own baudrate \n      pinMode(buzzerPin, OUTPUT);\n    }\n\n    void loop(){\n\n      if(HC06.available() &gt; 0) //When HC06 receive something\n      {\n        char receive = HC06.read(); //Read from Serial Communication\n        if(receive =='.'){\n          digitalWrite(buzzerPin, HIGH);\n          delay(dotLength); //delay for dotlength\n          digitalWrite(buzzerPin, LOW);\n          delay(dotLength); //dotlength delay between next character\n        }\n        if(receive == '-')\n        {\n        digitalWrite(buzzerPin, HIGH);\n        delay(dashLength);\n        digitalWrite(buzzerPin, LOW);\n        delay(dotLength); //dot length delay between next character\n        }\n        if(receive =='9'){\n          digitalWrite(buzzerPin, LOW);\n          delay(dotLength * 2); //delay for another 2 seconds if space, gives 3 seconds total division between letters - make proportional to actual thing\n        }\n        else {\n          digitalWrite(buzzerPin, LOW);\n          delay(5);\n        }\n      }\n\n    }\n</code></pre>"},{"location":"Projects/VonNiemannProbe/#fabrication-testing","title":"Fabrication &amp; Testing","text":"<p>I began the fabrication of the Von Niemann Probe through some prototype PCB milling on the Bantam Tools Desktop CNC Milling Machine \u2026</p> <p>Leveraging these machines would allow me to test early designs before ordering final boards from PCBWay, allowing me to ensure their functionality early on in the design process. This process also makes it considerably easier to make changes, as I can test multiple iterations within several hours of each other, including the time to solder each board!</p> <p> </p> Von Niemann Probe Mainboard <p>Next up, 3D Printing \u2026 and a lot of it. All prototype prints for the Von Niemann Probe were done on a Prusa I3 MK3S+ equipped with an 0.4mm E3D Nozzle X from White PETG.</p> <p>Similar to the PCB prototyping, I fabricated several prints while iterating on the insole\u2019s CAD, before ordering the final iteration from PCBWay. Each print required over 14 hours of print time and numerous hours to complete the necessary changes to the design. </p> <p> </p> All Iterations of the Von Niemann Probe Insole <p>After finally arriving at a version of the insole that I was satisfied with, I was ready to assemble the device \u2026</p> <p>Leaving me with the final product below! </p> <p> </p> <ol> <li> <p>https://www.youtube.com/watch?v=CJZuT-_kij0&amp;t=593s\u00a0\u21a9\u21a9</p> </li> <li> <p>https://twitter.com/MagnusCarlsen/status/1574482694406565888?s=20\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.bbc.com/news/world-63010107\u00a0\u21a9\u21a9</p> </li> <li> <p>https://www.chess.com/blog/CHESScom/hans-niemann-report\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.npr.org/2022/10/21/1130442319/hans-niemann-sues-magnus-carlsen-for-100-million-accusing-him-of-defamation\u00a0\u21a9</p> </li> <li> <p>https://storage.courtlistener.com/recap/gov.uscourts.moed.198608/gov.uscourts.moed.198608.1.0.pdf\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://frontofficesports.com/top-chess-player-platform-join-forces-in-82-9m-deal/\u00a0\u21a9</p> </li> <li> <p>https://www.washingtonpost.com/sports/2022/10/05/chess-com-investigation-cheating-hans-niemann-magnus-carlsen/\u00a0\u21a9</p> </li> <li> <p>https://youtu.be/eg5G1A_mTFg\u00a0\u21a9</p> </li> <li> <p>https://twitter.com/hansmokeniemann\u00a0\u21a9</p> </li> <li> <p>https://futurism.com/von-neumann-probe\u00a0\u21a9</p> </li> <li> <p>https://ww1.microchip.com/downloads/en/DeviceDoc/ATtiny212-412-DataSheet-DS40001911B.pdf\u00a0\u21a9</p> </li> <li> <p>https://components101.com/sites/default/files/component_datasheet/HC06%20Bluetooth%20Module%20Datasheet.pdf\u00a0\u21a9</p> </li> <li> <p>https://components101.com/wireless/hc-06-bluetooth-module-pinout-datasheet\u00a0\u21a9</p> </li> <li> <p>http://www.sizecharter.com/clothing-fit-and-measurement/understanding-shoe-sizing\u00a0\u21a9</p> </li> <li> <p>https://www.researchgate.net/figure/The-Mean-of-Absolute-in-mm-and-Relative-in-FL-Foot-Dimensions-for-Both-Genders-a_tbl2_327021689\u00a0\u21a9</p> </li> <li> <p>https://www.researchgate.net/figure/Measurements-of-the-foot-and-the-inner-shoe-dimensions-a-Foot-Length-FL-and-Foot_fig5_280976288\u00a0\u21a9</p> </li> <li> <p>https://www.protalus.com/blogs/news/how-to-measure-feet\u00a0\u21a9</p> </li> <li> <p>https://www.magnuscarlsen.com/en\u00a0\u21a9</p> </li> <li> <p>https://www.bbc.com/news/world-63043023\u00a0\u21a9</p> </li> <li> <p>https://cse.buffalo.edu/~regan/chess/fidelity/data/Niemann/\u00a0\u21a9</p> </li> <li> <p>https://www.wsj.com/articles/chess-cheating-hans-niemann-report-magnus-carlsen-11664911524\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=5uDM3fPeNFM&amp;t=224s\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=QNuu8KTUEwU&amp;t=390s\u00a0\u21a9</p> </li> <li> <p>https://www.reddit.com/r/chess/comments/x6ixud/during_magnus_carlsens_current_unbroken_streak_as/\u00a0\u21a9</p> </li> <li> <p>https://pawnalyze.com/chess-drama/2022/09/05/Analyzing-Allegations-Niemann-Cheating-Scandal.html\u00a0\u21a9</p> </li> <li> <p>https://www.chess.com/news/view/hans-niemann-us-junior-championship-annie-wang\u00a0\u21a9</p> </li> <li> <p>https://www.mid-day.com/sports/other-sports/article/world-champion-magnus-carlsen-quits-game-amid-cheating-allegations-23246759\u00a0\u21a9</p> </li> <li> <p>https://www.fide.com/news/1968\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=TkUkvLqHfZM\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=9wtvXoXh0VU\u00a0\u21a9</p> </li> <li> <p>https://www.chess.com/events/2022-sinquefield-cup/03/Carlsen_Magnus-Niemann_Hans_Moke\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=CJZuT-_kij0\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=VptbNKbHQiM&amp;t=5s\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=O6ML2b7IdD4&amp;t=2s\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=qjtbXxA8Fcc\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=uCzwLk6fXXs\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=LkXDhw-TuGw\u00a0\u21a9</p> </li> <li> <p>https://www.nationalworld.com/news/offbeat/how-do-you-cheat-at-chess-cheating-player-hans-niemann-scandal-play-online-board-3870066\u00a0\u21a9</p> </li> <li> <p>https://www.nytimes.com/2022/12/04/business/chess-cheating-scandal-magnus-carlsen-hans-niemann.html\u00a0\u21a9</p> </li> <li> <p>https://www.wsj.com/articles/chess-cheating-magnus-carlsen-hans-niemann-11663751262?mod=article_inline\u00a0\u21a9</p> </li> <li> <p>https://www.buzzfeednews.com/article/kelseyweekman/chess-cheating-anal-beads-conspiracy-hans-niemann\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=lpfWGyvO80o\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=GLwyhmmEoAQ\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=umaHIQJY6Tw\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=aDUmS_MJceU\u00a0\u21a9</p> </li> <li> <p>https://www.republicworld.com/world-news/rest-of-the-world-news/elon-musk-claims-niemann-may-have-used-anal-beads-to-beat-carlsen-in-chess-championship-articleshow.html\u00a0\u21a9</p> </li> <li> <p>https://www.newsweek.com/hans-niemann-magnus-carlsen-chess-sex-toy-scandal-1749903\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=HdHWAuQRG7E\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=J4_e12Md4Fg\u00a0\u21a9</p> </li> <li> <p>https://www.youtube.com/watch?v=XjupJslRj5E\u00a0\u21a9</p> </li> <li> <p>https://twitter.com/nigelshortchess/status/1573434084239593481\u00a0\u21a9</p> </li> <li> <p>https://twitter.com/hansmokeniemann/status/1583164606029365248\u00a0\u21a9</p> </li> </ol>"},{"location":"Projects/pi0/","title":"Zero-Shot Prompt to Action","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Project Feed"},{"location":"Projects/pi0/#zero-shot-prompt-to-action","title":"Zero-Shot Prompt to Action","text":"Teddy Warner| Spring, 2025 |  X-X minutes <p>Zero-shot prompt to action on a $160 3D printed robotic arm with \u03c0\u2080.</p> <p>The future will undoubtedly consist of robots that \u201cjust work\u201d. Where autonomous machines are informed by semantics and senses in the same way we humans are.</p> <p>In his 2022 paper, A Path Towards Autonomous Machine Intelligence Dr. Yann LeCun proposes that for ML systems to truly mimic the human ability to act in novel situations/environments, said ML systems must master both the semantic and scientific domains.<sup>1</sup> They must both understand language/society and physical/time.</p> <p>While current Large Language Models (LLMs) and Vision Language Models (VLMs) very accurately grasp language and society, they fall short in the later physical domains. To establish machines that \u201cjust work\u201d, we must fill in this hole: we must equip ML systems with an understanding of time and space.</p> <p>I work full-time on this very problem at Intempus, equipping agents with an understanding of time and space through the collection and analysis of physiological data. Yet that\u2019s not what this piece is about, we\u2019ll be focusing on a different approach: be focusing on generalist robotics policies.</p> <p>In early February 2025, Physical Intelligence, a company developing foundational robotic control policies, open-sourced \u03c0\u2080, a state-of-the-art Vision Language Action (VLA) model. \u03c0\u2080 excels in a number of diverse tasks (folding laundry, cleaning a table, scooping coffee beans, etc.) while remaining general enough to control a variety of robot types (single arm, dual arms, mobile robots, etc.).</p> <p>Many of you asked for code &amp; weights for \u03c0\u2080, we are happy to announce that we are releasing \u03c0\u2080 and pre-trained checkpoints in our new openpi repository! We tested the model on a few public robots, and we include code for you to fine-tune it yourself. pic.twitter.com/1peLDU9XJ6</p>\u2014 Physical Intelligence (@physical_int) February 4, 2025 <p>Many of you asked for code &amp; weights for \u03c0\u2080, we are happy to announce that we are releasing \u03c0\u2080 and pre-trained checkpoints in our new openpi repository! We tested the model on a few public robots, and we include code for you to fine-tune it yourself. pic.twitter.com/1peLDU9XJ6</p>\u2014 Physical Intelligence (@physical_int) February 4, 2025 <p>Traditional robotic control policies often rely on specialized data/programming for each task, limiting their versatility. Vision Language Action models like \u03c0\u2080 provide a generalist baseline for autonomous machines, allowing said robots to adapt and learn new tasks with minimal additional data.</p> <p>Thus robots informed by generalist policies like \u03c0\u2080 can truly assist/interact in diverse environments, leveraging semantic knowledge and visual understanding from \u2018internet-scale\u2019 pretraining, and in turn understanding and executing complex tasks much like humans do.</p> <p>\u03c0\u2080 is built on \u2018internet-scale\u2019 vision-language pretraining, giving the model an incredibly robust visual understanding and semantic knowledge. The model extends into the physical real by incorporating action and observation state tokens, enabling the model to output continuous motor commands and high frequencies (50 Hz). Physical intelligence notes that their model was initially trained on data from 8 distinct robots, and later expanded to 7 robotic platforms with 68 unique tasks.</p> <p>[PI0 robots photo]</p> <p>The open-source release of \u03c0\u2080 is still considered an experiment: \u201c\u03c0\u2080 was developed for [Physical Intellegence\u2019s] own robots \u2026 and though [they] are optimistic that researchers and practitioners will be able to run creative new experiments by adapting \u03c0\u2080 to their own platforms, [they] do not expect every such attempt to be successful. All this is to say: \u03c0\u2080 may or may not work for you, but you are welcome to try it and see\u201d!<sup>2</sup></p> <p>So Physical Intelligence has gifted us with this very cool model which happens to work with many expensive robots. The folks at \ud83e\udd17 Hugging Face open-sourced a PyToarch port of \u03c0\u2080 concurrently with Physical Intelligence\u2019s release, and it felt only right to get \u03c0\u2080 up and running on a cheap and sturdy robotic arm: the $160 LeRobot So-100!</p>"},{"location":"Projects/pi0/#setup-your-environment","title":"Setup Your Environment","text":"<p>LeRebot is an awesome subsidiary of Hugging Face which provides open-source models, datasets, and tools for robotics - all written with PyToarch. They recently developed a new robotic arm, the So-100 which has been taking the robotics community by storm for its low cost and ease of use. This is the arm we\u2019ll be using to run \u03c0\u2080, as its accessibility means that many will be able to replicate this work.</p> <p>You can build a So-100 teleoperation setup for yourself by following this LeRobot guide, or you can purchase a prebuilt setup from Seeed Studio.</p> <p>[s0-100 images]</p> <p>[INSERT lerobot isntall + WSL paragraph]</p> <p>To provide our VLA with the vision it needs, we\u2019ll be making an upgrade to the base So-100 build with a 160\u00b0 FOV gripper cam. I mocked up a quick wrist mount for my camera in Fusion 360 [link to file] for my bot but also stumbled across @cmcgartoll\u2019s redesigned S0-100 wrist with an integrated camera mount - either option should work.</p> <p>[gripper cam photo]</p> <p>In addition to the gripper cam, a third-person angle of your environment will be needed. I used a desk-mounted tripod and my phone with the droidCam app for this.</p> <p>[third person cam angle]</p> <p>Think of your setup as a clock: place your So-100 at 6 o\u2019clock and your third-person camera at 12 o\u2019clock.</p> <p>[Diagram + Photos]</p> <p>You can follow this guide to set up your cameras in LeRobot - this addresses streaming your phone\u2019s cameras as well. For my implementation, this ended up being the most time-consuming part. WSL needs to have all USB devices ported to it from Windows and certainly does not get along well without video devices, so I spent a good chunk of time wrangling with my WSL kernel. Doing this natively in Mac or Windows shouldn\u2019t be as tricky. </p> <p>Once you\u2019ve built (or bought) your robots and set up your cameras in LeRobot, you\u2019re ready to test with teleoperation!</p> <p>[teleoperation script]</p> <p>If you see both camera streams pop up and can control the follower arm with the leader arm, you\u2019re golden!</p>"},{"location":"Projects/pi0/#running-zero-shot-vla-inference","title":"Running Zero-Shot VLA Inference","text":"<p>At this point we enter a bit of a choose-your-own journey, I\u2019ve gone ahead and collected a bunch of manual teleoperation data from my So-100 setup and used it to finetune \u03c0\u2080 for my environment. Keep reading this section and I\u2019ll we\u2019ll cover how to use my fine-tuned \u03c0\u2080 weights to run an inference with your own So-100 setup. While I\u2019ve done my best to recount how my septic environment is set up, there is no guarantee that my fine-tuned weights will work with your environment. With that in mind, if you\u2019d like to finetune \u03c0\u2080 for yourself, skip to the finetuning section.</p> <p>[ How to run pi0 inference]</p> <p>[results + media]</p>"},{"location":"Projects/pi0/#fine-tuning-0","title":"Fine-Tuning \u03c0\u2080","text":"<p>As mentioned in the previous section, while I\u2019ve done my best to recount how to recreate my exact setup for yourself, there\u2019s no guarantee my fine-tuned weights will work perfectly for your environment. Fortunately, you can fine-tune \u03c0\u2080 for yourself! To get started you\u2019ll need to collect some data.</p>"},{"location":"Projects/pi0/#capture-a-dataset","title":"Capture a Dataset","text":"<p>To capture a dataset with LeRobot, run the following script. In this, you\u2019ll specify the task description of what task you\u2019ll be manually recording, how many times you\u2019ll be repeating that task (episodes - generally 5-15 per task), how long each episode should be (in seconds), and how long you\u2019ll have between each episode to reset the environment (in seconds).</p> <p>[Inser script] [grep explanation]</p> <p>After you\u2019ve collected your last episode, your new dataset will be saved to the \u201c/data\u201d directory in the root of your LeRobot folder.</p> <p>I captured four example datasets for you to reference while capturing your own, each consisting of 5 episodes with episode duration varying from 25-45 seconds and reset duration varying from 10-25 seconds.</p> <p>[Insert dataset demo slider - iframe hugging face viz dataset]</p>"},{"location":"Projects/pi0/#augment-data","title":"Augment Data","text":"<p>Great! You\u2019ve now collected a bunch of manual teleoperation data from your So-100 environment. Now let\u2019s augment that data to finetune \u03c0\u2080.</p> <p><code>lerobot/scripts/augment_dataset.py</code> will process the dataset in your <code>/data</code> directory, augment that data, and push if to Hugging Face. Data augmentation is pretty sweet, we\u2019re essentially 4x\u2019ing all that teleoperation data you manually captured simply bly flipping the footage and reversing the polarity of the action and state values for the base botor on the So-100 (i.e. 42.73 becomes -42.73 and vice versa)<sup>3</sup></p> <p>[insert script]</p>"},{"location":"Projects/pi0/#finetune","title":"Finetune","text":"<p>With this newly augmented data, we\u2019re finally ready to move into finetuning \u03c0\u2080. </p> <p>\u03a0\u2080 is quite a substantial model and even finetuning takes ~80GB of VRAM. I certainly don\u2019t have that on my laptop GPU, and I\u2019m assuming very few people do, so we\u2019ll need to outsource or compute. For this, I\u2019ve used an A6000 on Lambda Cloud, but I\u2019ve also heard great things about SF Compute. It\u2019s a good idea to run this script when you don\u2019t need your computer, as this can take a while. My finetuning on 100 episodes took a little over 32 hours.</p> <p>If its your first time using Lambda Cloud, follow this getting started guide. Once you\u2019re SSH\u2019ed into your GPU instance, you\u2019ll need to install miniconda.</p> <p>[insert scripts https://lambdalabs.com/blog/setting-up-a-anaconda-environment?srsltid=AfmBOora6_1ZJEaQv1quwbtTYA0xaI8RgvU-MlTLvPb6MSZEDesJCGks]</p> <ol> <li> <p>https://openreview.net/pdf?id=BZ5a1r-kVsf\u00a0\u21a9</p> </li> <li> <p>https://www.physicalintelligence.company/blog/openpi\u00a0\u21a9</p> </li> <li> <p>https://gist.github.com/shreyasgite/3de71719c1f03439ed7278b9ba85b14b\u00a0\u21a9</p> </li> </ol>"},{"location":"writings/a-mutual-meaning/","title":"A Mutual Meaning","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/a-mutual-meaning/#a-mutual-meaning","title":"A Mutual Meaning","text":"Teddy Warner| Oct 2024 |  7-11 mins <p>While many find Nietzsche\u2019s nihilistic interpretation of the meaning of life to be disheartening, I\u2019ve always appreciated the personal agency it permits. </p> <p>To be clear, I don\u2019t think I\u2019ve ever bought into Nietzschian philosophy, as I\u2019ve always appreciated traditional morality, yet I\u2019ve enjoyed the concept of being able to assign my own meaning to life. Prior to my introduction to Hindu and Buddhist philosophy in The Upanishads and The Other Shore, I was on board with the Nietzschian belief in a lack of inherent meaning to life, yet these texts introduced me to the appealing concept of meaning derived from existence and impact. These philosophies don\u2019t rid me of my agency to assign meaning, they\u2019ve equipped me with tools to do so, while also filling the abyss left open by Nietzsche, an inherent meaning to life, our impact on each other.</p>"},{"location":"writings/a-mutual-meaning/#the-other-shore","title":"The Other Shore","text":"<p>What are the crucial points in this source that make it iconic, ideas I want to remember for the rest of my life?</p> <ol> <li>Create the conditions in life where what I desire will occur.</li> <li>Life\u2019s meaning is found in our existence, which itself only exists because of the existence of everything else. <p>\u201cWe are not separate. We are inextricably interrelated.\u201d <sup>7</sup></p> </li> <li>Our existence is what provides meaning to others. Thus, smile! Not only for yourself, but for the world.</li> </ol> <p>Abstract</p> <p>The Other Shore is an analysis of a new translation of the Heart Sutra by Thich Nhat Hanh, \u201cthe fruit of the author\u2019s more than sixty years of study and practice\u201d. The book is an exploration of Buddhist philosophy and practice, as well as a guide for achieving a more peaceful and fulfilling life. Through the use of vivid imagery and personal anecdotes, Hanh offers practical advice on topics such as mindfulness, meditation, and compassionate action. The book also delves into deeper themes such as the nature of reality, the interconnectedness of all beings, and the importance of letting go of attachments. With its emphasis on cultivating a deep awareness of the present moment and a sense of interconnectedness with all things, The Other Shore offers a powerful vision for living in harmony with oneself and the world.</p> Notes <ul> <li>Buddhism \u2014&gt; We need each other.</li> <li>Buddhist emptiness allows for change, allows growth. <p>\u201cBecause you are there, I can be here. That is the true meaning of emptiness. \u2026 Emptiness simply means no self-nature.\u201d <sup>8</sup></p> <p>\u201cThanks to emptiness, everything is possible.\u201d <sup>9</sup></p> </li> <li>I am more than my body, and even my mind, I am also my impact. After death, impact still exists, and thus I will remain. <p>\u201cIt would be wrong to think that what falls to the ground and dies is the whole of the leaf. During the nine months that it lived, the leaf travelled far. It had breathed and produced oxygen, which has entered into us human beings \u2026 The leaf, which has now fallen to the ground, has entered both us and the tree it fell from. It is not easy to see all the places the leaf has entered. We should not identify the leaf cadaver we see on the ground as being the whole of the leaf. Only them do we truly see the leaf, which is present everywhere.\u201d <sup>10</sup></p> </li> <li>Not only does your impact define you, but effects who others are as well. <p>\u201cIt is from this insight of interbeing that true compassion will be born in our hearts and we will know what to do and what not to do to help the situation.\u201d <sup>11</sup></p> </li> <li>\u201cIs Sugar Sweet?\u201d, only when all of its parts are together. All things are formations, like sugar, and and mutually dependent upon each other for their own existence. <p>\u201cThe sweetness is made only of non-sweet elements \u2026 If you remove any of those atoms there will be no sweetness. If you can bring them back together again there will be sweetness.\u201d <sup>12</sup></p> </li> <li>The Four Noble Truths<ol> <li>Life is suffering.</li> <li>Suffering is a product of desire.</li> <li>Escape from suffering is possible (Nirvana).</li> <li>Nirvana can be achieved by following the middle path.</li> </ol> </li> <li>We are not on a path to suffering &amp; happiness, but on a path of suffering &amp; happiness - life.  <p>\u201cSuffering doesn\u2019t exist by itself.\u201d <sup>13</sup></p> <p>\u201cAs long as there are human beings and the human mind, happiness and suffering will continue to manifest.\u201d <sup>14</sup></p> </li> <li>Reality is what exists even when you do not believe in it. <p>\u201cEven when the truth itself comes and knocks at your door, you will not open it.\u201d <sup>15</sup></p> </li> <li>\ud83c\udf4a <p>\u201cAs the tangerine becomes real, we become real. Life in that moment becomes real.\u201d <sup>16</sup></p> </li> </ul>"},{"location":"writings/a-mutual-meaning/#the-upanishads","title":"The Upanishads","text":"<p>What are the crucial points in this source that make it iconic, ideas I want to remember for the rest of my life?</p> <ol> <li>Facing death will drive us into a deeper understanding and consciousness. <p>\u201cThe capacity latent in all of us to face that grim awareness and use it as a drive to deepening consciousness.\u201d <sup>17</sup></p> </li> <li>Meditation is like practicing for death, learning to let go of everything except true Self.</li> <li>You must both transcend though meditation and live in the moment to overcome death. <p>\u201cThose who combine action with meditation cross the sea of death through action and enter into immorality though the practice of meditation.\u201d <sup>18</sup></p> </li> </ol> <p>Abstract</p> <p>The Upanishads by Eknath Eswaran is a modern translation and interpretation of the ancient Hindu texts that form the foundation of Vedanta philosophy. The book contains 18 Upanishads, each providing a deep insight into the nature of reality and the purpose of human existence. Eswaran\u2019s translation is accompanied by insightful commentary that sheds light on the text\u2019s meaning and relevance to modern life. He emphasizes the central message of the Upanishads: the unity of all beings and the importance of realizing this unity through self-knowledge and spiritual practice. With its emphasis on inner transformation and the pursuit of truth, The Upanishads provides a powerful guide for those seeking a deeper understanding of themselves and the world around them.</p> Notes <ul> <li>Hinduism \u2014&gt; We are each other.</li> <li>The students of the Upanishads are not solely expected to listen and understand them, but to realize them: that is \u2026  <p>\u201cTo make their truths an integral part of character, conduct, and consciousness.\u201d <sup>19</sup></p> <p>\u201cOnly a few even hear these truths; of those who hear, only a few understand and of those only a handful attain the goal.\u201d<sup>20</sup></p> </li> <li>Challenge provides meaning to life. <p>\u201cHuman beings cannot live without challenge. We cannot live without meaning.\u201d <sup>21</sup></p> </li> <li>Meant to shake your core, vibrate your body. <p>\u201cOM\u201d</p> </li> <li>Love yourself.</li> <li>The journey of life is the pursuit of the Self, yet the Self will never be reached. <p>\u201cThough motionless, he outruns all pursuit.\u201d <sup>22</sup></p> <p>\u201cThe Self seems to move, but is ever still.\u201d <sup>22</sup></p> </li> <li>The self is within you, and thus as already been discovered? \u201cSeems\u201d vs. \u201cIs\u201d - Perception seems to show that I am not the Self, yet in reality, I am.  <p>\u201cHe seems far away, but is ever near. He is within all, and he transcends all.\u201d <sup>22</sup></p> </li> <li>You must find the Self in many areas as to not be blinded.  <p>\u201cThose who see all creatures in themselves and themselves in all creatures know no fear. Those who see all creatures in themselves and themselves in all creatures know no grief. How can the multiplicity of life delude the one who sees its unity?\u201d <sup>18</sup></p> </li> <li>The Self = God (or part of it) <p>\u201cEven that very Self am I!\u201d <sup>23</sup></p> </li> <li>Brahman is unity, reality, everything. <p>\u201cIt is the power of Brahman that makes the mind to think, desire, and will.\u201d <sup>24</sup></p> </li> <li>A little Ren\u00e9 Descartes-esk - Cogito, Ergo Sum <p>\u201cKnow the Self as lord of the chariot, the body as the chariot itself, the discriminating intellect as the charioteer, and the mind as reins.\u201d <sup>25</sup></p> </li> <li>The changeless - the Self - is within you, not in the world around you. <p>\u201cSeek not the changeless in the world of change.\u201d <sup>26</sup></p> </li> <li>Your body restrains your soul. <p>\u201cWhen the dweller in the body breaks out in freedom from the bonds of flesh\u201d <sup>27</sup></p> </li> <li>There is no need to remove everything external completly, just don\u2019t let it restrain you. <p>\u201cWhen all desires that surge in the heart are renounced, the mortal becomes immortal. When all the knots that strangle the heart are loosened, the mortal becomes immortal.\u201d <sup>28</sup></p> </li> <li>There is a difference between the Self and the individual - something must be done to extract the Self from the individual. <p>\u201cLike oil in sesame seeds, like butter in cream, like water in springs, like fire in firesticks, so dwells the Lord of Love, the Self, in the very depths of consciousness. Realize him through truth and meditation.\u201d <sup>29</sup></p> </li> <li>How to meditate \u2026 <p>\u201cBe seated with spinal column erect and turn your mind and senses deep within. With the mantram echoing in your heart, cross over the dread sea of birth and death. Train your sense to be obedient. Regulate your activities to lead you to the goal. Hold the reins of your mind as you hold the reins of restive horses. Choose a place for meditation that is clean, quiet, and cool \u2026 and pleasing to the eye. In deep meditation aspirants may see forms like snow or smoke. They may feel a strong wind blowing or a wave of heat. They mat see within them more and more light \u2026 these are signs that they are well on their way to Brahman. Health, a light body, freedom from cravings, a glowing skin, sonorous voice, fragrance of body: these signs indicate progress in the practice of meditation.\u201d <sup>30</sup></p> </li> <li>Kena - \u201cby whom?\u201d - \u201cBy whose mere presence does that desire arise which moves the universe?\u201d</li> <li>Disassociate from your body and worldly things through meditation. <p>\u201cTo be the Self is to go beyond death. Realize the Self, the shining goal of life!\u201d <sup>31</sup></p> </li> </ul> <p>Eknath Easwaran\u2019s rationale behind his interest in Hindu philosophy in the introduction to his translation of The Upanishads hit rather close to home with me and flipped my preconceived beliefs of meaning on its head. Eswaran acknowledges that he was fortunate in life, having \u201cevery innocent source of joy the world offered\u201d, yet despite this seeming success, he was left always looking for more, a greater sense of meaning <sup>1</sup>. </p> <p>One of the driving forces existing behind my assignment of meaning in my life has been my emotions. When I consider the value or meaning of something, I ask if this thing makes me happy if I derive joy from this thing, and by doing so have found that my life experience has been net-happy, and rather joyful.</p> <p>Like Easwaran, my personal philosophy has granted me lots of sources of joy offered by the world, and I\u2019m quite content with this established mindset. Yet, it\u2019s not difficult to look past this facade of joy with the question, does this really matter? While I am often able to answer this question with a simple \u201cyes, as it makes me happy\u201d, I sometimes wonder why my happiness matters in the first place. </p> <p>Like Easwaran, I\u2019ve found an answer to this in these Hindu (and Buddhist) traditions. The Hindu sage\u2019s justification for human actions with the phrase \u201cjust for the heaven of it\u201d seems to give more credit to my \u201cyes, as it makes me happy\u201d response than I have given myself. My happiness matters because I exist and because I exist, anything that makes me happy enough to assign meaning to also matters. The aspect of both Hinduism and Buddhism that I appreciate is that there\u2019s not much more to it than that, existence is meaning. Thich Nhat Hanh acknowledges that to exist \u201cis a wonder\u201d, to \u201cbe alive\u201d, \u201cbreathe in\u201d, and \u201cmake one step\u201d is meaningful, valuable, and \u201calready wonderful enough\u201d <sup>2</sup>. The simple, \u201c innocent\u201d sources of joy matter because both they exist, and I exist <sup>3</sup>.</p> <p>While I was initially content with deriving meaning from existence, I found continuing our dive into eastern philosophies to only further rid me of skepticism, specifically how do we know we (and everything else) truly exists? How can we be sure that we arewere not in a simulation? </p> <p>Questions like these have never proved to cause me any existential dread, as my mindset has always paralleled that of Havelock Ellis seen in his quote \u201cDreams are real as long as they last. Can we say more of life?\u201d. I\u2019ve set aside the potential of reality not being real as insignificant as regardless of its truth, the experiences I\u2019ve experienced must be real, because I\u2019ve experienced them. </p> <p>While my disregard for this potential fallacy of existence has allowed me to preserve my sanity, Thich Nhat Hanh\u2019s presentation of the concept of Interbeing as a tool to aid in our understanding of the Heart Sutra, also seemingly defines existence in a way that it itself must exist. The single most important given that Hanh outlines as existence is found in his quote \u201cbecause you are there, I can be here\u201d, without the existence of other things, we ourselves would not exist \u201cnothing can be by itself alone\u201d <sup>4</sup>. We can be sure both we and everything exists because \u201cwe are inextricably interrelated\u201d, our nature is a product of everything else, and everything else is a product of us <sup>5</sup>. I\u2019ve found through Hanh\u2019s analysis of the Heart Sutra that meaning is derived from existence, and existence only exists because of interbeing. </p> <p>If meaning in life is a product of our existence, and our existence only exists because of the existence of everything else, it follows that the meaning of our life stems from the existence of everything else.</p> <p>Naturally, the same logic may be followed for the individual existence of everything, where your existence provides the meaning for someone else\u2019s life. This concept takes the personal agency I appreciated so much before my introduction to Hinduism and Buddhism and expands it massively. The world not only impacts me, but I impact it; I\u2019ve been granted the agency to not only assign meaning and value in my life, but provide meaning for others through these assignments. </p> <p>Hanh uses this concept to justify morality and desire for personal happiness saying \u201cTo smile is not to smile only for yourself; the world will change because of your smile\u201d <sup>6</sup>. I found this mutual importance of everything providing and receiving meaning for/from everything else a reflection of the \u2018We\u2019 culture held by many Hindu/Buddhist practicing communities, and this new level of understanding of life\u2019s meaning has not deterred my individuality, but instead caused me to embrace the rest of the world in the same way as I would myself.</p> <p>I\u2019ve found myself to be more appreciative of others and conscious of my surroundings after my introduction to Hindu and Buddhist texts. Not only have I kept my individual agency to assign value and meaning to the things in life which bring me joy, but these texts have filled the void left by Nietzsche with an inherent meaning. They\u2019ve equipped me with understand how others impact me, and how I impact them, as well as how without others, there would be nothing. </p> <p>Most importantly the understanding I\u2019ve gained over meaning and value in our reality has catalyzed my ability to create the conditions in life where what I desire may occur.</p> <ol> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 13.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d,  111.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 33.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 39, 40.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 65.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 121.\u00a0\u21a9</p> </li> <li> <p>Hanh, Thich Nhat. \u201cThe Other Shore\u201d. Palm Leaves Press, 2017, 65.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 40.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 41.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 52.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 65.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 87.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 93.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 93.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 103.\u00a0\u21a9</p> </li> <li> <p>Hanh, \u201cThe Other Shore\u201d, 122.\u00a0\u21a9</p> </li> <li> <p>Easwaran, Eknath. \u201cThe Upanishads\u201d. Nilgiri Press, 2007, 64.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 58.\u00a0\u21a9\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 23.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 24.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 33.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 57.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 59.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 207.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 81.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 83.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 87.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 91.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 162.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 163-164.\u00a0\u21a9</p> </li> <li> <p>Easwaran, \u201cThe Upanishads\u201d, 215.\u00a0\u21a9</p> </li> </ol>"},{"location":"writings/abstractingdeath/","title":"Abstracting Death","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/abstractingdeath/#abstracting-death","title":"Abstracting Death","text":"Teddy Warner| Oct 2025 |  ~2 mins <p>Death is an infinite abstraction.</p> <p>Experience grows proportionally to life span. Every second, every day, every year provides more content for us to abstract upon.</p> <p>Death is, by definition, the end of our living experience, and as such, as we approach death, our ability to experience it approaches \\(0\\). Inversely, however, our capacity to abstract approaches \\(\\infty\\).</p> <p>In this, our experience before birth and after death MUST be different, as before birth we do not hold any lived experience to abstract upon.</p> <p>Before birth: potential for experience is \\(\\infty\\), while capacity to abstract is \\(0\\).</p> <p>After death: potential for experience is \\(0\\), while capacity to abstract is \\(\\infty\\).</p> <p>This supports the Western projection of linear time:</p> \\[ \\text{Birth} \\xrightarrow[\\qquad\\qquad\\qquad\\qquad\\qquad\\text{Time}\\qquad\\qquad\\qquad\\qquad\\qquad]{} \\text{Death} \\] <p>Where experience accumulates unidirectionally, and abstraction capacity grows monotonically with time, and not the eastern view of a cyclical timeline, as we do not enter this life with the ability to abstract.</p> <p>We must experience first.</p>"},{"location":"writings/benevolentfreedom/","title":"A Case for the Philosopher King(s)","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/benevolentfreedom/#a-case-for-the-philosopher-kings","title":"A Case for the Philosopher King(s)","text":"Teddy Warner| Oct 2025 |  10\u201312 mins <p>In his 2009 essay: The Education of a Libertarian, Peter Thiel argues freedom and democracy are mutually exclusive.</p> <p>\u201cI no longer believe that freedom and democracy are compatible.\u201d<sup>8</sup></p> <p>My American knee-jerk reaction to this is total shutdown. What a ridiculous proposition - after all, it was upon the natural liberties of man that our country was founded, right?</p> <p>With a bit of additional consideration, one may recall that America\u2019s founding fathers consciously constrained the voter pool to land-owning white men.<sup>1</sup> While I am certainly of the belief that Locke\u2019s natural rights apply to all humans alike (\u201cThe poorest he that is in England hath a life to live, as the greatest he.\u201d<sup>2</sup>), this limited democracy with conscious voter constraints is what built our republic. A constrained voter pool established the freedoms so entrenched that we take them for granted some 250 years later. The question is not whether all humans deserve equal rights, but whether all humans are equally positioned to protect those rights through the voting process.</p> <p>A constrained voter pool is naturally quite an efficient form of democracy - efficient enough to establish the trial by fire that is the American experiment, and certainly much more efficient than our current government (low bar, admittedly). </p> <p>To optimize for freedoms, we would be better served by having the most proactive, benevolent members of society make up our voter base.</p> <p>I don\u2019t think it\u2019s particularly hard for me to argue that efficiency is a good thing. The concern with a constrained voter pool is what they choose to use that efficiency to achieve. If malicious actors attain positions of influence, this becomes particularly problematic. This, in its logical extreme, is what we call a dictatorship.</p>"},{"location":"writings/benevolentfreedom/#the-spectrum-of-governance","title":"The Spectrum of Governance","text":"<p>The prerequisite in our Western definition of \u201cdictator\u201d is malice. This directly implies an inverse: some benevolent being capable of executing absolute freedom for all individuals under their governance. This is essentially Plato\u2019s Philosopher King - the ideal form of a benevolent government.<sup>3</sup></p> <p>You could plot both these governmental structures on a horseshoe of sorts, alongside our current system of semi-popular democracy, which is somewhere between the prior two.</p> \\[ \\begin{array}{ccc} \\text{Dictator} &amp; &amp; \\text{Philosopher King} \\\\ \\text{(Anti-Divine/Malicious)} &amp; &amp; \\text{(Divine/Benevolent)} \\\\[1em] \\Big\\uparrow &amp; &amp; \\Big\\uparrow \\\\ \\text{Efficiency} &amp; &amp; \\text{Efficiency} \\\\[0.5em] \\nwarrow &amp; &amp; \\nearrow \\\\[0.5em] &amp; \\text{Semi-Popular Democracy} &amp; \\\\ &amp; \\text{(Current System)} &amp; \\\\ &amp; \\downarrow &amp; \\\\ &amp; \\text{Low Efficiency} &amp; \\end{array} \\] <p>Yet as Plato himself discovered in his failed attempts to implement this ideal in Syracuse,<sup>4</sup> finding the MOST benevolent being in human form is an impossible task (as the MOST benevolent form implies the divine). The existence of some MOST benevolent thing directly implies an inverse: some MOST malicious thing (the anti-divine). While contemporary dictators may act like this anti-divine entity, claiming they themselves embody pure evil would be hyperbolic. Nonetheless, we can list qualities of these dictators and hold in our minds some Platonic form of what such concentrated malevolence looks like.</p> <p>Similarly, we can begin to list objective traits that must be held by the MOST benevolent being, as we must hold in our minds some Platonic form of what we believe to be divine. The most serious challenge to this framework is the recursive problem: who gets to define what \u201cbenevolent\u201d means? The very act of defining it seems to require the benevolent actor themself. </p> <p>Fortunately, there exist certain traits viewed as benevolent good that span all cultures, customs, and religions (these are essentially our shared conception of what is divine). A few off the top of mind: Compassion for suffering, Truthfulness, Justice, Wisdom, Temperance, and Courage. There\u2019s some objectivity to be found here, these traits are convergent discoveries across human civilizations. The longest-lasting religious institutions have survived precisely because they encode principles that enable human flourishing, and we can look to them for guidance whilst defining these objectively benevolent traits.</p> <p>A true philosopher king must certainly embody all of these divine traits, and while no individual human holds all of these, we can use them as a filter search to begin to find the most benevolent voters.</p>"},{"location":"writings/benevolentfreedom/#the-current-trajectory","title":"The Current Trajectory","text":"<p>Plato argued in his Seventh Letter that states will suffer until either philosophers become rulers or rulers become true philosophers.<sup>4</sup> Our society will continuously progress toward disorder, dysfunction, and lack of freedoms by the sole fact that enacting our will to establish freedoms has become - and will continue to become - more convoluted.</p> <p>Political systems tend toward increasing entropy (\u201cCthulhu swims left\u201d), creating more positions of power and complexity that enable coordination failures.<sup>5</sup> Constraining the voter base would decrease political entropy, reducing the convolution that impedes our ability to enact and preserve freedoms. I propose a thought exercise to satisfy this end: construct a list of the traits you believe the MOST benevolent being must hold, and work backwards from this ideal list into a list of voter requirements that would year the most benevolent, efficient voter pool. I think you\u2019ll be surprised at the ease of objectivity here.</p> <p>With such a list of voter requirements in hand, one could refine the voter base into a group of \u201cPhilosopher King(s)\u201d of sorts. This is conceptually similar to Plato\u2019s Guardian class, yet notably still constrained by American institution design (which are built to harnesses self-interest rather than relying on virtue alone).<sup>6</sup></p> <p>Stability in such a system comes from grounding benevolent voter qualifications in the longest-lasting practices. If we constrain the voter base by criteria that have predicted societal flourishing across centuries and cultures, we hedge against contemporary bias. We\u2019re not asking \u201cwhat traits do I think are benevolent?\u201d but \u201cwhat traits have consistently enabled human thriving?\u201d  </p> <p>John Stuart Mill attempts to define voters fit for democracy in Considerations on Representative Government: \u201cActive, self-helping character types promote progress better than passive ones.\u201d<sup>7</sup> There are two ways forward with this constraint 1) We refine the voter base to only the most active, self-helping voters, or 2) We educate more potential voters into more active, self-helping citizens. </p> <ul> <li> <p>Option 1 is in practice the current American structure, given the majority of active voters are elderly and focused on existential aid for their own benefit (think Social Security and Medicaid, which are certainly important topics but should not dominate the political sphere to the extent that they do). Voters with the greatest interest in self-help often hold antiquated interests that strip attention from our societal drive towards freedom and progress.</p> </li> <li> <p>Option 2 is wonderful in spirit, but pragmatically most of the US voter base is extremely passive (or inactive all together) despite substantial efforts at education of the population. Only 2 in 3 eligible voters exercise their vote, and the other third of the country lives as though we are essentially under a tyranny (with allegiance to one of two political parties).<sup>9</sup> Very few people are \u201cactive\u201d in self-help, much less the help of all society. Mill noted himself that representative government doesn\u2019t work with extremely passive populations accustomed to tyranny.</p> </li> </ul> <p>The \u201cactive\u201d and \u201cself-helping\u201d character types become much stronger when we start to de-bias the voter base from antiquated and malicious interests with the objective, benevolent traits our longest-lasting practices have held and valued for so long.</p> <p>So can freedom and democracy exist alongside each other? Certainly! We\u2019ve been running a trial by fire of this experiment for 250 years now. Yet a true popular democracy cannot indefinitely maintain freedom. At best, it is an inefficient means to make adequate progress toward the continuous goal of freedom, and at worst, it empowers malicious actors who hinder our pursuit.</p> <p>The question before us is not whether all humans deserve their natural liberties - they do, universally. Rather, it is whether all humans are equally positioned to protect those rights through voting. If we want to continue our Western pursuit of freedom and natural liberties, we would find it best to be prudent with our voter pool: careful not to empower malice, yet instead promote benevolence.</p> <ol> <li> <p>\u201cWho Voted in Early America?\u201d Colonial Williamsburg Foundation. Most states required property ownership or taxpaying qualifications for voting until the early 19th century https://www.colonialwilliamsburg.org/discover/civics/who-voted-in-early-america/\u00a0\u21a9</p> </li> <li> <p>The Putney Debates (1647). Inscription at St Mary\u2019s Church, Putney. https://www.putneydebates.com/\u00a0\u21a9</p> </li> <li> <p>Plato. The Republic. Translated by Benjamin Jowett. Books V-VII discuss the philosopher king concept.\u00a0\u21a9</p> </li> <li> <p>Plato. Seventh Letter. Plato\u2019s account of his failed attempts to implement his political philosophy in Syracuse. https://classics.mit.edu/Plato/seventh_letter.html\u00a0\u21a9\u21a9</p> </li> <li> <p>Yarvin, Curtis (Mencius Moldbug). \u201cA Gentle Introduction to Unqualified Reservations.\u201d https://www.unqualified-reservations.org/pdfs/gentle_introduction_to_ur.pdf\u00a0\u21a9</p> </li> <li> <p>Madison, James. \u201cFederalist No. 51.\u201d The Federalist Papers, 1788. https://avalon.law.yale.edu/18th_century/fed51.asp\u00a0\u21a9</p> </li> <li> <p>Mill, John Stuart. \u201cConsiderations on Representative Government\u201d (1861). https://www.gutenberg.org/files/5669/5669-h/5669-h.htm\u00a0\u21a9</p> </li> <li> <p>Thiel, Peter. \u201cThe Education of a Libertarian.\u201d Cato Unbound, April 13, 2009. https://www.cato-unbound.org/2009/04/13/peter-thiel/education-libertarian/\u00a0\u21a9</p> </li> <li> <p>U.S. Census Bureau. \u201c2024 Presidential Election Voting and Registration Tables.\u201d Press Release, 2025. https://www.census.gov/newsroom/press-releases/2025/2024-presidential-election-voting-registration-tables.html\u00a0\u21a9</p> </li> <li> <p>Madison, James. \u201cFederalist No. 10.\u201d The Federalist Papers, 1787. https://avalon.law.yale.edu/18th_century/fed10.asp\u00a0\u21a9</p> </li> <li> <p>Popper, Karl. The Open Society and Its Enemies, Vol. I: The Spell of Plato (1945). https://antilogicalism.com/wp-content/uploads/2018/04/open-society-1.pdf\u00a0\u21a9</p> </li> </ol>"},{"location":"writings/decisiveness/","title":"Ex Nihilo Nihil Fit","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/decisiveness/#ex-nihilo-nihil-fit","title":"Ex Nihilo Nihil Fit","text":"Teddy Warner| Jan 2025 |  2\u20133 mins <p>Ex nihilo nihil fit. Nothing comes out of nothing.</p> <p>Buridan\u2019s Ass</p> <p>If you place a mule equidistant between two identical bales of hay, the mule will starve to death.</p> <p>Tech twitter frequently utilizes the mantra \u201cYou can just do things\u201d.</p> <p>For a while, I thought of this as quite profound inspiration, until I read a tweet that said something along the lines of \u201cCongrats Tech Bros! You\u2019ve discovered agency!\u201d Upon reading this satirization I promptly decided that the phrase was a naive description of a known concept. What this says about the malleability of my opinions is quite interesting, but for now, let\u2019s stick to what comes after adequate/ample agency.</p> <p>you can just do things</p>\u2014 Sam Altman (@sama) December 21, 2024 <p>you can just do things</p>\u2014 Sam Altman (@sama) December 21, 2024 <p>you can just do things</p>\u2014 rahul (@0interestrates) October 18, 2024 <p>you can just do things</p>\u2014 rahul (@0interestrates) October 18, 2024 <p>you can just do things</p>\u2014 kache (@yacineMTB) January 6, 2025 <p>you can just do things</p>\u2014 kache (@yacineMTB) January 6, 2025 <p>While considering Anaximander\u2019s beliefs on Astronomy, Aristotle (for whatever reason) says if a man were placed at the center of a circle with food at various points of the circumference, he would starve to death for lack of reason to choose one portion of food over another. While this would be a more apt scenario in a discussion of free will, not the heavenly bodies, Aristotle\u2019s consideration nonetheless extends the implications of Buridan\u2019s satirical ass to mankind.</p> <p>Having agency or \u201cjust doing things\u201d calls for timeliness in decision-making, as almost always, the things most worth doing come with a finite window of opportunity. </p> <p>Decisiveness is a virtue both in the process of doing novel/interesting/worthwhile things and in the aftermath of your actions.</p> <p>To decide on what you want to work on in the first place you must be decisive. To publish and share your work with the world you must be decisive. You must be decisive amongst opportunities that arise in the wake of your actions.</p> <p>All of these decisions individually may seem intuitive, yet when you look at all the decision points collectively, you may recognize the need for decisiveness.</p>"},{"location":"writings/downforce/","title":"To Drive with Downforce","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/downforce/#to-drive-with-downforce","title":"To Drive with Downforce","text":"Teddy Warner| Nov 2024 |  ~2 mins <p>When learning to race cars, one of the steepest challenges drivers endure is mastering cornering techniques. To compete in the upper echelons of racing, drivers must navigate corners at speeds approaching the limits of tire grip. </p> <p>While race car tires are designed to maintain grip even at high speeds, they have limits. As speed increases, the lateral forces while rounding corners can exceed the tire\u2019s ability to maintain grip. In essence, at the speeds required to win, a race car\u2019s tires cannot physically hold themselves to the track.</p> <p>To account for this, engineers implement wings and underbody designs to generate a \u201cdownforce\u201d upon the car while traveling at high enough speeds. This force increases the vertical load on the tires, effectively increasing their grip without adding additional weight.</p> <p> <sup>1</sup></p> <p>Race car drivers must learn to utilize downforce. Doing so entails rounding corners at speeds high enough to generate sufficient vertical load. Not fast enough and the driver will understeer. Too slow and the driver will be passed.</p> <p>To drive with downforce requires the confidence to continue where you can no longer rely on the tools you already hold. It requires the confidence to accelerate to a high enough speed to win, even when not facing a straight path.</p> <p>Thus the bottleneck is confidence. You must believe you can continue to accelerate where your basic tools fall short and only confidence can keep you grounded.</p> <p>You must seek the Torpediniformes and novel experiences, and new challenges beyond the skills and abilities you currently hold.</p> <p>You must endure challenges where confidence is your only tether.</p> <p>You must apply downforce.</p> <ol> <li> <p>Sebastian drew this.\u00a0\u21a9</p> </li> <li> <p>https://driver61.com/uni/different-corner-technique/\u00a0\u21a9</p> </li> <li> <p>https://www.reddit.com/r/EASPORTSWRC/comments/ljkyy2/what_is_the_fastest_cornering_technique/\u00a0\u21a9</p> </li> </ol>"},{"location":"writings/efd/","title":"The Emotion/Feeling Discontinuity","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/efd/#the-emotionfeeling-discontinuity","title":"The Emotion/Feeling Discontinuity","text":"Teddy Warner| Dec 2024 |  5-6 mins <p>Emotions can be defined as \u201cguesses\u201d about the future. They are your windows to the preconceived notions you hold about what has happened and what\u2019s to come.</p> <p>You cannot see the world \u201cas it is\u201d. None of us can. </p> <p>You see the world as the story you tell about it. The worldview you hold may thus be described as a product of one\u2019s input data, and the weights they apply to it.</p> <p>Emotions exist to help you make decisions (i.e. fight or flight).</p> <p>An emotion is:</p> <ul> <li>A Behavior</li> <li>A Process</li> <li>A Sensory System within the body (Interoception)</li> </ul> <p>And quite notably, emotions are distinct from feelings. A professor once told me emotions may be described as a \u201cconstant flow of physical bodily changes built by evolution to protect the whole organism\u201d whereas feelings are the \u201chidden, conscious awareness of emotion.\u201d</p> <p>This distinction may be distilled into objective (emotion) and subjective (feeling).</p>"},{"location":"writings/efd/#adjusting-your-weights","title":"Adjusting your Weights","text":""},{"location":"writings/efd/#self-determination-theory","title":"Self-Determination Theory","text":"<p>There are three integral conditions needed to alter your mental weight and mold the worldview you desire:</p> <ol> <li>Autonomy - your abilities.</li> <li>Belonging - your interpersonal connections.</li> <li>Confidence - your self-belief.</li> </ol> <p>The first two conditions are solved problems. Build autonomy by studying and creating. Build belonging by genuinely putting yourself out there and devoting time to fostering your connections.</p> <p>Confidence however is a different beast. This third condition precedes the two prior, as it takes confidence to learn and confidence to meet and connect with others.</p> <p> </p> <p>To foster confidence, one may take advantage of the Emotion/Feeling Discontinuity. Emotions precede decision-making. Humans \u2018feel\u2019 first and think second. Given emotions are objective physiological responses, the independent variable in confidence, the \u2018weight\u2019 for you to adjust is your interpretation of emotion: your feelings.</p> <p>By adjusting your interpretations of emotions, largely through changing your self-talk, you may rapidly build your confidence and comfort with discomfort.</p> <p>A tangible example of this: is the emotional (physiological) response your body exhibits during feelings of both excitement and anxiety are practically identical (a \u2018drop\u2019 in the position of your stomach, etc.). As Dr. Glenn Fox, a neuroscientist at USC, puts it: by simply slamming your fists on the table and exclaiming \u201cI\u2019m Excited!\u201d, regardless of how silly it sounds, you\u2019ll begin to morph your feelings of anxiety into excitement.</p> <p>Self-talk is everything in expanding confidence. Do not tolerate negative self-talk. Actively scold doubt and anxiety.</p>"},{"location":"writings/efd/#what-we-resist-persists","title":"What we Resist, Persists","text":"<p>Do the opposite of what the emotion is telling you if you\u2019d like to change it.</p> <p>Feel X \u2192 Do Y</p> <p>X = Signal of high stress and negative self-talk.  Y = Activity to release stress (Pound your fists down and exclaim \u201cI\u2019m Excited!).</p> <p> </p> <p>A few other practices to improve self-talk: gratitude and optimism.</p> <p>Gratitude is one of the key tenets of positive self-talk and one of the best predictors of life satisfaction. </p> <p>\u201cBut what is more honorable than gratitude? The scope for practicing this virtue is as broad as life itself.\u201d - Seneca (On Benefits, 1.1.1 and 4.19.4 respectively)</p> <p>Gratitude, like self-talk, is a skill, a muscle to be trained. Practice it.</p> <p>Optimism is the belief that actions in the present will lead to better outcomes in the future, regardless of circumstance. Thus optimism does not connotate a positive disposition, rather indicates an individual\u2019s ability to work through hard things.</p>"},{"location":"writings/efd/#gradient-descent-into-life-satisfaction","title":"Gradient Descent (into life satisfaction)","text":"<p>To practice positive self-talk, you must take care of your brain and your body. Follow the rule: \u201cWhatever you do for your body, is good for your brain.\u201d</p> <p>Focusing on fun/flow, movement, sleep, and fuel can generally catalyze your gradient descent into life satisfaction. </p> <p>There\u2019s no one-size-fits-all formula for ensuring adequate amounts of all of these. Just follow the mantra introduced at the top of What We Resist, Persists: if you\u2019re not happy with your current balance, do the opposite of what your emotions are telling you to shift towards life satisfaction.</p> <p>I want to end with a few questions I was recently discussing with a friend:</p> <ol> <li>Why do you do what you do?</li> <li>When are you at your best?</li> <li>When are you at your worst?</li> </ol> <p>When I\u2019m not consistent in physical activity, proper nutrition, and adequate sleep, I become rather lethargic throughout the day.</p> <p>When I begin the day with agency, I finish it as such. Thus I must act with agency. Doing so keeps me productive, creative, connected, and appreciative.</p> <p>You\u2019re in a perpetual rivalry between what you imagine you can do, and what you can achieve.</p> <p>Confidence is key.</p> <p>An addendum from Calix: </p> <p>\u201cI usually see the confidence and this subject as the midwit meme\u201d</p> <p></p> <p>\u201cIn the beginning when we\u2019re naive, we just do things. Then when we progress, we become self-aware judgmental, and scared, and we overthink things. In the end, we learn ourselves, and we just go back to doing things.\u201d</p> <ol> <li> <p>https://pubmed.ncbi.nlm.nih.gov/24220041/\u00a0\u21a9</p> </li> <li> <p>https://psycnet.apa.org/record/2000-16270-010\u00a0\u21a9</p> </li> <li> <p>https://psycnet.apa.org/record/2007-08438-002\u00a0\u21a9</p> </li> <li> <p>https://psycnet.apa.org/record/2004-21028-032\u00a0\u21a9</p> </li> <li> <p>https://www.gutenberg.org/files/3794/3794-h/3794-h.htm\u00a0\u21a9</p> </li> <li> <p>https://www.amazon.com/Range-Generalists-Triumph-Specialized-World/dp/0735214484\u00a0\u21a9</p> </li> <li> <p>https://www.amazon.com/Why-We-What-Understanding-Self-Motivation/dp/0140255265\u00a0\u21a9</p> </li> <li> <p>https://doi.org/10.1093/acrefore/9780190236557.013.154\u00a0\u21a9</p> </li> <li> <p>https://pubmed.ncbi.nlm.nih.gov/23535977/\u00a0\u21a9</p> </li> <li> <p>https://pubmed.ncbi.nlm.nih.gov/23945981/\u00a0\u21a9</p> </li> <li> <p>https://pubmed.ncbi.nlm.nih.gov/21942377/\u00a0\u21a9</p> </li> <li> <p>https://pubmed.ncbi.nlm.nih.gov/25795524/\u00a0\u21a9</p> </li> <li> <p>https://onlinelibrary.wiley.com/doi/10.1017/S0048577201393198\u00a0\u21a9</p> </li> <li> <p>https://psycnet.apa.org/record/2012-11874-012\u00a0\u21a9</p> </li> <li> <p>https://pubmed.ncbi.nlm.nih.gov/19558399/\u00a0\u21a9</p> </li> <li> <p>https://pubmed.ncbi.nlm.nih.gov/20364902/\u00a0\u21a9</p> </li> </ol>"},{"location":"writings/foj/","title":"The Fallacy of Justice","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/foj/#the-fallacy-of-justice","title":"The Fallacy of Justice","text":"Teddy Warner| Dec 2022 |  8\u201310 mins <p>Socrates and O\u2019Brien from George Orwell\u2019s 1984 discuss to whom justice is most beneficial. Although O\u2019Brien is a fictional character first conceived when Orwell published 1984 in 1949, this dialogue has been constructed as such where O\u2019Brien has been placed in Socrates\u2019 reality, and each man holds a chronically correct conception of events up to ~400 B.C.E. The dialogue begins with a private conversation between Socrates and O\u2019Brien somewhere in classical Athens after the two had exchanged formalities.</p> <p>O\u2019BRIEN. Socrates, whom do you believe is the true beneficiary of justice? Justice presents itself in a way that one would believe is most advantageous to the exploited, as it offers a form of protection from those in power, yet I refuse to believe it would exist in our society if it were negative to those who control society altogether.</p> <p>SOCRATES. O\u2019Brien, I\u2019d argue that justice is no more advantageous to the people being exploited than it is to those in power.</p> <p>O\u2019BRIEN. Socrates, it cannot be true that justice provides no advantage to anyone. You are aware that some people\u2014many even\u2014believe justice to be a virtue.</p> <p>SOCRATES. Yes, I\u2019m aware of this.</p> <p>O\u2019BRIEN. And if these people perceive justice to be virtuous, then it follows that justice must provide some benefit to said people to make them believe so.</p> <p>SOCRATES. Not necessarily, O\u2019Brien.</p> <p>O\u2019BRIEN. Well then, if justice is neither beneficial to the people in power, nor to those exploited by them, to whom is it beneficial?</p> <p>SOCRATES. To find this, O\u2019Brien, we must expand our categorization of society beyond one group of exploiters and another of exploited.</p> <p>O\u2019BRIEN. How so, Socrates? If some people in society are exploited, then it must follow that there are exploiters of those people.</p> <p>SOCRATES. Yet exploitation is not equal among the exploited. There then must exist some middle which could be split from our prior exploited group\u2014those who are in control of enough power to not be outright exploited, but also do not wield enough to hold it absolute. Thus we may say three groups exist: a high, the power-wielding; a middle, those in pursuit of the power held by the high; and a low, who are exploited by the prior two in both their pursuit and maintenance of power.</p> <p>O\u2019BRIEN. Do you mean to imply that these middle people are the ones to whom justice is advantageous?</p> <p>SOCRATES. Yes, as justice enables the existence of this middle in a society. When perceptions of justice control legislation, exploitation is dampened enough for those who have enough power to exploit others, yet not enough to secure absolute power, to act on their ability to exploit others. Without justice, this distinction drawn between the middle and the low could not exist.</p> <p>O\u2019BRIEN. To this point, I follow, Socrates, yet I do not understand why justice would not be equally beneficial to the low, as well as a tool to be utilized by the high.</p> <p>SOCRATES. That cannot be the case, O\u2019Brien, as the benefits of justice only outweigh its consequences in the case of the middle. Justice hinders the ability of the high and limits their power, and while it may provide protection to the low, justice is not sufficient to provide a means by which the low may gain power. Justice, in its most advantageous form, serves as a tool in the pursuit of power for those who do not already have it absolute, yet are in control of enough of it to not be outright exploited\u2014those who are in \u201cthe middle.\u201d Tell me, O\u2019Brien, would you agree that the aspirations of a ruling class, those who currently wield the power, must be to maintain and expand their power by any possible means?</p> <p>O\u2019BRIEN. That must be the case, yes.</p> <p>SOCRATES. So then, O\u2019Brien, justice must not be beneficial to the high, as it inhibits their maintenance and exertion of power. If we agree that power is central to the aspirations of the high, would it not follow that the middle would share in this pursuit?</p> <p>O\u2019BRIEN. That is a reasonable expectation, Socrates. Something tells me you are getting ready to outline that the goals of the low also follow this pursuit of power.</p> <p>SOCRATES. Not quite, O\u2019Brien. In a society where justice is promoted, the low may be protected from much of the potential exploitation of the higher two classes, yet never wield any power themselves. Ignorant of the luxuries of power, the low must only hope for a just society in which they become equal to the middle and high.</p> <p>O\u2019BRIEN. So then, if the low have goals aligned with justice and are in pursuit of the virtuous equality it, in its purest form, will provide, would the low not be the class to which justice is most beneficial, with the middle and high instead deriving their success from power?</p> <p>SOCRATES. In a society where justice was integrated in its purest form, you would be correct, O\u2019Brien. The middle and high would lose all power to exploit the low, and thus a society would exist where all men are equal. Yet in a pragmatic sense, a society like this could not come about, not due to a lack of understanding of justice and ethics, but instead due to our acknowledged aspirations of both the middle and high.</p> <p>O\u2019BRIEN. Why is that?</p> <p>SOCRATES. In a hierarchical, semi-just society, as we\u2019ve laid out in our discussion of the low, middle, and high, the power of any two classes would presumably be sufficient to exploit the third. With members of society pursuing or maintaining the finite power that society has to offer, any attempt to establish a system of pure justice would be corrupted by the middle attempting to use the low as a means of acquiring power, and would be outright rejected by the high, who naturally will do anything in their power to maintain the power they wield. The only class which may truly achieve their aspirations in such a society is the middle, who hold the power to manipulate justice to enlist the help of the low, revolt against the high, and seize power for themselves, before promptly slinging the low back down into their exploited position.</p> <p>O\u2019BRIEN. I see now, Socrates, that justice is most beneficial to the middle, and not at all to the low, providing a delusional hope which enables a never-ending cycle of exploitation by the middle and high in their pursuit of power. Yet still I do not believe it to be undesirable by the high.</p> <p>SOCRATES. Do you mean to suggest that you believe the high would like to lose their power, O\u2019Brien?</p> <p>O\u2019BRIEN. Not at all. You would agree if it is said that a cycle of power transfer as you\u2019ve described would only be possible with the ignorance of the low, right Socrates?</p> <p>SOCRATES. That must be true if the middle is continually able to manipulate the low for their own aspirations.</p> <p>O\u2019BRIEN. Then this ignorance of the low must not only enable the potential for exploitation by the middle, but also the hierarchical structure of society itself. Irrational hope for equality by the low is the belief that leads to the low\u2019s psychological acceptance of exploitation from those in power in the first place. These hopes may be manipulated by both the middle and the upper to direct blame for the plight inflicted on the low to some scapegoat, furthering the ignorance of the low. If those in power paint said scapegoats to be unjust and negative to society, then the low will accept exploitation as a means to enable their societies to thrive. The low will become willing to suffer, and their hopes of justice then justify the tyranny of the high. Thus, Socrates, justice must be beneficial for both those who are in power and those who are in pursuit of it, as it provides a means for the acquisition of power\u2014the trading of power between the prior \u201chigh\u201d and the prior \u201cmiddle\u201d\u2014as well as a justification for the exploitation of the low by the high once in power.</p> <p>SOCRATES. Then it can be said that any man who wields power, whether the high, with absolute power, or the middle, with enough to exploit the low, is benefited by justice. Although on the surface it seems to hinder their power, justice actually provides the means by which they can acquire and justify their power in the first place.</p>"},{"location":"writings/juggling/","title":"Learning to Juggle","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/juggling/#learning-to-juggle","title":"Learning to Juggle","text":"Teddy Warner| Oct 2024 |  5-7 mins <p>This semester I\u2019ve found myself in quite an interesting class at the USC Marshall School of Business: BAEP 472 - The Science of Peak Performance.</p> <p>The course was written by Dr. Glenn Fox and Coach Pete Caroll, and its aspiration is rather straightforward, it seeks to equip students with a science-based approach to productivity (and every other facet of life).</p> <p>On the first day of class, as we discussed the structure of the weekly lecture, and notably, how we would have a 15-minute break in the middle of each lecture, Dr. Fox told us a story.</p> <p>Eight years ago, when he had first sat down with Pete to flush out BAEP 472, they had a debate over this quote on quote \u201cbreak\u201d. While both agreed it would be antithetical to a class on peak performance to simply allow students to rot on their phones, Pete, being a football coach, was a proponent of mandated physical activity. </p> <p>While theoretically, a few burpees in the middle of my business lecture may actually be quite the welcome change of pace, Dr. Fox stood by the fact that he couldn\u2019t have a bunch of USC students getting sweaty in his classroom. </p> <p>The two went back and forth on this issue for a while, toying with different exercises and approaches, until finally, it hit them: they would teach all the students how to juggle.</p> <p>Every semester for the past 8 years BAEP 472 has been a filled class, partly because students are interested in the neuroscience behind enhancing productivity, yet more probably because students want to take the juggling class.</p> <p>So here it is, the blog post where I\u2019ll be documenting my journey learning to juggle (at the moment I\u2019m just getting the hang of two balls lol), as well as discussing a few more tricks I use to spend less time on my phone:</p>"},{"location":"writings/juggling/#within-thumbs-reach","title":"Within Thumb\u2019s Reach","text":"<p>The easiest way to eradicate temptation to doom-scroll is to follow the \u201cout of sight, out of mind\u201d mantra - and this principle\u2019s inverse works as well. </p> <p>Place healthy apps within your thumbs reach. By doing so, you increase the likelihood of future you opening those apps in an attempt to doom-scroll, get bored, and shutting off your phone. Nathaniel from Practical Betterments has a few good \u201cplausible scenarios\u201d for placing healthy apps within reach:</p> <ul> <li>The weather app reminds you to go outside and water the plants \u2014 you do and the fresh air is invigorating.</li> <li>The calendar app has a blank space you fill with a meaningful real-life event \u2014 say a meeting with an old friend or a pub quiz.</li> <li>Your flashcard app helps you learn trivia that wins you first place in a pub quiz, impressing everyone, including a stranger, who despite your normal-sized thumbs, learns to love you for who you are.</li> </ul> <p> </p> <p>Sometimes just tempting yourself with a healthy option isn\u2019t sufficient, however. If you have a truly toxic, doom-scrolling relationship with an app, delete it! I frequently try to dream up potential future use cases for apps that I don\u2019t want to delete. You can fight this by simply realizing that you can always reinstall the app as needed (yet usually once it\u2019s gone, the urge to scroll disappears).</p>"},{"location":"writings/juggling/#even-lower-phone-brightness","title":"Even Lower Phone Brightness","text":"<p>The \u201cminimum\u201d brightness on you\u2019re phone is actually still quite bright. </p> <p>Bright enough that even when on the lowest possible brightness melatonin suppression and circadian rhythm disruption occur. </p> <p>This is because manufacturers optimize their screens to be visible in broad daylight, and thus even with night mode enabled, the minimum brightness is too bright for a dark room. </p> How to lower your brightness below the \"minimum\" on iPhone <p>On iOS will be enabling an Accessibility feature: <code>Reduce White Point</code>.</p> <p>Here\u2019s how:</p> <ol> <li>Open Settings</li> <li>Navigate to <code>Accessibility</code></li> <li>Navigate to <code>Accessibility Shortcut</code></li> <li>Select <code>Reduce White Point</code></li> </ol> <p>To activate this shortcut simply triple-click the power button.</p> How to lower your brightness below the \"minimum\" on Android <p>On Android phones, this feature is called <code>Extra dim</code>.</p> <ol> <li>Open Settings</li> <li>Navigate to <code>Accessibility</code></li> <li>Toggle on <code>Extra dim</code> under the <code>Display</code> section</li> </ol> <p>To activate, swipe down twice from the top of the screen and turn <code>Extra dim</code> on.</p>"},{"location":"writings/juggling/#grey-tinted-spectacles","title":"Grey-tinted Spectacles","text":"<p>Taking things a step further, you can rid your phone of all of those addicting colors with a greyscale <code>Color Filter</code>.</p> <p>To do so open settings and navigate to <code>Accessibility</code> -&gt; <code>Display &amp; Text Size</code>, then:</p> <ol> <li>Select <code>Color Filters</code></li> <li>Toggle on <code>Color Filters</code></li> <li>Select <code>Greyscale</code></li> </ol> <p> </p> Making a greyscale filter shortcut <p>While I\u2019ve found this to be the single most productive trick in eradicating the desire to stare blankly into the abyss (my phone screen), I do occasionally like to indulge, and thus have set up a shortcut on my home screen for easy toggling.</p> <p>You can create a greyscale filter shortcut of your own in the iOS Shortcuts app. </p> <p>First, open the app and tap the plus icon in the top right corner, then:</p> <ol> <li>Select <code>Add Action</code></li> <li>Search for <code>Set Color Filters</code></li> <li>Select <code>Turn color filters On</code></li> <li>Click on <code>Turn</code> and select <code>Toggle</code></li> </ol> <p>After clicking done, you\u2019ve set up your shortcut! You can now add it to your home screen for easy access, or even set it to run automatically each day. </p> <ol> <li> <p>https://www.reddit.com/r/AndroidQuestions/comments/czwzwp/why_is_android_minimum_brightness_so_high/\u00a0\u21a9</p> </li> <li> <p>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5839336/\u00a0\u21a9</p> </li> <li> <p>https://cemind.org/blog/screen-brightness-and-how-it-negatively-impacts-your-sleep/\u00a0\u21a9</p> </li> <li> <p>https://www.csl.sri.com/users/jha/papers/cases15.pdf\u00a0\u21a9</p> </li> <li> <p>https://practicalbetterments.com/create-a-shortcut-for-even-lower-phone-brightness\\\u00a0\u21a9</p> </li> <li> <p>https://practicalbetterments.com/place-healthy-apps-within-thumbs-reach/\u00a0\u21a9</p> </li> <li> <p>https://www.calm.com/blog/screen-time-before-bed\u00a0\u21a9</p> </li> <li> <p>https://www.health.harvard.edu/staying-healthy/blue-light-has-a-dark-side\u00a0\u21a9</p> </li> <li> <p>https://www.popularmechanics.com/technology/gadgets/how-to/a9340/how-to-fix-your-phones-brightness-settings-15839497/\u00a0\u21a9</p> </li> </ol>"},{"location":"writings/kitchenchronicles/","title":"Kitchen Chronicles","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/kitchenchronicles/#kitchen-chronicles","title":"Kitchen Chronicles","text":"Teddy Warner| Sep 2025 |  5\u20136 mins <p>I moved into a new apartment a few months ago. It\u2019s got a pretty bangin\u2019 kitchen.</p> <p>I\u2019ve always loved cooking. I\u2019m roughly two-thirds certain that the dexterity developed in the kitchen catalyzes hardware development and vice versa (most of the best machinists I\u2019ve met are great cooks). So, seemingly working on your chef skills is a productive means of improving your work (if in the kitchen) and, additionally, you get some tasty rewards for doing so, win-win!</p> <p>Whether people admit it or not, I\u2019m certain everyone has some objective downtime (no matter how brief) throughout their day. Presumably, people spend this on their phones? or through some unproductive leisure (see Learning to Juggle)? I actually feel somewhat naive about what people do all day. Regardless, there\u2019s some downtime, and one of the most delightful ways to spend these brief segments of leisure is cooking! </p> <p>By pivoting into kitchen tasks with your downtime, you can take on some pretty in-depth meals, namely because you can afford to prep \u201call day\u201d. I wake up in the mornings and often prep for dinner a bit. Get back from the office and prep a bit more. Get back from the gym and Boom! It takes me all of 15 minutes to finish cooking. Pretty awesome.</p> <p>People seem to performatically hark on how they \u201cdon\u2019t have time to cook\u201d or convince themselves their unable to fit it in the day. If all these 996 twitter warriors spent half the time they did tweeting in the kitchen, San Francisco would be 100x better fed. Don\u2019t let these preformative preachers guilt you into ordering DoorDash, nine times out of ten, cooking yourself is one of the most productive pastimes you can hold. You\u2019re going to have some downtime, everyone does - don\u2019t waste it on doomscrolling, cook!</p>"},{"location":"writings/kitchenchronicles/#scrapbook","title":"Scrapbook","text":"<p>Since moving into my new place, I\u2019ve been documenting every meal I\u2019ve cooked in a scrapbook I keep on my fridge:</p>"},{"location":"writings/kitchenchronicles/#recipes","title":"Recipes","text":"<p>I\u2019m usually quite a bit of a proponent of \u201cvibes-based\u201d cooking. No need to follow a recipie to a tee or preplan meals. 90% of the time I just start throwing some stuff together and a meal pops out (I find this substantkially reduces the mental overhead of cooking and saves me some greif in my prep work). That being said, I\u2019ve certainly collected some great recipes over the years. Here are some of my favorites:</p> <p>Greek Yogurt Mac and Cheese, Marry Me Chicken, Rosemary Focaccia, Baked Feta With Honey, Sheet-Pan Brussels Sprouts and Bacon, Stuffed Mushrooms, French Onion Soup, Skillet Fried Plantains, Banana Pancakes, Chocolate-Chip Banana Bread, Cheesy Hasselback Potato Gratin, Ginger Beer-Glazed Butternut Squash With Gremolata , Baked Beans, Beef Short Ribs With Red Wine and Chile, Fried Okra With R\u00e9moulade, Neapolitan Pizza Dough, Spinach Artichoke Dip, Mediterranean Chicken Thighs, Southern Collard Greens with Bacon, Dutch Oven Bread, Pickle Fried Chicken Recipe, Pork Carnitas, Oven Baked Ribs, Mediterranean Roasted Cauliflower, Hollandaise Sauce, Old-Fashioned Beef Stew, Lamb Biryani, Garlic Tahini Sauce, Short Ribs With Red Wine and Chile, Gochujang BBQ Ribs With Peanuts and Scallions, Chimichurri, Zhug, Basil Pesto, Crispy Rice With Salmon and Avocado, Baked Potato Soup, Blueberry Syrup, Ricotta Pasta Alla Vodka, Vermont Curry, Chicken Katsu, Cuban Sandwich, Beef Bourguignon, Brown Stew Pork Shoulder, Gochujang Buttered Noodles, Vietnamese Caramel Pork and Eggs, Rosemary Rack of Lamb With Crushed Potatoes, Crispy Gnocchi With Burst Tomatoes and Mozzarella, Plantains With Jammy Tomatoes and Eggs, The Ritz-Carlton\u2019s Blueberry Muffins, Sour-Cream Coffee Cake, Classic Zucchini Bread, Pumpkin Bread, Classic Apple Pie, Parker House Rolls, Cranberry Lemon Bars, Crispy Mushroom Focaccia, Praline Pecans, Sweet Spiced Pecans, Thai Tea Tres Leches Cake, Oatmeal-Raisin Cookies, Brown Butter Chocolate Chip Cookies, Roasted Rhubarb Cobbler, Olive Oil Cake, Lavender and Orange Blossom Cookies, Rum-Raisin Carrot Cake, Hush Puppies, Creamed Spinach</p> <p>Even if I don\u2019t want to fully commit to a recipe, I find skimming over this block of favorites almost always provides some nice inspiration.</p>"},{"location":"writings/on-becoming-a-godfather/","title":"On Becoming a Godfather","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/on-becoming-a-godfather/#on-becoming-a-godfather","title":"On Becoming a Godfather","text":"Teddy Warner| Aug 2025 |  10\u201313 mins Yo, we'd love for you to be [REDACTED]'s Godfather. 4:50 PM Barrett it confers great benefits like, being able to speak in a raspy voice. 4:50 PM Barrett that would be on honor 4:51 PM Teddy <p>I was raised Catholic, as was my mom. My dad converted to Catholicism when I was young, and faith was always present in our household. I attended Catholic school in my youth - though this was partly practical (Catholic schools in Chicago let you start kindergarten a year early, perfect for my working professional parents).</p> <p>The Catholic education system in Chicago was wonderful\u2014full of smart people looking to thoughtfully engage with their faith. I never questioned my faith in my childhood. It was what I knew, and I embraced it fully, serving as an altar boy for several years.</p> <p>In 2016, my family moved to North Carolina for my dad\u2019s work. I was just starting middle school.</p> <p>My mom wanted to keep my siblings and me in Catholic school, so I started sixth grade at a large Catholic middle school. I found my new school dismally easy and started coasting. More troubling, I hadn\u2019t found the same thoughtful engagement with faith; instead, I found what I would call \u201cculturally Catholic\u201d (we go to church, we do the things, because this is what we are told to do).</p> <p>Maybe it was this new Catholic culture, or maybe just my entry into the teenage years, but I started to question a lot.</p> <p>For a while, I acted as though I were too \u201ccool\u201d for Catholicism. While I kept up my practice - attended weekly mass, got confirmed - I also stopped singing, started picking flaws with any homily I could, and sought logical inconsistencies in the church with a fine-tooth comb. My practices had fallen to the level of \u201ccultural Catholicism,\u201d while all my thoughtful engagement turned to \u201cdebunking\u201d the faith I was brought up in.</p> <p>Fortunately, I\u2019m certainly not the first Catholic to experience this.</p> <p>I changed schools in eighth grade, transferring to a secular private school that was much more intellectually engaging. I started research and writing, eventually finding all my free time outside school (and sometimes when I really should have been studying) taken up by whatever my latest project was. I finally had a proper outlet for \u201cthoughtful engagement,\u201d though my participation and attitude towards faith had been quite tarnished.</p> <p>Outside of my projects, I became fascinated by philosophy, and eventually, found myself in a philosophy class my senior year of high school. I held the Classics in high reverence, alongside my contemporary favorites: Niezche and Dostoevsky. Yet when we took on Catholic philosophy and even secular attempts at \u201cproving\u201d the faith (ahem \u2026 Descartes), I took up my old search for logical inconsistencies (with a much greater rigor than any other era/domain we covered in the class). </p> <p>One of the quams of attending a secular school is that this appears to be the norm. The brightest young, often left-leaning, high school minds want to rebel against institution and prove their intellectual prowess, and there is no target more apt than the Catholic church. I fell into this bucket of students, desperately wanting to free myself from any intellectual \u201cprerequisites\u201d that had been \u201cthrust\u201d upon me, and with no one willing to take the other side, I ruthlessly kept picking for logical inconsistencies. </p> <p>I ended my high school career with a focus on Eastern philosophy. Thich Nhat Hanh\u2019s The Other Shore was a particular favorite of mine (see: A Mutual Meaning), as I found it provided a sense of peace and resolution to many outstanding questions: What matters? What am I to do with my life? (both of which felt particarly pressing as I ended my time in high school - see: On Turning Twenty) I\u2019ve always had a laissez-faire nature, and rarely get too worked up about decisions, and found this eastern philosophy to be a really nice confirmation that this is, in fact, a sane way to live.</p> <p>I think it was through my acceptance of this eastern philosophy (initially through an entirely secular lens) that I finally allowed my faith to slowly creep back into my life. </p> <p>I moved to California after high school and had a brief stint at university before moving to the Bay Area to work and research full-time. As I lived and grew on the cutting edge, I began to realize how woefully naive I had been.</p> <p>When I first experienced \u201ccultural Catholicism,\u201d my ego rose to a place where I felt all the knowledge I\u2019d amassed was somehow too substantial, too worthy, to bother thoughtfully engaging with Faith any longer. As it turns out, we know extraordinarily little about the world and our reality. The atheist argument falls apart when you consider the scientific vanguard! There\u2019s so much we don\u2019t know, and more notably, so much where logic and science fall short.</p> <p>Take, for instance, what happened before the Big Bang? Or what lies beyond the observable universe? How does subjective experience arise from neural computation? What determines the boundary between conscious and non-conscious systems? What determines emergent behaviors and phase transitions? What is the relationship between mathematical objects and physical reality? How do we handle infinite regressions in causal explanations? </p> <p>The list goes on.</p> <p>The first gulp from the glass of natural sciences will turn you into an atheist, but at the bottom of the glass God is waiting for you.</p> <p>\u2013 Werner Heisenberg</p> <p>When I sat down to record a video for my application to the Thiel Fellowship in late January this year, I read this quote from one of my favorite German physicists. I think it\u2019s the most eloquent summary of my adolescent Catholic experience.</p> <p>One may place themselves, their intellect, in higher regard than faith as a whole (this is quite easy to justify when you have no one to thoughtfully engage your faith with!), and this will drive you mad. Man simply doesn\u2019t know the world well enough to justify or debunk the faith, and as such, we cannot view this as a logical problem (nor a tool for bright high school students to prove their intellectual independence).</p> <p>Rather, we must simply believe.</p> <p>John 20:24-29</p> <p>24 Now Thomas, called the Twin, one of the twelve, was not with them when Jesus came. 25 The other disciples therefore said to him, \u201cWe have seen the Lord.\u201d</p> <p>So he said to them, \u201cUnless I see in His hands the print of the nails, and put my finger into the print of the nails, and put my hand into His side, I will not believe.\u201d</p> <p>26 And after eight days His disciples were again inside, and Thomas with them. Jesus came, the doors being shut, and stood in the midst, and said, \u201cPeace to you!\u201d 27 Then He said to Thomas, \u201cReach your finger here, and look at My hands; and reach your hand here, and put it into My side. Do not be unbelieving, but believing.\u201d</p> <p>28 And Thomas answered and said to Him, \u201cMy Lord and my God!\u201d</p> <p>29 Jesus said to him, \u201cThomas, because you have seen Me, you have believed. Blessed are those who have not seen and yet have believed.\u201d</p>"},{"location":"writings/on-becoming-a-godfather/#no-mans-land","title":"No Man\u2019s Land","text":"<p>I propose one may think of the dynamics of faith and science as a trenched battlefield from the top down (this is more of a visual metaphor, not meant to imply a necessary conflict between faith and science). Both faith and science have many entrenched positions: Science predicts natural phenomena, explains our perceptions, and maps measurable cause-and-effect relationships, while Faith provides existential meaning, moral frameworks, and addresses questions of ultimate purpose and transcendence.</p> <p> </p> <p>These two fronts can (theoretically) exist in beautiful harmony. The space between them - a no man\u2019s land of sorts - remains particularly interesting. It is this no man\u2019s land that becomes an origin of doubt for many. If there\u2019s a true unknown, one not understood through faith nor science, it seems natural for the human mind to imagine how we could discover and justify that thing rationally (which is, in fact, the essence of science).</p> <p>Yet even if we could successfully discover and justify every unknown within this no man\u2019s land, there would still be the trench of faith. This is because, as discussed earlier, there\u2019s a line at which science and secular logic fall short (most notably on the vanguard). G\u00f6del was our living proof of this.</p> <p>More likely, however, we can clear the fog of this no man\u2019s land through the progression of both fronts: the thoughtful engagement of both faith and science. This would certainly yield the most rewarding understanding of ourselves, our duty, and our place in the cosmos.</p>"},{"location":"writings/on-becoming-a-godfather/#the-way-to-love","title":"The Way to Love","text":"<p>In preperation for the Baptism, I\u2019ve been reading the last meditations of Father Anthony De Mello: The Way to Love. A few of my favorite thoughts thus far:</p> <p>Many people deceive themselves into unhappiness, but there is never a moment when you don\u2019t have everything you need to be happy. Happiness is quite literally the most intrinsic experience there is.</p> <p>Our society (particularly Silicon Valley - where I live) has an unbelievably misconceived concept of happiness, and it usually follows the lines of \u201cif I achieve [insert greatness/success/fame/etc. ], then I will be happy\u201d. These things may bring momentary joy, but certainly not happiness. This \u201cpath to happiness\u201d is so commonly held that it never occurs to most to question it! </p> <p>How many genuinely happy people do you know? probably very few (if you\u2019re lucky), so clearly our current perception of what leads us to happiness is wrong.</p> <p>People are so brainwashed by this false \u201cpath to happiness\u201d that they don\u2019t even realize how unhappy they are. This is particularly harmful as it\u2019s counterproductive to their cognitive outputs! The odds of a person achieving their extrinsic goals of greatness/success/fame/etc. are decreased significantly when they lack true intrinsic support (of comfort with oneself and happiness)</p> <p>The reason we are unhappy is that we are focusing on what we don\u2019t have (or what we \u201caspire to\u201d if we want to use nicer terms). Many souls that were subjected to the most terribly evil experiences in human existence (concentration camps, apartheid, etc.) were documented as holding an enduring happiness, even in the face of these extrinsic atrocities.</p> <p>And you mean to tell me we can\u2019t be happy to?</p> Ill have to buy a cat which i can slowly pet during all of my meetings 4:51 PM Teddy 4:52 PM Teddy but seriously this is awesome 4:52 PM Teddy"},{"location":"writings/on-turning-twenty/","title":"On Turning Twenty","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/on-turning-twenty/#on-turning-twenty","title":"On Turning Twenty","text":"Teddy Warner| Aug 2025 |  9\u201311 mins <p>Today I turned twenty. Kind of crazy (or at least feels more substantial than the past few years).</p> <p>Three years ago, I had a long think about what I wanted to do with myself, with my future. I was sitting in my high school\u2019s woodshop after school and had a few hours to kill while watching a CNC machine hum. I loved engineering (and still do). Yet, I couldn\u2019t help but feel as I progressed nearer and nearer to university, the parts of engineering I loved most (tangible building, making, experimenting) would fade away in favor of a more meticulous, tedious commitment to theory.</p> <p>Whatever I was to do in the future would probably need to stray from the bliss of publishing my passions to favor a more pragmatic output, and in turn, I would be losing the very thing that I was finally starting to gain recognition for.</p> <p>This certainly felt like a dilemma. Everyone I knew, and I always associated myself with engineering, and unsurprisingly, I aspired to continue my pursuit in the field at university. That being said, I\u2019ve never been one for dismal work and dreaded the idea of physics class after physics class with less and less opportunity to build and experiment.</p> <p>I wasn\u2019t quite sure where I\u2019d end up or what I\u2019d be doing, but this uncertainty never really bothered me much. In fact, for a few months, I thought I might become a YouTuber (and even made a banger video for one of my projects: We Built the Alleged Hans Niemann Chess Cheating Device) as it felt like a good means of financially justifying my continued work on my projects.</p> <p>It was around this time in my life that one of my old friends/coworkers told me about this program he was in at USC: the Iovine and Young Academy. This program was pretty epic, and it looked to address my dilemma exceedingly well: the academy spans engineering, business, and design - a great balance for the aspiring maker. I applied, got in, and moved to California. It was awesome.</p> <p>I loved university, I loved the classes, I loved the people. I met some of my closest friends, worked on my first venture, and then at eighteen landed an early position on the Midjourney hardware team. A few months later, I found myself at a crossroads: I loved my work at Midjourney and got to work alongside the most incredible people, yet I had just turned nineteen and felt compelled to spend my next few years doing work of my own. Ultimately, I decided to return to USC.</p> <p>Yet after much reflection, I found university an exceedingly high-risk place to be. High risk that I wouldn\u2019t leave a profound impact on the world, as the crux of university involves learning/doing the same thing as everyone else. Any means of \u201cdifferentiating\u201d myself while in university (clubs/grades/projects/etc) are trivial compared to the differentiation possible by doing something else altogether.</p> <p>Around last Christmas, I floated my theory for Intempus and what I had been up to to my parents for the first time in a cafe in Washington, DC, and again floated the potential of dropping out. Somehow, this time that statement felt much more serious than the prior two. My mom told me something along the lines of \u201cyou keep telling me you want to drop out and then backing out. It\u2019s going to keep digging at you unless you give it a shot.\u201d</p> <p>So, three days into my fourth semester in college, I rented a U-Haul, packed up all my stuff, and moved to San Francisco to work on Intempus full-time. I had gone from not quite knowing what I wanted to do with myself, to finding a program which somehow solved my dilemma, to leaving that program altogether. I stand by this being one of my all time best decisions and took a considerable amount of mental back and forth, and several late night walks before I built up the courage to pull the trigger (I think talking with my Mom ultimately gave me the final boost of courage needed for this which I couldn\u2019t appreciate more. Thanks Mom, I love you!).</p> <p>For a while, I lived without accolade, sleeping in my buddy\u2019s kitchen a few feet from my desk. Nine months after starting Intempus and five months after dropping out, I received the Thiel Fellowship, a fellowship for young people who want to build new things instead of sitting in a classroom.</p> <p>I now run Intempus full-time, and get to profoundly impact the world at my own discretion.</p> <p>I don\u2019t think I could dream of a more wonderful position.</p>"},{"location":"writings/on-turning-twenty/#wonderful-blur","title":"Wonderful Blur","text":"<p>My final few teenage years have been an absolute blur of wonderful things. I\u2019ve captured some favorites below:</p>"},{"location":"writings/on-turning-twenty/#lessons","title":"Lessons","text":"<p>I\u2019ve picked up a lot throughout my teenage years. Here are some of the things that stuck.</p> Carpe Diem <p>The moment the first chime of your alarm rings through the air in the morning, stand up! Plant your feet on the ground, get up. Make your bed, brush your teeth, seize the day. Suck the marrow out of life, you\u2019ll feel the difference.</p> Causa Sui <p>According to Google, \u201cCausa sui\u201d is a Latin term meaning \u201ccause of itself\u201d or \u201cself-caused.\u201d It refers to something that is generated within itself, and is a concept explored in philosophy, particularly by Spinoza, and in psychology by Freud and Becker. In these contexts, it often relates to the idea of a being or entity that is not dependent on any external cause for its existence or nature.</p> <p>According to Teddy, \u201cCausa sui\u201d is man\u2019s most important mantra. Intrinsic motivation is everything and is the cause of passion and genius. It is by far the most important trait to foster. Just pursue the things you find interesting. You\u2019ll thrive! Extrinsic motivation never allows for true creativity - let your internal compass guide you, and you\u2019ll do impactful things. </p> <p>That said, I\u2019ve found that surrounding yourself with excellence is one of the easiest/most important ways to increase your excellence. Excellent people provide an excellent bar for you to hold your interensic aspirations.</p> Spontianety <p>Spontaneous should be fostered (to the highest extent that it can be). Hands down, the best things I\u2019ve had the pleasure of experiencing are a product of spontaneity. You just need to remain open and active.</p> Confidence is key <p>You\u2019re in a perpetual rivalry between what you imagine you can do and what you can achieve. </p> <p>Why not imagine the best possible version of yourself? As I wrote in The Emotion/Feeling Discontinuity:</p> <p>To foster confidence, one may take advantage of the Emotion/Feeling Discontinuity. Emotions precede decision-making. Humans feel first and think second. Given emotions are objective physiological responses, the independent variable in confidence, the \u2018weight\u2019 for you to adjust, is your interpretation of emotion: your feelings.</p> <p>By adjusting your interpretations of emotions, largely through changing your self-talk, you may rapidly build your confidence and comfort with discomfort.</p> <p>A tangible example of this: the emotional (physiological) response your body exhibits during feelings of both excitement and anxiety is practically identical (a \u2018drop\u2019 in the position of your stomach, etc.). As Dr. Glenn Fox, a neuroscientist at USC, puts it, by simply slamming your fists on the table and exclaiming \u201cI\u2019m Excited!\u201d, regardless of how silly it sounds, you\u2019ll begin to morph your feelings of anxiety into excitement.</p> <p>Self-talk is everything in expanding confidence. Do not tolerate negative self-talk. Actively scold doubt and anxiety.</p> Wonder <p>Many people would be much happier/ more content if they allowed themselves to wonder about the world. Also, go on walks and look up at the trees. I\u2019ve found this to be quite the wonder-inducing inspiration point.</p>"},{"location":"writings/on-turning-twenty/#advice","title":"Advice?","text":"<p>It\u2019s very important to me that as I progress into the next decade of my life, I do everything in my power to become the best version of myself. Any advice to keep in mind is much appreciated; just drop a comment below.</p>"},{"location":"writings/otherness-and-belonging/","title":"Otherness and Belonging","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/otherness-and-belonging/#otherness-and-belonging","title":"Otherness and Belonging","text":"Teddy Warner| Aug 2024 |  4-6 mins <p>Ive been thinking alot about the neuroscience of otherness and belonging. Here are my notes, I\u2019ll write a nice piece on this at some point.</p> <ul> <li>Maslow\u2019s Motivation Model<ul> <li>Foundational needs must be met or a person feels deficient.</li> </ul> </li> <li>Belonging is an emotion.</li> <li>Complex Emotions<ul> <li>Socially or culturally learned.</li> </ul> </li> <li>Motivational drives and emotions help humans maintain homeostasis.</li> <li>William James<ul> <li>\u201cWe feel afraid because we tremble, we do not tremble because we are afraid.\u201d</li> <li>Physical response to a stimulus is interpreted as an emotion by your brain.</li> <li>See Strack, Mertin, and Stepper (1988)</li> </ul> </li> <li>Gut bacteria play some role?<ul> <li>Enteric Nervous System</li> </ul> </li> <li>Theory of Mind (ToM)<ul> <li>Sally-Anne Test</li> </ul> </li> <li>Mirror Neuron<ul> <li>Not only replicates actions, but the intention or indication (i.e. sound, smell, etc.) of an action.</li> <li>Purposed based, not just a read of another kinematics</li> <li>We can mirror/emulate things that we can do, once outside of personal experience we cannot mirror.<ul> <li>Once experience is acquired, the mind may mentalize to aid in the simulation of another\u2019s actions. (a.k.a when the goal is impossible, you imagine, but you must be exposed to the action before you can mentalize it)</li> </ul> </li> <li>Can mirror somatosensory experiences.</li> <li>Either excess ability to empathies causes additional mirroring or vise versa.</li> </ul> </li> <li>Chameleon Effect</li> <li>Social pain triggers the same brain region as physical pain.<ul> <li>Less so in extroverts, as extroverts endure social pain to remain successful extroverts.<ul> <li>Can be trained - Introverts can train to become extroverts, humans may become desensitized to pain (i.e. soldiers, doctors, etc.)</li> </ul> </li> <li>Females tend to have higher physical pain tolerance, yet lower social pain tolerance.</li> <li>Watching another experience social pain triggers Mirror Neurons and thus triggers your pain matrix.</li> </ul> </li> <li>Emotions guide decisions<ul> <li>Somatic Marker Hypothesis<ul> <li>You cannot divorce emotion processing from decision making.</li> </ul> </li> <li>Emotions give us remorse, and thus guide future decisions: Emotions allow for learning with regards to decision making.</li> </ul> </li> <li>Moral Decisions - picking the best of the worse scenario<ul> <li>Neuroeconomics<ul> <li>The brain makes decision based upon value, value in moral decisions is derived from emotions.</li> </ul> </li> <li>The Trolley Problem<ul> <li>Personal vs. Impersonal actions illicit different responses to moral questions, even if the economics of the situation are the same, as more personal actions illicit a stronger emotional response.</li> <li>How would a self driving car make the decision?</li> </ul> </li> </ul> </li> <li>Man\u2019s Search for Meaning by Viktor Frankl</li> <li>Competence &amp; Warmth drive perceptions of others<ul> <li>Moral foundations theory<ul> <li>Dehumanization is derived from neural mechanisms for disgust.</li> </ul> </li> <li>Humans start to develop social polarization at 6 months.</li> </ul> </li> <li>You can train yourself to resist dehumanization and demonization<ul> <li>Primary via admittance and experience.</li> </ul> </li> <li>The Altruistic Personality by Oliner &amp; Oliner, 1992<ul> <li>The three best predictors of altruistic behavior are:<ol> <li>Expansiveness of ones social group</li> <li>Sense of agency</li> <li>A \u201cHabit\u201d of helping behavior</li> </ol> </li> </ul> </li> </ul>"},{"location":"writings/pinkhat/","title":"A Pink Hat","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/pinkhat/#a-pink-hat","title":"A Pink Hat","text":"Teddy Warner| Oct 2025 |  ~1 mins <p>A pink hat is a welcoming thing.</p> <p>Many of the most wonderful people I have met belong to the pink hat club.</p> <p>I am fairly certain wearing one makes you genuinely more personable.</p> <p>Be welcoming! Wear a pink hat.</p>"},{"location":"writings/seoulwallsunrise/","title":"A Seoul Wall Sunrise","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/seoulwallsunrise/#a-seoul-wall-sunrise","title":"A Seoul Wall Sunrise","text":"Teddy Warner| Oct 2025 |  2\u20133 mins <p>Do others contemplate the sunrise the same as I?</p> <p>The smartest minds I know claim to be locked in their thoughts. Almost always unable to perceive the world as it\u2019s happening, and rather, forced to analyze it critically in hindsight.</p> <p>But does anyone else think like I? Critically, sure. Abstractly, sure. But almost always tethered to my current experience?</p> <p>I seem to be generally unable to abstract beyond this. Entering some cognitive state where I\u2019m blissfully ignorant of my senses and the world around me, purely focused on the thought at hand.</p> <p>Rather, my anstrated thought is almost always one of self-perspection. I think about thinking about the world, if you will. My ability to be purely devoted to any given thought is thus hindered by the perception of myself having that thought in the first place. I\u2019m often so hyperaware of having thoughts, I find it difficult to purely devote myself to the thoughts themselves.</p> <p>I think some would describe this blissfully ignorant cognitive purity as the flow state (Csikszentmihalyi). The result of slowly stripping away all outer layers is to be left with pure thought. Yet have most of the brightest thinkers actually refined this practice? </p> <p>I think not (or at least this would come as a significant surprise). The question remains: does anyone else think like I?</p> <p>I had a moment of clarity after finishing this piece. I wrote this while sitting atop the Seoul Wall and was certainly favoring my blissfully ignorant thoughts rather than my beautiful surroundings. Clearly, I enter this \u2018flow state\u2019 on occasion, and most notably, this seems to be only possible when I\u2019m not trying to. So take this all with a grain of salt.</p>"},{"location":"writings/torpediniformes/","title":"Torpediniformes","text":"<p> <p> </p> <p> </p> <p> </p> <p> </p> <ul> <li>01 Home</li> <li>02 Projects</li> <li>03 Writing</li> </ul>  Writing Feed"},{"location":"writings/torpediniformes/#torpediniformes","title":"Torpediniformes","text":"Teddy Warner| May 2022 |  3-5 minutes <p>Na\u00efvet\u00e9 serves as the nemesis to bravery. Plato\u2019s text, The Meno, recounts a conversation between Socrates and Meno, initially exploring the teachability of virtue, before branching into definition of the attribute itself. </p> <p>Though The Meno concludes with an unsatisfactory crutch on the gods to \u2018explain\u2019 virtue and its origin, the recollection of \u2018inherent\u2019 knowledge produced by logical conversation throughout the text demonstrates the learning process. The bravery required to recollect your inherent knowledge lies in one\u2019s ability to realize their na\u00efvet\u00e9 on a topic and in their commitment to endure the numbness of the learning process. </p> <p>Socrates asserts a paralleled superiority to both \u201ccorrect opinion\u201d and \u201cknowledge\u201d concluding his conversation with Meno, providing a logical contrast to potential incorrect opinion or perceived knowledge <sup>1</sup>. It is this perceived knowledge &amp; incorrect opinion that shrouds one in na\u00efvet\u00e9 and hinders their willingness and/or ability to learn.</p> <p>Meno branches his conversation from the teachability of virtue to his attempt to explain virtue to Socrates, a topic he has made \u201cmany speeches\u201d about before \u201clarge audiences on a thousand occasions\u201d <sup>2</sup>. He applies societal ideals to his perception of virtue in his explanation, offering that men should be \u201cable to manage public affairs\u201d whilst \u201cbenefit[ing] friends\u201d and \u201charm[ing] his enemies\u201d, while women must preserve the \u201chome\u201d and its \u201cpossessions\u201d whilst remaining \u201csubmissive to her husband\u201d, and continues the trend for idealistic virtues held by the contemporary society <sup>3</sup>. </p> <p>Despite Meno\u2019s seeming grasp on the concept of virtue, Socrates\u2019 logical line of questioning cleaves away at his shroud of false, perceived knowledge until Meno is left \u201cquite perplexed\u201d <sup>4</sup>. It is this perplexity, or the \u2018numbness\u2019 as Socrates refers to, that is the result of the departure from the comfort of perceived knowledge and na\u00efvet\u00e9, yet also the brave first step to learning.</p> <p>In the case of learning, bravery not only is held by those willing (or thrust) into their \u2018first step\u2019, but required from those who choose to endure their numbness. </p> <p>Socrates\u2019 careful description of this numb state in his metaphor of the torpedo fish successfully emphasizes the lack of \u201charm\u201d despite the potential discomfort this state of \u201cperplex[ity]\u201d yields <sup>5</sup>. In the face of the torpedo fish, of the un-answered, unknown knowledge, bravery is to face the state of \u201cperplexity\u201d and strive for the knowledge one \u201cd[oes] not know\u201d <sup>6</sup>. </p> <p>Facing perplexed numbness is a natural transition from perceived knowledge to knowledge, and thus you do one no disposition by following the trail of logic and \u201cmaking [them] perplexed and numb as the torpedo fish does\u201d, while simultaneously exposing oneself as the potential subject of perplexed numbness <sup>5</sup>. </p> <p>Logic must be the torpedo fish, and the numbness induced by it the result of departure from na\u00efvet\u00e9 and potential false knowledge due to questioning and reason. To step beyond one\u2019s na\u00efve shroud in an attempt to recollect \u2018inherent\u2019 knowledge is the bravery of learning.</p> <p>Not only does The Meno depict the process of learning in its text, but the act of undertaking a complex classic in the contemporary day embodies the brave aspirations for the recollection of knowledge as well. </p> <ol> <li> <p>Plato, et al. Meno. Second edition. Hackett Publishing Company, Inc., 2002, 98c.\u00a0\u21a9</p> </li> <li> <p>Plato, et al. Meno, 80b.\u00a0\u21a9</p> </li> <li> <p>Plato, et al. Meno, 71e.\u00a0\u21a9</p> </li> <li> <p>Plato, et al. Meno, 80a.\u00a0\u21a9</p> </li> <li> <p>Plato, et al. Meno, 84b.\u00a0\u21a9\u21a9</p> </li> <li> <p>Plato, et al. Meno, 84c.\u00a0\u21a9</p> </li> </ol>"}]}